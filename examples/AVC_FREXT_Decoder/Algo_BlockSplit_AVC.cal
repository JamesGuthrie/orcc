/********************************************************************************

This software module was originally developed by 
Florian Decologne (IETR/INSA of Rennes), 
in the course of development of the ISO/IEC 23002-4 (Video Tool Library) 
for reference purposes and its performance may not have been optimized. 
This software module is an implementation of one or more tools as 
specified by the ISO/IEC 23002-4.

ISO/IEC gives You a royalty-free, worldwide, non-exclusive, copyright 
license to copy, distribute, and make derivative works of this software 
module or modifications thereof for use in implementations of the 
ISO/IEC 23002-4 in products that satisfy conformance criteria (if any). 

Those intending to use this software module in products are advised that 
its use may infringe existing patents. ISO/IEC have no liability for use 
of this software module or modifications thereof.

Copyright is not released for products that do not conform to audiovisual 
and image-coding related ITU Recommendations and/or ISO/IEC International 
Standards. 

Assurance that the originally developed software module can be used 
(1) in the ISO/IEC 23002-4 once the ISO/IEC 23002-4 has been adopted; and 
(2) to develop the ISO/IEC 23002-4: 

IETR/INSA of Rennes grants ISO/IEC all rights necessary to 
include the originally developed software module or modifications thereof 
in the ISO/IEC 23002-4 and to permit ISO/IEC to offer You a royalty-free, 
worldwide, non-exclusive, copyright license to copy, distribute, and make 
derivative works for use in implementations of the ISO/IEC 23002-4 in 
products that satisfy conformance criteria (if any), and to the extent 
that such originally developed software module or portions of it are 
included in the ISO/IEC 23002-4.  To the extent that IETR/INSA of Rennes
owns patent rights that would be required to make, use, or 
sell the originally developed software module or portions thereof 
included in the ISO/IEC 23002-4 in a conforming product, IETR/INSA of
Rennes will assure the ISO/IEC that it is willing to 
negotiate licenses under reasonable and non-discriminatory terms and 
conditions with applicants throughout the world.

ISO/IEC gives You a free license to this software module or modifications 
thereof for the sole  purpose of developing theISO/IEC 23002-4

IETR/INSA of Rennes retains full right to modify and use the 
code for its own purpose, assign or donate the code to a third party and 
to inhibit third parties from using the code for products that do not 
conform to MPEG-related ITU Recommendations and/or ISO/IEC International 
Standards. 

This copyright notice must be included in all copies or derivative works. 
Copyright (c) ISO/IEC 2008.
*****************************************************************************/

actor Algo_BlockSplit_AVC (int SAMPLE_SZ) 
		int(size=SAMPLE_SZ) Block_CAVLC,
		int(size=SAMPLE_SZ) Block_CABAC,
		bool Entropy_Type
		==>  
			int(size=SAMPLE_SZ) Block_Y_DC, 
			int(size=SAMPLE_SZ) Block_Y_AC,
			int(size=SAMPLE_SZ) Block_U_DC,
			int(size=SAMPLE_SZ) Block_U_AC,
			int(size=SAMPLE_SZ) Block_V_DC,
			int(size=SAMPLE_SZ) Block_V_AC:

  bool EntropyType := true; //CAVLC :true and CABAC: false
  bool TypeReceived := false;
  
  action Entropy_Type:[ x ] ==>
  guard
  	not TypeReceived
  do
  		EntropyType  := x;
  		TypeReceived := true;
  end
 
  CAVLC_Split: action ==>
  guard
  	EntropyType
  end
  
  CABAC_Split: action ==>
  guard
  	not EntropyType
  end
  
  //CAVLC Split
  
  CAVLC_splitY_DC: action Block_CAVLC:[ x ] repeat 16 ==> Block_Y_DC:[ x] repeat 16 
  end
  
  CAVLC_splitY_AC: action Block_CAVLC:[ x ] repeat 16 * 16 ==> Block_Y_AC:[ x ] repeat 16 * 16 
  end
  
  CAVLC_splitU_DC: action Block_CAVLC:[ x ] repeat 4 ==> Block_U_DC:[ x ] repeat 4
  end
  
  CAVLC_splitV_DC: action Block_CAVLC:[ x ] repeat 4 ==> Block_V_DC:[ x ] repeat 4 
  end
  
  CAVLC_splitU_AC: action Block_CAVLC:[ x ] repeat 8 * 8 ==> Block_U_AC:[ x ] repeat 8 * 8 
  end
  
  CAVLC_splitV_AC: action Block_CAVLC:[ x ] repeat 8 * 8 ==> Block_V_AC:[ x ] repeat 8 * 8 
  end
  
  //CABAC Split
  
  CABAC_splitY_DC: action Block_CABAC:[ x ] repeat 16 ==> Block_Y_DC:[ x] repeat 16 
  end
  
  CABAC_splitY_AC: action Block_CABAC:[ x ] repeat 16 * 16 ==> Block_Y_AC:[ x ] repeat 16 * 16 
  end
  
  CABAC_splitU_DC: action Block_CABAC:[ x ] repeat 4 ==> Block_U_DC:[ x ] repeat 4
  end
  
  CABAC_splitV_DC: action Block_CABAC:[ x ] repeat 4 ==> Block_V_DC:[ x ] repeat 4 
  end
  
  CABAC_splitU_AC: action Block_CABAC:[ x ] repeat 8 * 8 ==> Block_U_AC:[ x ] repeat 8 * 8 
  end
  
  CABAC_splitV_AC: action Block_CABAC:[ x ] repeat 8 * 8 ==> Block_V_AC:[ x ] repeat 8 * 8 
  end
  
  
  schedule fsm E_Type:
  
  	E_Type					(CAVLC_Split)			--> CAVLC_splitY_DC;
  
   
  	CAVLC_splitY_DC			(CAVLC_splitY_DC) 		--> CAVLC_splitY_AC;
    CAVLC_splitY_AC			(CAVLC_splitY_AC) 		--> CAVLC_splitU_DC;
  	CAVLC_splitU_DC			(CAVLC_splitU_DC) 		--> CAVLC_splitV_DC;
  	CAVLC_splitV_DC			(CAVLC_splitV_DC) 		--> CAVLC_splitU_AC;
    CAVLC_splitU_AC			(CAVLC_splitU_AC) 		--> CAVLC_splitV_AC;
    CAVLC_splitV_AC			(CAVLC_splitV_AC) 		--> CAVLC_splitY_DC;
    
    E_Type					(CABAC_Split)			--> CABAC_splitY_DC;
    
    CABAC_splitY_DC			(CABAC_splitY_DC) 		--> CABAC_splitY_AC;
    CABAC_splitY_AC			(CABAC_splitY_AC) 		--> CABAC_splitU_DC;
  	CABAC_splitU_DC			(CABAC_splitU_DC) 		--> CABAC_splitV_DC;
  	CABAC_splitV_DC			(CABAC_splitV_DC) 		--> CABAC_splitU_AC;
    CABAC_splitU_AC			(CABAC_splitU_AC) 		--> CABAC_splitV_AC;
    CABAC_splitV_AC			(CABAC_splitV_AC) 		--> CABAC_splitY_DC;
  end
  
end