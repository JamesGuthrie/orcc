/**
 * This FU is used to validate if the output of a stream cipher FU (or a FU network) matches the golden response.
 * 
 * FU ID: Validator_ARC4
 * Three input ports:
 * (1) IP1_CT: 
 * 	   Ciphertext from the stream cipher
 * (2) IP2_PT:
 * 	   Plaintext from the source stream cipher FU. This is used to extract the key stream from output text.
 * (3) IP3_GR:
 * 	   Golden response text from the souce stream cipher FU.
 * 
 * Developers: Shujun Li, Junaid Jameel Ahmad @ Uni-Konstanz 2010
 */

actor Validator_ARC4 () uint(size=8) IP1_CT, uint(size=8) IP2_PT, uint(size=8) IP3_GR ==> : // GR = Golden response

	int TEXT_SIZE = 64;
		
	List(type:String, size=16) hexDigits = [
		"0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "a", "b", "c", "d", "e", "f"
	];
	// The following procedure is for Orcc simulation.
	// Print a list of numbers with or without a line break at the end.
	procedure print_list(List(type:uint(size=8), size=TEXT_SIZE) x, bool bLineBreak)
	begin
		print("[ ");
		foreach int i in Integers(0,TEXT_SIZE-1) do
			print("0x"+hexDigits[x[i]>>4]+hexDigits[x[i] & 0x0f]+" ");
		end
		print("]");
		if bLineBreak then
			print("\n");
		end
	end
	// Uncomment the following lines if you want to simulate with OpenDF.
/*	function byte2hex (uint(size=8) x) --> String:
		"0x"+hexDigits[x>>4]+hexDigits[x & 0x0f]
	end
	function list2hex (List(type:uint(size=8), size=TEXT_SIZE) x) --> List(type:String, size=TEXT_SIZE):
		[byte2hex(x[i]) : for int i in Integers(0,TEXT_SIZE-1)]
	end */
	
	int errorCounter := 0;

	action IP1_CT:[ct] repeat TEXT_SIZE, IP2_PT:[pt] repeat TEXT_SIZE, IP3_GR:[gr] repeat TEXT_SIZE ==>
	do
		// Extract PRNG stream from OT.
		foreach int i in Integers(0,TEXT_SIZE-1)
		do
			ct[i] := bitxor(pt[i],ct[i]);
		end 
		// The following lines are for Orcc simulation.
		print("Actual Response = ");		
		print_list(ct,true);
		// Uncomment the following line if you want to simulate with OpenDF.
		// println("Actual Response = " + list2hex(ct));

		foreach int i in Integers(0,TEXT_SIZE-1)
		do	
			if ct[i]!=gr[i] then
				errorCounter := errorCounter+1;
			end
		end
		// The following lines are for Orcc simulation.
		print("Golden Response = ");
		print_list(gr, true);
		// Uncomment the following line if you want to simulate with OpenDF.
		// println("Actual Response = " + list2hex(gr));
		
		if errorCounter>0 then
			println("The received response does not match the golden response!");
			println("Total number of errorneous bytes: " + errorCounter + " / " + TEXT_SIZE);
		else
			println("Congratulations! The received response matches the golden response!");
		end
	end
end
