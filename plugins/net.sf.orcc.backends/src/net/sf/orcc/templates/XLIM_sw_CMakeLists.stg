printActor(id, actor) ::= <<
$if (!actor.system)
$$id$.c
$endif$
>>

xlim2c(id, actor) ::= <<
$if (!actor.system)$
run_xlim2c($id$)
$endif$
>>

printInstance(instance) ::= <<
$if (instance.actor)
$$printActor(id=instance.id, actor=instance.actor)$$
endif$
>>

printXlim2c(instance) ::= <<
$if (instance.actor)
$$xlim2c(id=instance.id, actor=instance.actor)$$
endif$
>>


CMakeLists(network) ::= <<
# Generated from $network.name$

cmake_minimum_required (VERSION 2.8)
project ($network.name$)

#set build type to Release
SET(CMAKE_BUILD_TYPE Release)

# Common packages required
find_file(ACTORS actors)

find_package(SDL REQUIRED)
find_package(LibXml2)

# Common include directories
include_directories(\${ACTORS}/include \${SDL_INCLUDE_DIR})

macro (run_xlim2c actor) 
  add_custom_command (
    OUTPUT \${CMAKE_SOURCE_DIR}/\${actor}.c
    DEPENDS \${CMAKE_SOURCE_DIR}/\${actor}.xlim
    COMMAND \${ACTORS}/bin/xlim2c \${CMAKE_SOURCE_DIR}/\${actor}.xlim \${CMAKE_SOURCE_DIR}/\${actor}.c)
endmacro(run_xlim2c)

$network.instances: printXlim2c()$

set(filenames
\${ACTORS}/share/sysactors/c/display-sdl.c
$network.instances: printInstance()$
$network.name$.c
)

set(ORCC_C_FLAGS "-DORCC")

add_definitions(\${ORCC_C_FLAGS})

add_executable($network.name$ \${filenames})

target_link_libraries($network.name$ \${ACTORS}/lib/libactors-rts.a \${SDL_LIBRARY} \${LIBXML2_LIBRARIES})

>>
