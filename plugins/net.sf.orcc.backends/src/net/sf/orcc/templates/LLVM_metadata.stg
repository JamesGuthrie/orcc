decl_MD(actor) ::= <<
!source = !{$source_decl_MD(actor)$}
!name = !{$name_decl_MD(actor)$}
!action_scheduler = !{$actionScheduler_decl_MD(actor)$}
$if(actor.inputs.list)$
!inputs = !{$actor.inputs.list: {$fifo_decl_MD(actor=actor, port=it)$}; separator=", "$}
$endif$
$if(actor.outputs.list)$
!outputs = !{$actor.outputs.list: {$fifo_decl_MD(actor=actor, port=it)$}; separator=", "$}
$endif$
$if(actor.parameters.list)$
!parameters = !{$actor.parameters.list: {$parameter_decl_MD(actor=actor, parameter=it)$}; separator=", "$}
$endif$
$if(actor.stateVars.list)$
!state_variables = !{$actor.stateVars.list: {$stateVar_decl_MD(actor=actor, var =it)$}; separator=", "$}
$endif$
$if(actor.procs.list)$ 
!procedures = !{$actor.procs.list: {$proc_decl_MD(actor=actor, proc=it)$}; separator=", "$}
$endif$
$if(actor.initializes)$
!initializes = !{$actor.initializes: {$action_decl_MD(actor=actor, action=it)$}; separator=", "$}
$endif$
$if(actor.actions)$
!actions = !{$actor.actions: {$action_decl_MD(actor=actor, action=it)$}; separator=", "$}
$endif$

$source_MD(actor)$
$name_MD(actor)$
$actionScheduler_MD(actor)$
$actor.inputs.list: {$fifo_MD(actor= actor, port=it)$}$
$actor.outputs.list: {$fifo_MD(actor= actor, port=it)$}$
$actor.parameters.list: {$parameter_MD(actor=actor, parameter=it)$}$
$actor.stateVars.list: {$stateVar_MD(actor=actor, var=it)$}$
$actor.procs.list: {$proc_MD(actor=actor, proc=it)$}$
$actor.initializes: {$action_MD(actor=actor, action=it)$}$
$actor.actions: {$action_MD(actor=actor, action=it)$}$

>>


///////////////////////////////////////////////////////////////////////////////
// Actor MD declaration
///////////////////////////////////////////////////////////////////////////////

source_decl_MD(actor) ::= <<
!$actor.templateData.(actor.file)$
>>


name_decl_MD(actor) ::= <<
!$actor.templateData.(actor.name)$
>>


actionScheduler_decl_MD(actor) ::= <<
!$actor.templateData.(actor.actionScheduler)$
>>

FSM_decl_MD(actor) ::= <<
!$actor.templateData.(actor.actionScheduler.fsm)$
>>

stateVar_decl_MD(actor, var) ::= <<
!$actor.templateData.(var)$
>>

fifo_decl_MD(actor, port) ::= <<
!$actor.templateData.(port)$
>>

parameter_decl_MD(actor, parameter) ::= <<
!$actor.templateData.(parameter)$
>>

action_decl_MD(actor, action) ::= <<
!$actor.templateData.(action)$
>>

proc_decl_MD(actor, proc) ::= <<
!$actor.templateData.(proc)$
>>

///////////////////////////////////////////////////////////////////////////////
// Actor MD body
///////////////////////////////////////////////////////////////////////////////

source_MD(actor) ::= <<
$source_decl_MD(actor)$ = metadata !{$file_MD(actor)$}
>>


name_MD(actor) ::= <<
$name_decl_MD(actor)$ = metadata !{$varName_MD(actor)$}
>>


actionScheduler_MD(actor) ::= <<
$if(actor.actionScheduler.fsm)$
$actionScheduler_decl_MD(actor)$ = metadata !{metadata $FSM_decl_MD(actor)$, i32()* @scheduler $
if(actor.initializes)$, i32()* @initialize $endif$}
$FSM_MD(actor)$
$else$
$actionScheduler_decl_MD(actor)$ = metadata !{null, i32()* @scheduler$
if(actor.initializes)$, i32()* @initialize $endif$}
$endif$
>>

action_MD(actor, action) ::= <<
$if(action.tag.identifiers.empty)$
$action_decl_MD(actor=actor, action=action)$ = metadata !{null, metadata $Sched_decl_MD(actor=actor, action=action)$, metadata $Body_decl_MD(actor=actor, action=action)$}
$else$
$action_decl_MD(actor=actor, action=action)$ = metadata !{metadata $Tag_decl_MD(actor=actor, tag=action.tag)$, metadata $Sched_decl_MD(actor=actor, action=action)$, metadata $Body_decl_MD(actor=actor, action=action)$}
$Tag_MD(actor=actor, tag=action.tag)$
$endif$
$Sched_MD(actor=actor, action=action)$
$Body_MD(actor=actor, action=action)$
>>

fifo_MD(actor, port) ::= <<
$fifo_decl_MD(actor=actor, port=port)$ = metadata !{metadata $Type_decl_MD(actor=actor, var=port)$, $varName_MD(port)$, %struct.fifo_s** @$port.name$}
$Type_MD(actor=actor, var=port)$

>>

proc_MD(actor, proc) ::= <<
$proc_decl_MD(actor=actor, proc=proc)$ = metadata !{$varName_MD(proc)$, $procExtern_MD(proc)$, $proc.returnType$($proc.parameters.list: argumentTypeDeclaration(); wrap, anchor, separator=", "$)* @$proc$}

>>


parameter_MD(actor, parameter) ::= <<
$parameter_decl_MD(actor=actor, parameter=parameter)$ = metadata !{metadata $VarDef_decl_MD(actor=actor, var=parameter)$, metadata $Type_decl_MD(actor=actor, var=parameter)$, $parameter.type$* @$parameter$}
$VarDef_MD(actor=actor, var=parameter)$
$Type_MD(actor=actor, var=parameter)$
>>

stateVar_MD(actor, var) ::= <<
$stateVar_decl_MD(actor=actor, var=var)$ = metadata !{metadata $VarDef_decl_MD(actor=actor, var=var)$, metadata $Type_decl_MD(actor=actor, var=var)$, $var.type$* @$var$}
$VarDef_MD(actor=actor, var=var)$
$Type_MD(actor=actor, var=var)$
>>

FSM_MD(actor) ::= <<
$if(actor.actionScheduler.actions)$
$FSM_decl_MD(actor)$ = metadata !{$varState_MD(actor.actionScheduler.fsm.initialState)$, metadata $State_decl_MD(actor)$, metadata $Transitions_decl_MD(actor)$, i32* @_FSM_state, i32()* @outside_FSM_scheduler}
$else$
$FSM_decl_MD(actor)$ = metadata !{$varState_MD(actor.actionScheduler.fsm.initialState)$, metadata $State_decl_MD(actor)$, metadata $Transitions_decl_MD(actor)$, i32* @_FSM_state}
$endif$
$State_MD(actor)$
$Transitions_MD(actor)$
>>

///////////////////////////////////////////////////////////////////////////////
// Actor MD member declaration
///////////////////////////////////////////////////////////////////////////////

State_decl_MD(actor) ::= <<
!$actor.templateData.(actor.actionScheduler.fsm.states)$
>>

Transitions_decl_MD() ::= <<
!$actor.templateData.(actor.actionScheduler.fsm.transitions)$
>>

Transition_decl_MD(actor, transition) ::= <<
!$actor.templateData.(transition)$
>>

NextStates_decl_MD(actor, nextStates) ::= <<
!$actor.templateData.(nextStates)$
>>

NextState_decl_MD(actor, nextState) ::= <<
!$actor.templateData.(nextState)$
>>

Sched_decl_MD(actor, action) ::= <<
!$actor.templateData.(action.scheduler)$
>>

Body_decl_MD(actor, action) ::= <<
!$actor.templateData.(action.body)$
>>

Tag_decl_MD(actor, tag) ::= <<
!$actor.templateData.(tag)$
>>

Location_decl_MD(var) ::= <<
!$Location(var.location)$3
>>

Type_decl_MD(actor, var) ::= <<
!$actor.templateData.(var.type)$
>>

VarDef_decl_MD(actor, var) ::= <<
!$actor.templateData.(var.name)$
>>

///////////////////////////////////////////////////////////////////////////////
// Actor MD member body
///////////////////////////////////////////////////////////////////////////////

State_MD(actor) ::= <<
$State_decl_MD(actor)$ = metadata  !{$actor.actionScheduler.fsm.states: varState_MD() ; separator=", "$}
>>

Transitions_MD(actor) ::= <<
$Transitions_decl_MD(actor)$ = metadata  !{$actor.actionScheduler.fsm.transitions: {metadata $Transition_decl_MD(actor=actor, transition=it)$}; separator=", "$}
$actor.actionScheduler.fsm.transitions: { $Transition_MD(actor=actor, transition = it)$}$
>>

Transition_MD(actor, transition) ::= <<
$if(transition.nextStateInfo.empty)$
$Transition_decl_MD(actor=actor, transition = transition)$ = metadata  !{ $varState_MD(transition.sourceState)$, null , i1()* @$transition.sourceState$_state_scheduler}
$else$
$Transition_decl_MD(actor=actor, transition = transition)$ = metadata  !{ $varState_MD(transition.sourceState)$, metadata $NextStates_decl_MD(actor=actor, nextStates=transition.nextStateInfo)$ , i1()* @$transition.sourceState$_state_scheduler}
$NextStates_MD(actor= actor, nextStates=transition.nextStateInfo)$
$endif$
>>

NextStates_MD(actor, nextStates) ::= <<
$NextStates_decl_MD(actor=actor, nextStates = nextStates)$ = metadata !{$nextStates: { metadata $NextState_decl_MD(actor =actor, nextState=it)$}; separator=", "$}
$nextStates: {$NextState_MD(actor=actor, nextState=it)$}$
>>

NextState_MD(actor, nextState) ::= <<
$NextState_decl_MD(actor = actor, nextState = nextState)$ = metadata !{metadata $action_decl_MD(actor=actor, action=nextState.action)$, $varState_MD(nextState.targetState)$}

>>

Type_MD(actor, var) ::= <<
$Type_decl_MD(actor=actor, var=var)$ = metadata  !{$varType_MD(var.type)$, $varSize_MD(var.type)$}

>>

Location_MD(var) ::=<<
$Location_decl_MD(var)$ = metadata  !{$startLine_MD(var)$, $startColumn_MD(var)$, $endColumn_MD(var)$}
>>

Sched_MD(actor, action) ::= <<
$Sched_decl_MD(actor=actor, action=action)$ = metadata  !{$varName_MD(action.scheduler)$, $procExtern_MD(action.scheduler)$, i1()* @$action.scheduler$}

>>

Tag_MD(actor, tag)::=<<
$Tag_decl_MD(actor=actor, tag=tag)$ = metadata  !{$tag.identifiers: varIdentifier_MD() ; separator=", "$}
>>


VarDef_MD(actor, var) ::= <<
$VarDef_decl_MD(actor=actor, var=var)$ = metadata !{$varName_MD(var)$, $varAssignable_MD(var)$, $varSuffix_MD(var)$,  $varIndex_MD(var)$}

>>


Body_MD(actor, action) ::= <<
$Body_decl_MD(actor=actor, action=action)$ = metadata  !{$varName_MD(action.body)$, $procExtern_MD(action.body)$, void()* @$action.body$}

>>

///////////////////////////////////////////////////////////////////////////////
// Actor MD data
///////////////////////////////////////////////////////////////////////////////


varType_MD(type) ::= <<
$if(type.int)$ i32 $type.size$ $
elseif(type.uint)$ i32 $type.size$ $
elseif(type.bool)$ i32 1 $ 
elseif(type.list)$$varType_MD(type.elementType)$$
elseif(type.string)$ i32 8 $
endif$
>>

varAssignable_MD(var) ::= <<
i1 $if(var.assignable)$1$else$0$endif$
>>

varSuffix_MD(var) ::= <<
i32 $if(var.suffix)$$var.suffix$$else$0$endif$
>>

varIndex_MD(var) ::= <<
i32 $if(var.index)$$var.index$$else$0$endif$
>>

procExtern_MD(proc) ::= <<
$if(proc.external)$i1 0$else$i1 1$endif$ 
>>

procRetType_MD(proc) ::= <<
metadata !"$proc.returnType$"
>>


varSize_MD(type) ::= <<
$if(type.list)$ $type.dimensions: {dim | i32 $dim$}; separator=", "$ $
else$ null $endif$
>>

varName_MD(var) ::= <<
metadata !"$var.name$"
>>


file_MD(actor) ::= <<
metadata !"$actor.file$"
>>

startLine_MD(var) ::= <<
i32 $var.location.startLine$
>>

startColumn_MD(var) ::= <<
i32 $var.location.startColumn$
>>

endColumn_MD(var) ::= <<
i32 $var.location.endColumn$
>>

varState_MD(state) ::= <<
metadata !"$state$"
>>

varIdentifier_MD(identifier) ::= <<
metadata !"$identifier$"
>>







