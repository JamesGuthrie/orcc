///////////////////////////////////////////////////////////////////////////////
// Override XLIM Templates For XLIM Hardware Generation

///////////////////////////////////////////////////////////////////////////////
// Throw an empty TypeDef in Hardware Generation
///////////////////////////////////////////////////////////////////////////////

typeDef(action) ::= <<
>>

///////////////////////////////////////////////////////////////////////////////
// Override pinWrite

Write(op) ::= <<
<!-- Write $op$ -->
<operation kind="pinWrite" portName="$op.port.name$" style="simple">
	<port dir="in" source="$op.target$"/>
</operation>
>>

///////////////////////////////////////////////////////////////////////////////
// Override Peek
///////////////////////////////////////////////////////////////////////////////

Peek(peek) ::= <<
>>

///////////////////////////////////////////////////////////////////////////////
// HasTokens
///////////////////////////////////////////////////////////////////////////////

HasTokens(hasTokens) ::= <<
<!-- Input peeks of $action.name$ -->
<operation kind="\$literal_Integer" value="0">
	<port dir="out" size="1" source="hasTokens_$instance.id$_$procedure$_0" typeName="int"/>
</operation>
<operation kind="pinPeek" portName="$hasTokens.port.name$">
	<port dir="in" source="hasTokens_$instance.id$_$procedure$_0"/>
	$port(dir="out", type=hasTokens.port.type, source=hasTokens.target)$
</operation>
<operation kind="pinStatus" portName="$hasTokens.port$">
	<port dir="out" size="1" source="$hasTokens.target$" typeName="bool"/>
</operation>
<!-- Guards Expressions of $action.name$ -->

>>

///////////////////////////////////////////////////////////////////////////////
// Override scheduler Name
///////////////////////////////////////////////////////////////////////////////

schedulerName(actions) ::=<<
<module autostart="true" kind="action-scheduler" name="action-scheduler" 
		sourcename="action-scheduler">
>>

///////////////////////////////////////////////////////////////////////////////
// Override outputPatternPort
///////////////////////////////////////////////////////////////////////////////

outputPatternPort(port, index, index0, state) ::= <<
<!--  OutputPattern -->
<operation kind="pinStatus" portName="$port$">
	<port dir="out" size="1" source="outputPattern_$instance.id$_$action.name$_s_$state$_$port$" typeName="bool"/>
</operation>
<operation kind="\$and">
	<port dir="in" source="outputPattern_$instance.id$_$action.name$_s_$state$_$port$"/>
	<port dir="in" source="outputPattern_$instance.id$_$action.name$_s_$state$_res_$index0$"/>
	<port dir="out" size="1" source="outputPattern_$instance.id$_$action.name$_s_$state$_res_$index$" typeName="bool"/>
</operation>
>>


scheduler(actions) ::= <<
$schedulerName(actions)$
	<operation kind="\$literal_Integer" value="1">
		<port dir="out" size="1" source="var_$instance.id$_sched" typeName="bool"/>
	</operation>
	<module kind="loop">
		<module decision="var_$instance.id$_loop" kind="test">
			<operation kind="noop">
				<port dir="in" source="var_$instance.id$_sched"/>
				<port dir="out" size="1" source="var_$instance.id$_loop" typeName="bool"/>
			</operation>
		</module>
		<module kind="body">
			$instance.actor.actions: isSchedulableTest(); separator="\n"$
			$outputPinStatus()$
			$instance.actor.actions: outputPatternFireability(); separator="\n"$
			$if(actions)$$schedulingTest(actions)$$endif$
			<!--Close modules -->
			$if(actions)$  	 	 
			$actions:{</module></module>}; separator="\n"$
			$endif$
		</module>
	</module>
</module>
>>

inputPeeks(actions) ::=<<
>>

outputPinStatusPort(port) ::=<<
<operation kind="pinStatus" portName="$port$">
	<port dir="out" size="1" source="outputPattern_$instance.id$_$port$_status" typeName="bool"/>
</operation>
>>


outputPinStatus() ::=<<
<!-- outputPattern Status -->
$instance.actor.outputs.list: {port|$outputPinStatusPort(port=port)$}; separator="\n"$
>>

outputPatternFireabilityPort(port) ::=<<
<port dir="in" source="outputPattern_$instance.id$_$port$_status"/>
>>

outputPatternFireability(action) ::=<<
$if(action.outputPattern)$
<!-- outputPattern Fireability -->
<operation kind="\$and">
	$action.outputPattern.keys: {port | $outputPatternFireabilityPort(port=port)$}; separator="\n"$
	<port dir="out" size="1" source="outputPattern_$instance.id$_$action.name$_fireable" typeName="bool"/>
</operation>
$endif$
>>


///////////////////////////////////////////////////////////////////////////////
// Throw empty AssignIndex
///////////////////////////////////////////////////////////////////////////////

AssignIndex(assignIndex) ::= <<
>>

