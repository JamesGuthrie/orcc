addActor(actor) ::= <<
$if (!actor.system)
$$actor.name$.cpp
$endif$
>>


///////////////////////////////////////////////////////////////////////////////
// Cpp_CMakeLists

Cpp_CMakeLists(network, needSerDes) ::= <<
# Generated from $network.name$

cmake_minimum_required (VERSION 2.8)
project ($network.name$)

if(MSVC)
set(CMAKE_CXX_FLAGS_DEBUG "/D_DEBUG /MTd /ZI /Ob0 /Od /RTC1")
set(CMAKE_CXX_FLAGS_RELEASE "/MT /O2 /Ob2 /D NDEBUG")
endif(MSVC)

# Common packages required
find_library(CALaka_LIBRARY CALaka)
find_library(Orcc_LIBRARY Orcc)
find_library(Thread_LIBRARY Thread)

find_path(CAL_INCLUDE_DIR actoraka.h CALaka PATH_SUFFIXES include/CAL)

find_package(SDL REQUIRED)

$if(needSerDes)$
find_path(CAL_SOURCE_DIR wrapperaka.cpp CALaka PATH_SUFFIXES src/CAL)
find_library(AdaptorFactory_LIBRARY AdaptorFactory)
add_library(AdaptorConfig STATIC "\${CAL_SOURCE_DIR}/LibAdaptorConfig.cpp")
add_library(Wrapper STATIC "\${CAL_SOURCE_DIR}/wrapperaka.cpp")
$endif$

include_directories(
	\${CMAKE_SOURCE_DIR}
	\${CAL_INCLUDE_DIR}
	\${SDL_INCLUDE_DIR}
)


add_executable ($network.name$
$network.name$.cpp
$network.actors : addActor()$
)

$if(needSerDes)$
add_dependencies($network.name$ Wrapper AdaptorConfig)
$endif$

target_link_libraries($network.name$
$if(needSerDes)$
Wrapper AdaptorConfig
\${AdaptorFactory_LIBRARY}
$endif$
\${CALaka_LIBRARY}
\${Orcc_LIBRARY}
\${Thread_LIBRARY}
\${SDL_LIBRARY}
)

>>
