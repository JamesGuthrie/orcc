//import org::eclipse::emf::ecore;
//import org::eclipse::xtext;

import xtext;
import ecore;

process(GeneratedMetamodel this) :
    ePackage.process()
;

process(EPackage this) :
    eClassifiers.process()
;

process(EClassifier this) :
    null
;

process(EClass this) :
	switch (this.name) {
		case "AstActor": (
			// add a transient list of built-in functions to Actor class 
			let ftype = (EClass) ePackage.eContents.selectFirst(e|((EClass) e).name == "AstFunction") :
			let ptype = (EClass) ePackage.eContents.selectFirst(e|((EClass) e).name == "AstProcedure") :
			let builtinFunctions = new EReference :
			let builtinProcedures = new EReference :

			builtinFunctions.setContainment(true) ->
			builtinFunctions.setEType(ftype) ->
			builtinFunctions.setName("builtinFunctions") ->
			builtinFunctions.setTransient(true) ->
			builtinFunctions.setLowerBound(0) ->
			builtinFunctions.setUpperBound(-1) ->
			this.eStructuralFeatures.add(builtinFunctions) ->

			builtinProcedures.setContainment(true) ->
			builtinProcedures.setEType(ptype) ->
			builtinProcedures.setName("builtinProcedures") ->
			builtinProcedures.setTransient(true) ->
			builtinProcedures.setLowerBound(0) ->
			builtinProcedures.setUpperBound(-1) ->
			this.eStructuralFeatures.add(builtinProcedures)
        )

		case "AstSchedule": (
			// add a transient list of states referenced by transitions to Schedule class 
			let etype = (EClass) ePackage.eContents.selectFirst(e|((EClass) e).name == "AstState") :
			let field = new EReference :
			field.setContainment(true) ->
			field.setEType(etype) ->
			field.setName("states") ->
			field.setTransient(true) ->
			field.setLowerBound(0) ->
			field.setUpperBound(-1) ->
			this.eStructuralFeatures.add(field)
        )
        
		case "AstVariableReference": (
			//((EReference) getEStructuralFeature('variable')).defineEOpposite('references')
			null
        )

        case "AstCallExpression": (
    		//((EReference) getEStructuralFeature('function')).defineEOpposite('calls')
    		null
    	)

    	case "AstCallStatement": (
    		//((EReference) getEStructuralFeature('procedure')).defineEOpposite('calls')
    		null
    	)

    	default:
    		null
    }
;

/*defineEOpposite(EReference this, String name) :
    let opp = new EReference :
        opp.setName(name) ->
        opp.setEType(eContainingClass) ->
        setEOpposite(opp) ->
        opp.setEOpposite(this) ->
        opp.setUpperBound(-1) ->
        eReferenceType.eStructuralFeatures.add(opp)
;*/

/*create EReference this createBackReference(String name, EClass etype, String refName) :
	this.setName(name) ->
	this.setEType(etype) ->
	this.setLowerBound(0) ->
	this.setUpperBound(-1) ->
	this.setEOpposite(etype.findEReference(refName))
;

EReference findEReference(EClass this, String refName):
	this.eStructuralFeatures.typeSelect(EReference).selectFirst(e|e.name == refName)
;*/

