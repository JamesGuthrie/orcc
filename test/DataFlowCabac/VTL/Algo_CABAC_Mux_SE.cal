/*************************************************************************
This software module was originally developed by Endri Bezati, 
in the course of development of the ISO/IEC 23002-4 (Video Tool Library) 
for reference purposes and its performance may not have been optimized. 
This software module is an implementation of one or more tools as 
specified by the ISO/IEC 23002-4.

ISO/IEC gives You a royalty-free, worldwide, non-exclusive, copyright 
license to copy, distribute, and make derivative works of this software 
module or modifications thereof for use in implementations of the 
ISO/IEC 23002-4 in products that satisfy conformance criteria (if any). 

Those intending to use this software module in products are advised that 
its use may infringe existing patents. ISO/IEC have no liability for use 
of this software module or modifications thereof.

Copyright is not released for products that do not conform to audiovisual 
and image-coding related ITU Recommendations and/or ISO/IEC International 
Standards. 

Assurance that the originally developed software module can be used 
(1) in the ISO/IEC 23002-4 once the ISO/IEC 23002-4 has been adopted; and 
(2) to develop the ISO/IEC 23002-4: 

Swiss Federal Institution of Technology grants ISO/IEC all rights necessary 
to include the originally developed software module or modifications thereof 
in the ISO/IEC 23002-4 and to permit ISO/IEC to offer You a royalty-free, 
worldwide, non-exclusive, copyright license to copy, distribute, and make 
derivative works for use in implementations of the ISO/IEC 23002-4 in 
products that satisfy conformance criteria (if any), and to the extent 
that such originally developed software module or portions of it are 
included in the ISO/IEC 23002-4.  To the extent that Swiss Federal Institution 
of Technology owns patent rights that would be required to make, use, or 
sell the originally developed software module or portions thereof 
included in the ISO/IEC 23002-4 in a conforming product, Swiss Federal 
Institution of Technology will assure the ISO/IEC that it is willing to 
negotiate licenses under reasonable and non-discriminatory terms and 
conditions with applicants throughout the world.

ISO/IEC gives You a free license to this software module or modifications 
thereof for the sole  purpose of developing the ISO/IEC 23002-4

Swiss Federal Institution of Technology retains full right to modify and use 
the code for its own purpose, assign or donate the code to a third party and 
to inhibit third parties from using the code for products that do not 
conform to MPEG-related ITU Recommendations and/or ISO/IEC International 
Standards. 

This copyright notice must be included in all copies or derivative works. 
Copyright (c) ISO/IEC 2007.
*************************************************************************/
actor Algo_CABAC_Mux_SE() 
	
	//Mb Skip Flag SE
	int(size=4)	 Mb_Skip_Flag,
	int(size=9)	 Mb_Skip_Dbits_Read,
	int(size=9)	 Mb_Skip_CodIRange,
	int(size=9)	 Mb_Skip_CodIOffset,
	
	//Prev Intra Pred Mode Flag SE
	int(size=4)	 Prev_Intra_Pred_Mode_Flag,
	int(size=9)	 Prev_Dbits_Read,
	int(size=9)	 Prev_CodIRange,
	int(size=9)	 Prev_CodIOffset
		==>
			int			CabacValue,
			int(size=9)	Dbits_Read,
			int(size=9)	Out_CodIRange,
			int(size=9)	Out_CodIOffset:



/* *****************************************************************************
								Constants
***************************************************************************** */

	int CABAC_MB_TYPE_SI    	 				= 0;
	int CABAC_MB_TYPE_I     	 				= 1;
	int CABAC_MB_TYPE_P_SP  	 				= 2;
	int CABAC_MB_TYPE_B      	 				= 3;
	int CABAC_MB_SKIP_FLAG	    				= 5;
	int CABAC_SUB_MB_TYPE_P_SP   				= 6;
	int CABAC_SUB_MB_TYPE_B	     				= 7; 
	int CABAC_MVD_L0_0_0	     				= 8;
	int CABAC_REF_IDX_L0_L1						= 10;
	int CABAC_MB_QP_DELTA						= 11;
	int CABAC_INTRA_CHROMA_PRED_MODE			= 12;
	int CABAC_PREV_INTRA4x4_8x8_PRED_MODE_FLAG	= 13;
	int CABAC_REM_INTRA4x4_8x8_PRED_MODE 		= 14;
	//int CABAC_MB_FIELD_DECODING_FLAG 			= 15;
	int CABAC_CODED_BLOCK_PATERN_LUMA 			= 16;
	int CABAC_CODED_BLOCK_PATERN_CHROMA			= 17;		
	int CABAC_CODED_BLOCK_FLAG 					= 18;
	int CABAC_SIGNIFICANT_COEFF_FLAG 			= 19;
	int CABAC_LAST_SIGNIFICANT_COEFF_FLAG 		= 20;
	int CABAC_COEFF_ABS_LEVEL_MINUS1 			= 21;
	int CABAC_END_OF_SLICE_FLAG 				= 23;
	int CABAC_TRANSFORM_SIZE_8x8_FLAG 			= 24;
	
	//Sent MbSkipFlag
	
	SentMbSkipFlag: action Mb_Skip_Flag:[cabaValue], 
						   Mb_Skip_Dbits_Read:[dbits], Mb_Skip_CodIRange:[Irange],
						   Mb_Skip_CodIOffset:[Ioffset]
						   		==>
						   			CabacValue:[cabaValue], Dbits_Read:[dbits],
						   			Out_CodIRange:[Irange], Out_CodIOffset:[Ioffset]
					
	end	
	
	SentPrevFlag: action Prev_Intra_Pred_Mode_Flag:[cabaValue], 
						 Prev_Dbits_Read:[dbits], Prev_CodIRange:[Irange],
						 Prev_CodIOffset:[Ioffset]
						   		==>
						   			CabacValue:[cabaValue], Dbits_Read:[dbits],
						   			Out_CodIRange:[Irange], Out_CodIOffset:[Ioffset]						  
	end	
end