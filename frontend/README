This file describes how to use ORCC frontend.
To compile ORCC frontend, please see the INSTALL file.

Note: sample paths are defined as /path/to/something, if you're under Windows
please read them as C:\path\to\something or D:\path\to\something or whatever
drive you wish :-)

Using the frontend:
  cal2ir.native -i /path/to/top_network.xdf -o /output/path

This command will print a single flat network as an XDF file named
/output/path/top_network_name.xdf, and one JSON file (.json extension)
per instance.

Those files should be later processed with the backend to get a set of files
that can be compiled by third-party software.



Using the frontend in Debug mode:
(a.k.a. "something's wrong with it and I want to know where/why")
  export OCAMLRUNPARAM="b=1"
  cal2ir.d.byte -i /path/to/top_network.xdf -o /output/path --keep

The --keep option will have the frontend keep and print intermediate files
for you in /output/path. These files are, for an instance X:
  X.cal1: IR translated from RVC-CAL
  X.cal2: IR in SSA form
  X.cal3: IR after constant propagation
  X.cal4: IR after dead store elimination

The language these files are printed in looks like CAL with C operators and
Phi functions when SSA form has been computed.
