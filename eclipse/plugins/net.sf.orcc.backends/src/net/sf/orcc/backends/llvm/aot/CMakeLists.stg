import "net/sf/orcc/backends/c/CMakeLists.stg"

printNetwork(network, options) ::= <<
# Generated from <network.simpleName>

cmake_minimum_required (VERSION 2.6)

<useClang()>

project (<network.simpleName>)

<includeLibraries()>

<createExecutable(network)>

<link(network)>
>>

useClang() ::= <<
# LLVM compiler
set(CMAKE_C_COMPILER "clang")
set(CMAKE_AR         "llvm-ar")
set(CMAKE_LINKER     "llvm-ld")
set(CMAKE_NM         "llvm-nm")
set(CMAKE_OBJDUMP    "llvm-objdump")
set(CMAKE_RANLIB     "llvm-ranlib")
>>

createExecutable(network) ::= <<
set(filenames
	<network.simpleName>.ll
	<network.instances: printInstance();separator="\n">
)

set(EXECUTABLE_OUTPUT_PATH ${PROJECT_BINARY_DIR}/bin)

add_executable(<network.simpleName> ${filenames})

set_target_properties(Top_MVG PROPERTIES LINKER_LANGUAGE C)
>>

printInstance(instance) ::= <%
<if(!instance.actor.native)>
<instance.name>.ll
<endif>
%>
