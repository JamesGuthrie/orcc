
printNetwork(network, options) ::= <<

onerror {resume}
quietly WaveActivateNextPane {} 0
add wave -noupdate -divider \<NULL\>
add wave -noupdate -divider Top
add wave -noupdate -divider \<NULL\>
add wave -noupdate -format Logic /tb_top/clk
add wave -noupdate -format Logic /tb_top/rst_n
<network.inputs: printNetworkPort(); separator="\n">
<network.outputs: printNetworkPort(); separator="\n">

<network.instances: printInstance(); separator="\n\n">

TreeUpdate [SetDefaultTree]
WaveRestoreCursors {{Cursor 1} {112 ps} 0}
configure wave -namecolwidth 222
configure wave -valuecolwidth 100
configure wave -justifyvalue left
configure wave -signalnamewidth 1
configure wave -snapdistance 10
configure wave -datasetprefix 0
configure wave -rowmargin 4
configure wave -childrowmargin 2
configure wave -gridoffset 0
configure wave -gridperiod 1
configure wave -griddelta 40
configure wave -timeline 0
configure wave -timelineunits ns
update
WaveRestoreZoom {0 ps} {2911 ps}

>>

printNetworkPort(port) ::= <<
add wave -noupdate -format Literal /tb_top/<port.name>_native
>>

printInstance(instance) ::= <<
<if(instance.actor && !instance.actor.native)
>add wave -noupdate -divider \<NULL\>
add wave -noupdate -divider <instance.id>
add wave -noupdate -divider \<NULL\>

add wave -noupdate -format Logic /tb_top/top_orcc/<instance.id>_inst/clk
add wave -noupdate -format Logic /tb_top/top_orcc/<instance.id>_inst/rst_n
add wave -noupdate -format Literal /tb_top/top_orcc/<instance.id>_inst/dram_addr
add wave -noupdate -format Literal /tb_top/top_orcc/<instance.id>_inst/imem_addr
add wave -noupdate -format Logic /tb_top/top_orcc/<instance.id>_inst/wren_wire
add wave -noupdate -format Literal /tb_top/top_orcc/<instance.id>_inst/bytemask_wire
add wave -noupdate -format Literal /tb_top/top_orcc/<instance.id>_inst/dram_data_in_wire
add wave -noupdate -format Literal /tb_top/top_orcc/<instance.id>_inst/dram_data_out_wire
add wave -noupdate -format Logic /tb_top/top_orcc/<instance.id>_inst/wren_x_wire
add wave -noupdate -format Literal /tb_top/top_orcc/<instance.id>_inst/idata_wire


<instance.actor.inputs: { input | <printInstanceInput(input, i0)> }; separator="\n">
<instance.actor.outputs: { output | <printInstanceOutput(output, i0)> }; separator="\n"><
endif>
>>

printInstanceInput(input, index) ::= <<
<if(!input.native)
>add wave -noupdate -format Literal -radix decimal /tb_top/top_orcc/<instance.id>_inst/data_<index>_in
add wave -noupdate -format Literal -radix decimal /tb_top/top_orcc/<instance.id>_inst/status_<index>_in
add wave -noupdate -format Logic /tb_top/top_orcc/<instance.id>_inst/ack_<index>_in<
else
>add wave -noupdate -format Literal /tb_top/top_orcc/<instance.id>_inst/s_<input.name><
endif>
>>

printInstanceOutput(output, index) ::= <<
<if(!output.native)
>add wave -noupdate -format Literal -radix decimal /tb_top/top_orcc/<instance.id>_inst/data_<index>_out
add wave -noupdate -format Literal -radix decimal /tb_top/top_orcc/<instance.id>_inst/status_<index>_out
add wave -noupdate -format Logic /tb_top/top_orcc/<instance.id>_inst/dv_<index>_out<
else
>add wave -noupdate -format Literal /tb_top/top_orcc/<instance.id>_inst/s_<output.name><
endif>
>>