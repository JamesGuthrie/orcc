printNetwork (network, options) ::= << 

<network.connections: declareFifo(); separator="\n\n">

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Actor-scheduler - Round-robin

define void @main() noinline noreturn nounwind {
entry:
	<network.instances: callScheduler(); separator="\n">
	br label %entry

end:
	ret void
}
>>

callScheduler(instance) ::= <<
call void @<instance.name>_scheduler()
>>

declareFifo(connection) ::= <<
@fifo_<connection.id>_content = global [<connection.size> x <connection.sourcePort.type>] zeroinitializer, align 32
@fifo_<connection.id>_rdIndex = global i32 zeroinitializer, align 32
@fifo_<connection.id>_wrIndex = global i32 zeroinitializer, align 32
>>