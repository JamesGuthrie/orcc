<?xml version="1.0" encoding="UTF-8"?>
<?eclipse version="3.2"?>
<plugin>
   <extension-point id="backends" name="backends" schema="schema/backends.exsd"/>
   <extension
         point="net.sf.orcc.backends.backends">
      <backend
            class="net.sf.orcc.backends.c.CBackend"
            name="C">
         <option
               id="net.sf.orcc.plugins.compileXDF">
         </option>
         <option
               id="net.sf.orcc.core.classify">
         </option>
         <option
               id="net.sf.orcc.backends.newScheduler">
         </option>
         <option
               id="net.sf.orcc.backends.geneticAlgorithm">
         </option>
         <option
               id="net.sf.orcc.backends.instrumentNetwork">
         </option>
         <option
               id="net.sf.orcc.dontExportLibrary">
         </option>
         <option
               id="net.sf.orcc.tracing.enable">
         </option>
         <option
               id="net.sf.orcc.backends.profile">
         </option>
      </backend>
      <backend
            class="net.sf.orcc.backends.c.compa.COMPABackend"
            name="COMPA (experimental)">
         <option
               id="net.sf.orcc.plugins.compileXDF">
         </option>
         <option
               id="net.sf.orcc.core.classify">
         </option>
         <option
               id="net.sf.orcc.dontExportLibrary">
         </option>
      </backend>
       <backend
            class="net.sf.orcc.backends.c.dal.DALBackend"
            name="DAL">
         <option
               id="net.sf.orcc.plugins.compileXDF">
         </option>
         <option
               id="net.sf.orcc.core.classify">
         </option>
         <option
               id="net.sf.orcc.backends.c.dal.inputBuffering">
         </option>
         <option
               id="net.sf.orcc.backends.c.dal.outputBuffering">
         </option>
      </backend>
      <backend
            class="net.sf.orcc.backends.c.hmpp.HMPPBackend"
            name="HMPP (experimental)">
         <option
               id="net.sf.orcc.plugins.compileXDF">
         </option>
         <option
               id="net.sf.orcc.core.classify">
         </option>
         <option
               id="net.sf.orcc.backends.newScheduler">
         </option>
         <option
               id="net.sf.orcc.backends.geneticAlgorithm">
         </option>
         <option
               id="net.sf.orcc.tracing.enable">
         </option>
         <option
               id="net.sf.orcc.backends.hmpp.disablePragma">
         </option>
      </backend>
      <backend
            class="net.sf.orcc.backends.c.hls.HLSBackend"
            name="HLS (experimental)">
         <option
               id="net.sf.orcc.plugins.compileXDF">
         </option>
         <option
               id="net.sf.orcc.core.classify">
         </option>
         <option
               id="net.sf.orcc.dontExportLibrary">
         </option>
      </backend>
      <backend
            class="net.sf.orcc.backends.java.JavaBackend"
            name="Java">
         <option
               id="net.sf.orcc.plugins.compileXDF">
         </option>
         <option
               id="net.sf.orcc.backends.compileVTL">
         </option>
         <option
               id="net.sf.orcc.dontExportLibrary">
         </option>
         
      </backend>
      <backend
            class="net.sf.orcc.backends.llvm.jit.JadeBackend"
            name="Jade">
         <option
               id="net.sf.orcc.plugins.compileXDF">
         </option>
         <option
               id="net.sf.orcc.core.classify">
         </option>
         <option
               id="net.sf.orcc.backends.llvm.jit.bitaccurate">
         </option>
      </backend>
      <backend
            class="net.sf.orcc.backends.llvm.aot.LLVMBackend"
            name="LLVM">
         <option
               id="net.sf.orcc.plugins.compileXDF">
         </option>
         <option
               id="net.sf.orcc.backends.llvm.aot.targetTriple">
         </option>
         <option
               id="net.sf.orcc.core.classify">
         </option>
         <option
               id="net.sf.orcc.dontExportLibrary">
         </option>
      </backend>
      <backend
            class="net.sf.orcc.backends.llvm.tta.TTABackend"
            name="TTA">
         <option
               id="net.sf.orcc.plugins.compileXDF">
         </option>
         <option
               id="net.sf.orcc.backends.profile">
         </option>
         <option
               id="net.sf.orcc.core.classify">
         </option>
         <option
               id="net.sf.orcc.backends.llvm.tta.configuration">
         </option>
         <option
               id="net.sf.orcc.backends.llvm.tta.reduceConnections">
         </option>
         <option
               id="net.sf.orcc.backends.tta.finalizeGeneration">
         </option>
         <option
               id="net.sf.orcc.backends.tta.fpga">
         </option>
         <option
               id="net.sf.orcc.backends.importXCF">
         </option>
         <option
               id="net.sf.orcc.dontExportLibrary">
         </option>
      </backend>
      <backend
            class="net.sf.orcc.backends.promela.PromelaBackend"
            name="PROMELA">
         <option
               id="net.sf.orcc.plugins.compileXDF">
         </option>
      </backend>
      <backend
            class="net.sf.orcc.backends.c.embedded.CEmbeddedBackend"
            name="CEmbedded">
         <option
               id="net.sf.orcc.plugins.compileXDF">
         </option>
         <option
               id="net.sf.orcc.core.classify">
         </option>
      </backend>
      <backend
            class="net.sf.orcc.backends.cplusplus.YaceBackend"
            name="C++">
         <option
               id="net.sf.orcc.plugins.compileXDF">
         </option>
         <option
               id="net.sf.orcc.core.classify">
         </option>
         <option
               id="net.sf.orcc.dontExportLibrary">
         </option>         
      </backend>
      <backend
            class="net.sf.orcc.backends.opencl.OpenCLBackend"
            name="OpenCL (Experimental)">
         <option
               id="net.sf.orcc.plugins.compileXDF">
         </option>
      </backend>
   </extension>
   <extension
         point="net.sf.orcc.core.options">
         <option
               defaultValue="false"
               id="net.sf.orcc.core.classify"
               description="This option enables optimizations such as transformation to higher-level and actor merging"
               name="Classify actors">
            <checkBox>
               <option
                     defaultValue="false"
                     description="When activated, static regions of the network will be merged together"
                     id="net.sf.orcc.core.mergeActors"
                     name="Merge static actors together">
                  <checkBox></checkBox>
               </option>
		       <option
		             defaultValue="false"
		             description="When activated, static and quasi-static actors are transformed to an higher-level"
		             id="net.sf.orcc.core.mergeActions"
		             name="Merge static actions together">
		          <checkBox></checkBox>
		       </option>
            </checkBox>
         </option>
         <option
               defaultValue="false"
               description="Uses an experimental scheduler instead of using the default round-robin scheduler"
               id="net.sf.orcc.backends.newScheduler"
               name="Use a smarter scheduler">
            <checkBox>
	            <option
	               defaultValue="Ring"
	               description="Select a communication topology between actor schedulers"
	               id="net.sf.orcc.backends.newScheduler.topology"
	               name="Communication topology between actor schedulers:">
	            <comboBox>
	               <comboBoxItem
	                     id="Ring">
	               </comboBoxItem>
	               <comboBoxItem
	                     id="Fully">
	               </comboBoxItem>
            	</comboBox>
         		</option>
            </checkBox>
         </option>
         <option
               defaultValue="false"
               description="Uses an experimental genetic algorithm to search efficient mappings of the actors on the processor cores"
               id="net.sf.orcc.backends.geneticAlgorithm"
               name="[BROKEN] Search efficient mappings (Only on linux)">
            <checkBox>
            	<option
	               		defaultValue="1"
	               		description="Specify the number of CPU cores to use for the mapping"
	               		id="net.sf.orcc.backends.processorsNumber"
	               		name="Number of CPU cores">
            		<textBox></textBox>
         		</option>
            </checkBox>
         </option>
         <option
               defaultValue="false"
               description="Instrument network"
               id="net.sf.orcc.backends.instrumentNetwork"
               name="[BETA] Instrument network">
            <checkBox></checkBox>
         </option>
         <option
               description="Whether Orcc should compile the given hierarchical XDF network"
               id="net.sf.orcc.plugins.compileXDF"
               name="Compile XDF Network">
            <checkBox>
               <optionRef
                     id="net.sf.orcc.core.xdfFile">
               </optionRef>
            </checkBox>
         </option>
         <option
               description="Whether Orcc should import the given XDF mapping"
               id="net.sf.orcc.backends.importXCF"
               name="Import XCF Mapping">
            <checkBox>
               <option
                     description="The file that contains the actor mapping"
                     id="net.sf.orcc.backends.xcfFile"
                     name="XCF file">
                 <browseFile
                       folder="false"
                       workspace="false">
                 </browseFile>
               </option>
            </checkBox>
         </option>
         <option
              defaultValue="false"
              description="Enable tracing of the FIFOs"
              id="net.sf.orcc.tracing.enable"
              name="Enable Traces">
            <checkBox>
               <option
                     description="The folder where traces are saved"
                     id="net.sf.orcc.tracing.folder"
                     name="Traces folder">
                 <browseFile
                       folder="true"
                       workspace="false">
                 </browseFile>
               </option>
            </checkBox>
         </option>
         <option
               defaultValue="false"
               description="If you made changes to the library, check this options to keep them when you regenerate the application."
               id="net.sf.orcc.dontExportLibrary"
               name="Don't export library">
            <checkBox/>
         </option>
         <option
               defaultValue="false"
               description="Transform the actions with multi-tokens access to mono-token ones"
               id="net.sf.orcc.backends.multi2mono"
               name="Multi-tokens to mono-token transformation">
            <checkBox></checkBox>
         </option>
         <option
               defaultValue="false"
               id="net.sf.orcc.backends.llvm.jit.bitaccurate"
               name="Generate bit-accurate code">
            <checkBox></checkBox>
         </option>
         <option
               defaultValue="false"
               description="Finalize the generation of the design in VHDL description using TCE tools"
               id="net.sf.orcc.backends.tta.finalizeGeneration"
               name="Finalize the generation">
            <checkBox></checkBox>
         </option>
         <option
               defaultValue="Stratix III (EP3SL150F1152C2)"
               description="Name of your FPGA device"
               id="net.sf.orcc.backends.tta.fpga"
               name="FPGA board">
            <comboBox>
               <comboBoxItem
                  id="Stratix III (EP3SL150F1152C2)">
               </comboBoxItem>
               <comboBoxItem
                  id="Virtex6 (xc6vlx240t)">
               </comboBoxItem>
               <comboBoxItem
                  id="Others">
               </comboBoxItem>
            </comboBox>
         </option>
         <option
               defaultValue="false"
               description="Generate output files that can be used with profiling tools"
               id="net.sf.orcc.backends.profile"
               name="Enable profiling">
            <checkBox></checkBox>
         </option>
         <option
               defaultValue="Standard"
               description="Predefined configurations for the processors"
               id="net.sf.orcc.backends.llvm.tta.configuration"
               name="Processor configuration">
            <comboBox>
               <comboBoxItem
                  id="Standard">
               </comboBoxItem>
               <comboBoxItem
                  id="Custom">
               </comboBoxItem>
               <comboBoxItem
                  id="Fast">
               </comboBoxItem>
               <comboBoxItem
                  id="Huge">
               </comboBoxItem>
            </comboBox>
         </option>
         <option
               defaultValue="false"
               description="Map the FIFO channels on an existing memory when it's possible"
               id="net.sf.orcc.backends.llvm.tta.reduceConnections"
               name="Reduce the interconnection network">
            <checkBox></checkBox>
         </option>
		<option
				defaultValue="x86_64"
				description="Specify the target triple"
				id="net.sf.orcc.backends.llvm.aot.targetTriple"
				name="Target triple">
			<textBox></textBox>
		</option>
  <option
        defaultValue="false"
        description="Generate VTL for all actors"
        id="net.sf.orcc.backends.compileVTL"
        name="VTL Code Generation">
     <checkBox></checkBox>
  </option>
  <option
        defaultValue="false"
        description="Do not print any HMPP pragma, only valid C code"
        id="net.sf.orcc.backends.hmpp.disablePragma"
        name="Disable HMPP pragmas">
     <checkBox></checkBox>
  </option>
         <option
               defaultValue="false"
               description="Perform sample buffering on actor inputs"
               id="net.sf.orcc.backends.c.dal.inputBuffering"
               name="Input buffering">
            <checkBox></checkBox>
         </option>
         <option
               defaultValue="false"
               description="Perform sample buffering on actor outputs"
               id="net.sf.orcc.backends.c.dal.outputBuffering"
               name="Output buffering">
            <checkBox></checkBox>
         </option>
   </extension>
   <extension
         id="c"
         point="org.eclipse.core.runtime.applications">
      <application
            cardinality="singleton-global"
            thread="main"
            visible="true">
         <run
               class="net.sf.orcc.backends.c.CBackend">
         </run>
      </application>
   </extension>
   <extension
         id="cpp"
         point="org.eclipse.core.runtime.applications">
      <application
            cardinality="singleton-global"
            thread="main"
            visible="true">
         <run
               class="net.sf.orcc.backends.cplusplus.YaceBackend">
         </run>
      </application>
   </extension>
   <extension
         id="java"
         point="org.eclipse.core.runtime.applications">
      <application
            cardinality="singleton-global"
            thread="main"
            visible="true">
         <run
               class="net.sf.orcc.backends.java.JavaBackend">
         </run>
      </application>
   </extension>
   <extension
         id="tta"
         point="org.eclipse.core.runtime.applications">
      <application
            cardinality="singleton-global"
            thread="main"
            visible="true">
         <run
               class="net.sf.orcc.backends.llvm.tta.TTABackend">
         </run>
      </application>
   </extension>
   <extension
         id="llvm"
         point="org.eclipse.core.runtime.applications">
      <application
            cardinality="singleton-global"
            thread="main"
            visible="true">
         <run
               class="net.sf.orcc.backends.llvm.aot.LLVMBackend">
         </run>
      </application>
   </extension>
   <extension
         id="jade"
         point="org.eclipse.core.runtime.applications">
      <application
            cardinality="singleton-global"
            thread="main"
            visible="true">
         <run
               class="net.sf.orcc.backends.llvm.jit.JadeBackend">
         </run>
      </application>
   </extension>
   <extension
         id="cembedded"
         point="org.eclipse.core.runtime.applications">
      <application
            cardinality="singleton-global"
            thread="main"
            visible="true">
         <run
               class="net.sf.orcc.backends.c.embedded.CEmbeddedBackend">
         </run>
      </application>
   </extension>
   <extension
         id="hls"
         point="org.eclipse.core.runtime.applications">
      <application
            cardinality="singleton-global"
            thread="main"
            visible="true">
         <run
               class="net.sf.orcc.backends.c.hls.HLSBackend">
         </run>
      </application>
   </extension>
   <extension
         id="promela"
         point="org.eclipse.core.runtime.applications">
      <application
            cardinality="singleton-global"
            thread="main"
            visible="true">
         <run
               class="net.sf.orcc.backends.promela.PromelaBackend">
         </run>
      </application>
   </extension>
   <extension
         id="opencl"
         point="org.eclipse.core.runtime.applications">
      <application
            cardinality="singleton-global"
            thread="main"
            visible="true">
         <run
               class="net.sf.orcc.backends.opencl.OpenCLBackend">
         </run>
      </application>
   </extension>
   <extension
         id="compa"
         point="org.eclipse.core.runtime.applications">
      <application
            cardinality="singleton-global"
            thread="main"
            visible="true">
         <run
               class="net.sf.orcc.backends.c.compa.COMPABackend">
         </run>
      </application>
   </extension>
   <extension
         id="dal"
         point="org.eclipse.core.runtime.applications">
      <application
            cardinality="singleton-global"
            thread="main"
            visible="true">
         <run
               class="net.sf.orcc.backends.c.dal.DALBackend">
         </run>
      </application>
   </extension>
   <extension
         id="hmpp"
         point="org.eclipse.core.runtime.applications">
      <application
            cardinality="singleton-global"
            thread="main"
            visible="true">
         <run
               class="net.sf.orcc.backends.c.hmpp.HMPPBackend">
         </run>
      </application>
   </extension>
</plugin>
