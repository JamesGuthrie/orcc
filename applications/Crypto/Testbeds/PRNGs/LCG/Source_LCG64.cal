/**
 * This FU generates sequence of test parameters (a, b, m), initial seed, output stream size required 
 * and the golden response stream for validation. Test parameters are taken from [1] and their corresponding 
 * golden response streams are generated from [2].
 * [1] BRUCE SCHNEIER "Applied Cryptography: Protocols, Algorithms, and Source Code in C," 2nd Edition,  
 *     ISBN: 0471128457, John Wiley & Sons, Inc., 1996.
 * [2] LCG's matlab implementation available at http://www.math.uwaterloo.ca/~dlmcleis/book/matlab/lcg.m.
 * 
 * FU ID: Source_LCG
 * Three output port
 *   1) uint(size=64) OP1_Params: the output to send the initialization parameters in the order: a, b, m, 
 *                                initial seed, number of tokens required in generated by LCG.
 *   2) uint OP2_StreamSize: the output to send required PRNG stream size to validator.
 *   3) uint(size=64) OP3_GR: the output to send PRNG golden stream to validator.
 * 
 * Developer: Junaid Jameel Ahmad @ Uni-Konstanz 2010
 */
 
actor Source_LCG64() ==> uint(size=64) OP1_Params, uint OP2_StreamSize, uint(size=64) OP3_GR:
	
	// Test parameters for LCG64 taken from [1].
	uint(size=64) a = 0x00002455;
	uint(size=64) b = 0x0000C091;
	uint(size=64) m = 0x00038F40;
	uint(size=64) seed = 0x00000002;
	uint OP_TOKENS = 20;
	List(type:uint(size=64),size=OP_TOKENS) gr := [ // Golden response (LCG PRNG stream) generated from [2].
		0x00000002, 0x0001093B, 0x00015B68, 0x00007D99, 0x000099DE, 0x000288C7, 0x0000AD24, 0x00018AC5, 0x000205BA, 0x00020A53, 
		0x0001C860, 0x00014DF1, 0x00028196, 0x0002CE5F, 0x0001DD1C, 0x00038E9D, 0x00028932, 0x00019FAB, 0x00031DD8, 0x00027489
		];
	
	bool paramsSent := false;
	sendParameters:
	action ==> OP1_Params:[a,b,m,seed,OP_TOKENS], OP2_StreamSize:[OP_TOKENS]
	guard not paramsSent
	do
		paramsSent := true;
	end

	bool grSent := false;
	sendGR:
	action ==> OP3_GR:[gr] repeat OP_TOKENS
	guard not grSent
	do
		grSent := true;
	end
end
