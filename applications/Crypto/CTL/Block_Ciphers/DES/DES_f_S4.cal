/**
 * This FU is part of a CAL implementation of DES (FIPS 46-3).
 * It serves as selection function (S-Box) S4 inside DES cipher function 'f'.
 * 
 * FU ID: DES_f_S4
 * One input port:
 * 	 1) uint(size=1) IP: the input (block size: 6 bit tokens)
 * One output port:
 * 	 1) uint(size=1) OP: the output (block size: 4 bit tokens)
 *
 * Developers: Shujun Li, Junaid Jameel Ahmad @ Uni-Konstanz 2010
 */

 actor DES_f_S4 () uint(size=1) IP ==> uint(size=1) OP:
	
	// S-Box S4.
/*	List(type:uint(size=4), size=64) S =
	[
		7,13,14,3,0,6,9,10,1,2,8,5,11,12,4,15,
		13,8,11,5,6,15,0,3,4,7,2,12,1,10,14,9,
		10,6,9,0,12,11,7,13,15,1,3,14,5,2,8,4,
		3,15,0,6,10,1,13,8,9,4,5,11,12,7,2,14
	]; */
	// Use 2-D list to avoid complicated num2bits conversion.
	List(type:List(type:uint(size=1), size=4), size=64) S :=
	[
		//  7        13        14         3         0         6         9        10
		[0,1,1,1],[1,1,0,1],[1,1,1,0],[0,0,1,1],[0,0,0,0],[0,1,1,0],[1,0,0,1],[1,0,1,0],
		//  1         2         8         5        11        12         4        15
		[0,0,0,1],[0,0,1,0],[1,0,0,0],[0,1,0,1],[1,0,1,1],[1,1,0,0],[0,1,0,0],[1,1,1,1],
		// 13         8        11         5         6        15         0         3
		[1,1,0,1],[1,0,0,0],[1,0,1,1],[0,1,0,1],[0,1,1,0],[1,1,1,1],[0,0,0,0],[0,0,1,1],
		//  4         7         2        12         1        10        14         9
		[0,1,0,0],[0,1,1,1],[0,0,1,0],[1,1,0,0],[0,0,0,1],[1,0,1,0],[1,1,1,0],[1,0,0,1],
		// 10         6         9         0        12        11         7        13
		[1,0,1,0],[0,1,1,0],[1,0,0,1],[0,0,0,0],[1,1,0,0],[1,0,1,1],[0,1,1,1],[1,1,0,1],
		// 15         1         3        14         5         2         8         4
		[1,1,1,1],[0,0,0,1],[0,0,1,1],[1,1,1,0],[0,1,0,1],[0,0,1,0],[1,0,0,0],[0,1,0,0],
		//  3        15         0         6        10         1        13         8
		[0,0,1,1],[1,1,1,1],[0,0,0,0],[0,1,1,0],[1,0,1,0],[0,0,0,1],[1,1,0,1],[1,0,0,0],
		//  9         4         5        11        12         7         2        14
		[1,0,0,1],[0,1,0,0],[0,1,0,1],[1,0,1,1],[1,1,0,0],[0,1,1,1],[0,0,1,0],[1,1,1,0]
	];

	DES_f_S4:
	// Orcc has a bug to handle list of lists, so that the following code does not work.
	// action IP:[bits] repeat 6 ==> OP:[ S[v] ] repeat 4
	action IP:[bits] repeat 6 ==> OP:[ [S[v][i]: for int i in 0 .. 3] ] repeat 4 
	var 
		int v
	do
		// Avoid using foreach and multiplfications to enhance efficiency.
		if bits[0]>0 then
			v := 32;
		else
			v := 0;
		end
		if bits[5]>0 then
			v := v + 16;
		end
		if bits[1]>0 then
			v := v + 8;
		end
		if bits[2]>0 then
			v := v + 4;
		end
		if bits[3]>0 then
			v := v + 2;
		end
		if bits[4]>0 then
			v := v + 1;
		end
	end

end
