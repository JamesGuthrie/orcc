/**
 * This FU is part of a CAL implementation of DES (FIPS 46-3).
 * It serves as selection function (S-Box) S7 inside DES cipher function 'f'.
 * 
 * FU ID: DES_f_S7
 * One input port:
 * 	 1) uint(size=1) IP: the input (block size: 6 bit tokens)
 * One output port:
 * 	 1) uint(size=1) OP: the output (block size: 4 bit tokens)
 *
 * Developers: Shujun Li, Junaid Jameel Ahmad @ Uni-Konstanz 2010
 */

 actor DES_f_S7 () uint(size=1) IP ==> uint(size=1) OP:
	
	// S-Box S7.
/*	List(type:uint(size=4), size=64) S =
	[
		4,11,2,14,15,0,8,13,3,12,9,7,5,10,6,1,
		13,0,11,7,4,9,1,10,14,3,5,12,2,15,8,6,
		1,4,11,13,12,3,7,14,10,15,6,8,0,5,9,2,
		6,11,13,8,1,4,10,7,9,5,0,15,14,2,3,12
	]; */
	// Use 2-D list to avoid complicated num2bits conversion.
	List(type:List(type:uint(size=1), size=4), size=64) S :=
	[
		//  4        11         2        14        15         0         8        13
		[0,1,0,0],[1,0,1,1],[0,0,1,0],[1,1,1,0],[1,1,1,1],[0,0,0,0],[1,0,0,0],[1,1,0,1],
		//  3        12         9         7         5        10         6         1
		[0,0,1,1],[1,1,0,0],[1,0,0,1],[0,1,1,1],[0,1,0,1],[1,0,1,0],[0,1,1,0],[0,0,0,1],
		// 13         0        11         7         4         9         1        10
		[1,1,0,1],[0,0,0,0],[1,0,1,1],[0,1,1,1],[0,1,0,0],[1,0,0,1],[0,0,0,1],[1,0,1,0],
		// 14         3         5        12         2        15         8         6
		[1,1,1,0],[0,0,1,1],[0,1,0,1],[1,1,0,0],[0,0,1,0],[1,1,1,1],[1,0,0,0],[0,1,1,0],
		//  1         4        11        13        12         3         7        14
		[0,0,0,1],[0,1,0,0],[1,0,1,1],[1,1,0,1],[1,1,0,0],[0,0,1,1],[0,1,1,1],[1,1,1,0],
		// 10        15         6         8         0         5         9         2
		[1,0,1,0],[1,1,1,1],[0,1,1,0],[1,0,0,0],[0,0,0,0],[0,1,0,1],[1,0,0,1],[0,0,1,0],
		//  6        11        13         8         1         4        10         7
		[0,1,1,0],[1,0,1,1],[1,1,0,1],[1,0,0,0],[0,0,0,1],[0,1,0,0],[1,0,1,0],[0,1,1,1],
		//  9         5         0        15        14         2         3        12
		[1,0,0,1],[0,1,0,1],[0,0,0,0],[1,1,1,1],[1,1,1,0],[0,0,1,0],[0,0,1,1],[1,1,0,0]
	];

	DES_f_S7:
	// Orcc has a bug to handle list of lists, so that the following code does not work.
	// action IP:[bits] repeat 6 ==> OP:[ S[v] ] repeat 4
	action IP:[bits] repeat 6 ==> OP:[ [S[v][i]: for int i in 0 .. 3] ] repeat 4 
	var 
		int v
	do
		// Avoid using foreach and multiplfications to enhance efficiency.
		if bits[0]>0 then
			v := 32;
		else
			v := 0;
		end
		if bits[5]>0 then
			v := v + 16;
		end
		if bits[1]>0 then
			v := v + 8;
		end
		if bits[2]>0 then
			v := v + 4;
		end
		if bits[3]>0 then
			v := v + 2;
		end
		if bits[4]>0 then
			v := v + 1;
		end
	end

end
