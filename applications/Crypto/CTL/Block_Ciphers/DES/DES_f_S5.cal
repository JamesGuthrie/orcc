/**
 * This FU is part of a CAL implementation of DES (FIPS 46-3).
 * It serves as selection function (S-Box) S5 inside DES cipher function 'f'.
 * 
 * FU ID: DES_f_S5
 * One input port:
 * 	 1) uint(size=1) IP: the input (block size: 6 bit tokens)
 * One output port:
 * 	 1) uint(size=1) OP: the output (block size: 4 bit tokens)
 *
 * Developers: Shujun Li, Junaid Jameel Ahmad @ Uni-Konstanz 2010
 */

 actor Block_Ciphers.DES.DES_f_S5 () uint(size=1) IP ==> uint(size=1) OP:
	
	// S-Box S5.
/*	List(type:uint(size=4), size=64) S =
	[
		2,12,4,1,7,10,11,6,8,5,3,15,13,0,14,9,
		14,11,2,12,4,7,13,1,5,0,15,10,3,9,8,6,
		4,2,1,11,10,13,7,8,15,9,12,5,6,3,0,14,
		11,8,12,7,1,14,2,13,6,15,0,9,10,4,5,3
	]; */
	// Use 2-D list to avoid complicated num2bits conversion.
	List(type:List(type:uint(size=1), size=4), size=64) S :=
	[
		//  2        12         4         1         7        10        11         6
		[0,0,1,0],[1,1,0,0],[0,1,0,0],[0,0,0,1],[0,1,1,1],[1,0,1,0],[1,0,1,1],[0,1,1,0],
		//  8         5         3        15        13         0        14         9
		[1,0,0,0],[0,1,0,1],[0,0,1,1],[1,1,1,1],[1,1,0,1],[0,0,0,0],[1,1,1,0],[1,0,0,1],
		// 14        11         2        12         4         7        13         1
		[1,1,1,0],[1,0,1,1],[0,0,1,0],[1,1,0,0],[0,1,0,0],[0,1,1,1],[1,1,0,1],[0,0,0,1],
		//  5         0        15        10         3         9         8         6
		[0,1,0,1],[0,0,0,0],[1,1,1,1],[1,0,1,0],[0,0,1,1],[1,0,0,1],[1,0,0,0],[0,1,1,0],
		//  4         2         1        11        10        13         7         8
		[0,1,0,0],[0,0,1,0],[0,0,0,1],[1,0,1,1],[1,0,1,0],[1,1,0,1],[0,1,1,1],[1,0,0,0],
		// 15         9        12         5         6         3         0        14
		[1,1,1,1],[1,0,0,1],[1,1,0,0],[0,1,0,1],[0,1,1,0],[0,0,1,1],[0,0,0,0],[1,1,1,0],
		// 11         8        12         7         1        14         2        13
		[1,0,1,1],[1,0,0,0],[1,1,0,0],[0,1,1,1],[0,0,0,1],[1,1,1,0],[0,0,1,0],[1,1,0,1],
		//  6        15         0         9        10         4         5         3
		[0,1,1,0],[1,1,1,1],[0,0,0,0],[1,0,0,1],[1,0,1,0],[0,1,0,0],[0,1,0,1],[0,0,1,1]
	];

	DES_f_S5:
	// Orcc has a bug to handle list of lists, so that the following code does not work.
	// action IP:[bits] repeat 6 ==> OP:[ S[v] ] repeat 4
	action IP:[bits] repeat 6 ==> OP:[ [S[v][i]: for int i in 0 .. 3] ] repeat 4 
	var 
		int v
	do
		// Avoid using foreach and multiplfications to enhance efficiency.
		if bits[0]>0 then
			v := 32;
		else
			v := 0;
		end
		if bits[5]>0 then
			v := v + 16;
		end
		if bits[1]>0 then
			v := v + 8;
		end
		if bits[2]>0 then
			v := v + 4;
		end
		if bits[3]>0 then
			v := v + 2;
		end
		if bits[4]>0 then
			v := v + 1;
		end
	end

end
