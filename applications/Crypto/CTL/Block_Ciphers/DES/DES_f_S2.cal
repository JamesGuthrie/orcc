/**
 * This FU is part of a CAL implementation of DES (FIPS 46-3).
 * It serves as selection function (S-Box) S2 inside DES cipher function 'f'.
 * 
 * FU ID: DES_f_S2
 * One input port:
 * 	 1) uint(size=1) IP: the input (block size: 6 bit tokens)
 * One output port:
 * 	 1) uint(size=1) OP: the output (block size: 4 bit tokens)
 *
 * Developers: Shujun Li, Junaid Jameel Ahmad @ Uni-Konstanz 2010
 */

 actor Block_Ciphers.DES.DES_f_S2 () uint(size=1) IP ==> uint(size=1) OP:
	
	// S-Box S2.
/*	List(type:uint(size=4), size=64) S =
	[
		15,1,8,14,6,11,3,4,9,7,2,13,12,0,5,10,
		3,13,4,7,15,2,8,14,12,0,1,10,6,9,11,5,
		0,14,7,11,10,4,13,1,5,8,12,6,9,3,2,15,
		13,8,10,1,3,15,4,2,11,6,7,12,0,5,14,9
	]; */
	// Use 2-D list to avoid complicated num2bits conversion.
	List(type:List(type:uint(size=1), size=4), size=64) S :=
	[
		// 15         1         8        14         6        11         3         4
		[1,1,1,1],[0,0,0,1],[1,0,0,0],[1,1,1,0],[0,1,1,0],[1,0,1,1],[0,0,1,1],[0,1,0,0],
		//  9         7         2        13        12         0         5        10
		[1,0,0,1],[0,1,1,1],[0,0,1,0],[1,1,0,1],[1,1,0,0],[0,0,0,0],[0,1,0,1],[1,0,1,0],
		//  3        13         4         7        15         2         8        14
		[0,0,1,1],[1,1,0,1],[0,1,0,0],[0,1,1,1],[1,1,1,1],[0,0,1,0],[1,0,0,0],[1,1,1,0],
		// 12         0         1        10         6         9        11         5
		[1,1,0,0],[0,0,0,0],[0,0,0,1],[1,0,1,0],[0,1,1,0],[1,0,0,1],[1,0,1,1],[0,1,0,1],
		//  0        14         7        11        10         4        13         1
		[0,0,0,0],[1,1,1,0],[0,1,1,1],[1,0,1,1],[1,0,1,0],[0,1,0,0],[1,1,0,1],[0,0,0,1],
		//  5         8        12         6         9         3         2        15
		[0,1,0,1],[1,0,0,0],[1,1,0,0],[0,1,1,0],[1,0,0,1],[0,0,1,1],[0,0,1,0],[1,1,1,1],
		// 13         8        10         1         3        15         4         2
		[1,1,0,1],[1,0,0,0],[1,0,1,0],[0,0,0,1],[0,0,1,1],[1,1,1,1],[0,1,0,0],[0,0,1,0],
		// 11         6         7        12         0         5        14         9
		[1,0,1,1],[0,1,1,0],[0,1,1,1],[1,1,0,0],[0,0,0,0],[0,1,0,1],[1,1,1,0],[1,0,0,1]
	];

	DES_f_S2:
	// Orcc has a bug to handle list of lists, so that the following code does not work.
	// action IP:[bits] repeat 6 ==> OP:[ S[v] ] repeat 4
	action IP:[bits] repeat 6 ==> OP:[ [S[v][i]: for int i in 0 .. 3] ] repeat 4 
	var 
		int v
	do
		// Avoid using foreach and multiplfications to enhance efficiency.
		if bits[0]>0 then
			v := 32;
		else
			v := 0;
		end
		if bits[5]>0 then
			v := v + 16;
		end
		if bits[1]>0 then
			v := v + 8;
		end
		if bits[2]>0 then
			v := v + 4;
		end
		if bits[3]>0 then
			v := v + 2;
		end
		if bits[4]>0 then
			v := v + 1;
		end
	end

end
