actor PredictedBlock () int In0, int In1, int In2, int In3, int Position, int BlockType ==> int Out:
 
	List(type:int, size=4) row := [0: for int t in Integers(0,3)];
	
	int pos;
	int bType;
	int i:=0;
	int nrows:=0;
	int nblocks:=0;
	
	readPositionnBT: action Position:[p], BlockType:[bt] ==>
	do
		pos := p;
		bType := bt;
		
		//println("Best Position: "+pos);
		//println("bType: "+bType);				
	end
	
	readRow: action In0:[in0], In1:[in1], In2:[in2], In3:[in3] ==> 
	do
		row[0]:=in0;
		row[1]:=in1;
		row[2]:=in2;
		row[3]:=in3;
	end
	
	fireRow: action ==> Out:[row[i-1]]
	guard nblocks=pos and i<4 
	do	
		i := i + 1;
		
		//println("fireRow --> row["+(i-1)+"] = "+row[i-1]);
	end
	
	
	bypassRow: action ==>
	guard i<4 
	do	
		i := i + 1;
		
		//println("bypassRow --> row["+(i-1)+"] = "+row[i-1]);
	end
	
	
	finishRow: action ==>
	guard  i=4
	do
		i := 0;
		nrows := nrows + 1;
	end
	
	
	finishBlock: action ==>
	guard i=4 and nrows=3
	do
		i := 0;
		nrows := 0;
		nblocks:=nblocks+1;
		//println("~~~~~~~~~~~~~~~~~~ finishBlock ~~~~~~~~~~~~~~~~~~ "+nblocks);
	end
	
	allDone: action ==>
	guard i=4 and nrows=3 and ((bType=0 and nblocks=8) or (bType=1 and nblocks=3) or 
		(bType=2 and nblocks=2) or (bType=3 and nblocks=0) or (bType=4 and nblocks=6))
	do
		i := 0;
		nrows := 0;
		nblocks:=0;
		
	end


	
	schedule fsm ReadPositionAndBlockType:
		ReadPositionAndBlockType(readPositionnBT) --> ReadRow;
		ReadRow(readRow) --> seeWhatToDo;
		
		seeWhatToDo(fireRow) --> seeWhatToDo;
		seeWhatToDo(bypassRow) --> seeWhatToDo;
		
		seeWhatToDo(finishRow) --> ReadRow;
		seeWhatToDo(finishBlock) --> ReadRow;
		
		seeWhatToDo(allDone) --> ReadPositionAndBlockType;		
	end
	
	
	priority
		fireRow > bypassRow;
		finishBlock > finishRow;
		allDone > finishBlock;
	end


end