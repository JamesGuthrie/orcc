// splitter_MV
//
// Author Christophe Lucarz (christophe.lucarz@epfl.ch)
//
// Description for each block a couple (x,y) is associated, the coordinates of the motion vector. The x coordinate arrives first, followed by the Y  coordinate. This splitter send the 8 first token for the Y component (4 block  2 tokens), then, the 9th and 10th token to the U component and the 11th and  12th token to the U component 

package MPEG.MPEG4.part2;

actor splitter_MV () int(size=MV_SZ) MV, int(size=BTYPE_SZ) BTYPE ==> int(size=MV_SZ) Y ,
int(size=MV_SZ) U , int(size=MV_SZ) V :

// Port size declaration
	int BTYPE_SZ = 12;

	int MV_SZ = 9;

	int MOTION = 8;

	int NEWVOP = 2048;

	// Ignore new VOP command
	newvop: action BTYPE:[ cmd ] ==>
	guard
		(cmd & NEWVOP) != 0
	end

	// Skip width and height
	skip: action BTYPE:[ btype ] repeat 2 ==>
	end

	// Skip btype token
	skipbtype: action BTYPE:[ btype ] ==>
	guard
		(btype & MOTION) = 0,
		(btype & NEWVOP) = 0
	end

	// split the vectors
	B1: action MV:[ mv ] repeat 2, BTYPE:[ btype ] ==> Y:[ mv[0], mv[1] ]
	guard
		(btype & MOTION) != 0
	end

	B2: action MV:[ mv ] repeat 2, BTYPE:[ btype ] ==> Y:[ mv[0], mv[1] ]
	guard
		(btype & MOTION) != 0
	end

	B3: action MV:[ mv ] repeat 2, BTYPE:[ btype ] ==> Y:[ mv[0], mv[1] ]
	guard
		(btype & MOTION) != 0
	end

	B4: action MV:[ mv ] repeat 2, BTYPE:[ btype ] ==> Y:[ mv[0], mv[1] ]
	guard
		(btype & MOTION) != 0
	end

	B5: action MV:[ mv ] repeat 2, BTYPE:[ btype ] ==> U:[ mv[0], mv[1] ]
	guard
		(btype & MOTION) != 0
	end

	B6: action MV:[ mv ] repeat 2, BTYPE:[ btype ] ==> V:[ mv[0], mv[1] ]
	guard
		(btype & MOTION) != 0
	end

	schedule fsm cmd :
		cmd ( newvop ) --> skip;
		skip ( skip ) --> cmd;
		// skip height and width
		cmd ( B1 ) --> block2;
		cmd ( skipbtype ) --> block2;
		block2 ( B2 ) --> block3;
		block2 ( skipbtype ) --> block3;
		block3 ( B3 ) --> block4;
		block3 ( skipbtype ) --> block4;
		block4 ( B4 ) --> block5;
		block4 ( skipbtype ) --> block5;
		block5 ( B5 ) --> block6;
		block5 ( skipbtype ) --> block6;
		block6 ( B6 ) --> cmd;
		block6 ( skipbtype ) --> cmd;
	end

	priority
		newvop > skipbtype > B1;
	end

end