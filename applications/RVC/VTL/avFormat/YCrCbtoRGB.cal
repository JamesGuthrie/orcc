/*-------------------------------------------------------------------
-- Company: EFPL 
-- Engineer: rthavot@gmail.com
--			 alhadi.abrahman@epfl.ch - modified to work with CAL2HDL
--
-- Create Date:   10/31/2008
-- Design Name:   YCrCbtoRGB
-- Project Name:  ColorSpace Converter:YcrCb to RGB
-- Tool versions:  OpenDF
-- Description:   
--		Based on the XAPP930 - XAPP931
--
-- Dependencies:
-- 
-- Revision:
-- 		Revision 0.02
-- Additional Comments:
--
--
-- Notes: 
-- 		This application note describes the implementation of
--		an YCbCr color space to a RGB color space conversion
--		circuit necessary in many video designs.
--  
-------------------------------------------------------------------*/

//import all caltrop.lib.BitOps;

package avFormat;

actor YCrCbtoRGB()
	int(size=10) Y,
	int(size=10) Cr,
	int(size=10) Cb
		==>
		int(size=8) R,
		int(size=8) G,
		int(size=8) B:

	
	//hadi-change size from 18 to 13
	int(size=13) rv = 292;
	int(size=13) gu = 101;
	int(size=13) gv = 149;
	int(size=13) bu = 520;
        
    int r := 0;
    int g := 0;
    int b := 0;
    int rt := 0;
    int gt := 0;
    int bt := 0;
    
    int yt := 0;
    int crt := 0;
    int cbt := 0;
    int yt2 := 0;
    int crt2 := 0;
    int cbt2 := 0;
    
    int t1 := 1023;
    
    action Y:[y],
    	   Cr:[cr],
    	   Cb:[cb] ==> R:[r],
					   G:[g],
					   B:[b]
	do
		yt2 := y;
		crt2 := cr;
		cbt2 := cb;
		yt := (yt2 & t1);
		crt := (crt2 & t1);
		cbt := (cbt2 & t1);
		rt := (((yt-64) << 8) + rv*(crt-512)) >> 10;
		gt := (((yt-64) << 8) - gu*(cbt-512) - gv*(crt-512)) >> 10;
		bt := (((yt-64) << 8) + bu*(cbt-512)) >> 10; 

		if (rt > 0) then
			if (rt < 255) then
				r := rt;
			else
				r := 255;
			end
		else
			r := 0;
		end
		if (gt > 0) then
			if (gt < 255) then
				g := gt;
			else
				g := 255;
			end
		else
			g := 0;
		end
		if (bt > 0) then
			if (bt < 255) then
				b := bt;
			else
				b := 255;
			end
		else
			b := 0;
		end

	end
end

