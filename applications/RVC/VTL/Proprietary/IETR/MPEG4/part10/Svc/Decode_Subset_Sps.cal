/********************************************************************************

This software module was originally developed by 
Damien de Saint Jorre (IETR/INSA of Rennes), 
in the course of development of the ISO/IEC 23002-4 (Video Tool Library) 
for reference purposes and its performance may not have been optimized. 
This software module is an implementation of one or more tools as 
specified by the ISO/IEC 23002-4.

ISO/IEC gives You a royalty-free, worldwide, non-exclusive, copyright 
license to copy, distribute, and make derivative works of this software 
module or modifications thereof for use in implementations of the 
ISO/IEC 23002-4 in products that satisfy conformance criteria (if any). 

Those intending to use this software module in products are advised that 
its use may infringe existing patents. ISO/IEC have no liability for use 
of this software module or modifications thereof.

Copyright is not released for products that do not conform to audiovisual 
and image-coding related ITU Recommendations and/or ISO/IEC International 
Standards. 

Assurance that the originally developed software module can be used 
(1) in the ISO/IEC 23002-4 once the ISO/IEC 23002-4 has been adopted; and 
(2) to develop the ISO/IEC 23002-4: 

IETR/INSA of Rennes grants ISO/IEC all rights necessary to 
include the originally developed software module or modifications thereof 
in the ISO/IEC 23002-4 and to permit ISO/IEC to offer You a royalty-free, 
worldwide, non-exclusive, copyright license to copy, distribute, and make 
derivative works for use in implementations of the ISO/IEC 23002-4 in 
products that satisfy conformance criteria (if any), and to the extent 
that such originally developed software module or portions of it are 
included in the ISO/IEC 23002-4.  To the extent that IETR/INSA of Rennes
owns patent rights that would be required to make, use, or 
sell the originally developed software module or portions thereof 
included in the ISO/IEC 23002-4 in a conforming product, IETR/INSA of
Rennes will assure the ISO/IEC that it is willing to 
negotiate licenses under reasonable and non-discriminatory terms and 
conditions with applicants throughout the world.

ISO/IEC gives You a free license to this software module or modifications 
thereof for the sole  purpose of developing theISO/IEC 23002-4

IETR/INSA of Rennes retains full right to modify and use the 
code for its own purpose, assign or donate the code to a third party and 
to inhibit third parties from using the code for products that do not 
conform to MPEG-related ITU Recommendations and/or ISO/IEC International 
Standards. 

This copyright notice must be included in all copies or derivative works. 
Copyright (c) ISO/IEC 2008.
*****************************************************************************/
package Proprietary.IETR.MPEG4.part10.Svc;

import Proprietary.IETR.MPEG4.part10.Common.Imp_DecodingFunctions.*;

actor Decode_Subset_Sps()
	int (size=32) ValVLD,
	int (size=32) Parameters
		==>
	uint(size=5)  TypeOfVLD,
	int (size=32) VldParam,

	uint(size=2)  SpsSvcExtParam
		:


	bool DEBUG_FLAG_DECODED = true;

	uint(size=8) profile_idc;
	uint(size=2) ChromaArrayType;

	bool          svc_vui_parameters_present;
	bool          additional_extension2;


	GetParameters: action
			Parameters :[ValParam] repeat 2
				==>
		do
			profile_idc     := ValParam[0];
			ChromaArrayType := ValParam[1];
		end

	ProfileIdcValue.Is_83or86: action
				==>
			TypeOfVLD      :[LAUNCH_ACTOR],
			VldParam       :[SPS_SVC_EXTENSION],
			SpsSvcExtParam :[ChromaArrayType]
		guard
			(profile_idc = 83) or (profile_idc = 86)
		end

	ReadSvcVuiParam.Asked: action
				==>
			// svc_vui_parameters_present_flag
			TypeOfVLD :[READ_BITS],
			VldParam  :[    1    ]
		end

	ReadSvcVuiParam.Done: action
			ValVLD :[SvcVuiParamPresent]
				==>
		do
			svc_vui_parameters_present := (SvcVuiParamPresent != 0);
			if(DEBUG_FLAG_DECODED)then
				println("\n****Subset_Sps*****\nsvc_vui_parameters_present_flag : " + SvcVuiParamPresent);
			end
		end

	LaunchSvcVuiParamExt: action
				==>
			TypeOfVLD :[LAUNCH_ACTOR],
			VldParam  :[SPS_VUI_PARAM_EXTENSION]
		guard
			svc_vui_parameters_present
		end

	ReadAdditExtFlag.Launch: action
				==>
			// additional_extension2_flag
			TypeOfVLD :[READ_BITS],
			VldParam  :[    1    ]
		end

	ReadAddExtFlag.Done: action
			ValVLD :[addit_ext2_flag]
				==>
		do
			additional_extension2 := (addit_ext2_flag != 0);
			if(DEBUG_FLAG_DECODED)then
				println("additional_extension2_flag : " + addit_ext2_flag);
			end
		end

	AddExt2Flag.IsEqualToTrue: action
				==>
			TypeOfVLD :[MORE_RBSP_DATA]
		guard
			additional_extension2
		end

	AskMoreRbspData: action
				==>
			TypeOfVLD :[MORE_RBSP_DATA]
		end

	ReadAddExt2Data.Asked: action
			ValVLD :[more_rbsp_data]
				==>
			TypeOfVLD :[READ_BITS],
			VldParam  :[    1    ]
		guard
			more_rbsp_data = 1
		end

	ReadAddExt2Data.Done: action
			ValVLD :[additional_extension2_data_flag]
				==>
		do
			if(DEBUG_FLAG_DECODED)then
				println("additional_extension2_data_flag : " + additional_extension2_data_flag);
			end
		end

	MoreRbspData.IsEqualToFalse: action
			ValVLD :[more_rbsp_data]
				==>
		guard
			more_rbsp_data = 0
		end

	EndDecodingSubsetSps: action
				==>
			TypeOfVLD :[SKIP_NAL]
		end

	schedule fsm GetParameters:
		GetParameters       (GetParameters               )--> CheckProfileIdc;

		CheckProfileIdc     (ProfileIdcValue.Is_83or86   )--> AskReadSvcVuiParam;
		CheckProfileIdc     (ReadAdditExtFlag.Launch     )--> ReadAddExtFlagDone;

		AskReadSvcVuiParam  (ReadSvcVuiParam.Asked       )--> ReadSvcVuiParamDone;

		ReadSvcVuiParamDone (ReadSvcVuiParam.Done        )--> CheckSvcVuiFlag;

		CheckSvcVuiFlag     (LaunchSvcVuiParamExt        )--> AskReadAdditExtFlag;
		CheckSvcVuiFlag     (ReadAdditExtFlag.Launch     )--> ReadAddExtFlagDone;

		AskReadAdditExtFlag (ReadAdditExtFlag.Launch     )--> ReadAddExtFlagDone;

		ReadAddExtFlagDone  (ReadAddExtFlag.Done         )--> CheckAddExtFlag;

		CheckAddExtFlag     (AddExt2Flag.IsEqualToTrue   )--> CheckMoreDataRbsp;
		CheckAddExtFlag     (EndDecodingSubsetSps        )--> GetParameters;

		CheckMoreDataRbsp   (ReadAddExt2Data.Asked       )--> ReadAddExt2DataDone;
		CheckMoreDataRbsp   (MoreRbspData.IsEqualToFalse )--> EndOfNal;

		ReadAddExt2DataDone (ReadAddExt2Data.Done        )--> AskMoreRbspData;

		AskMoreRbspData     (AskMoreRbspData             )--> CheckMoreDataRbsp;

		EndOfNal            (EndDecodingSubsetSps        )--> CheckProfileIdc;
	end
	priority
		ProfileIdcValue.Is_83or86 > ReadAdditExtFlag.Launch;
		LaunchSvcVuiParamExt      > ReadAdditExtFlag.Launch;
		AddExt2Flag.IsEqualToTrue > EndDecodingSubsetSps;
		ReadAddExt2Data.Asked     > MoreRbspData.IsEqualToFalse;
	end
end