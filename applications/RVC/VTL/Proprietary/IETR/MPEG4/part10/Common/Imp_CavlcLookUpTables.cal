/********************************************************************************

This software module was originally developed by 
Damien de Saint Jorre (IETR/INSA of Rennes), 
in the course of development of the ISO/IEC 23002-4 (Video Tool Library) 
for reference purposes and its performance may not have been optimized. 
This software module is an implementation of one or more tools as 
specified by the ISO/IEC 23002-4.

ISO/IEC gives You a royalty-free, worldwide, non-exclusive, copyright 
license to copy, distribute, and make derivative works of this software 
module or modifications thereof for use in implementations of the 
ISO/IEC 23002-4 in products that satisfy conformance criteria (if any). 

Those intending to use this software module in products are advised that 
its use may infringe existing patents. ISO/IEC have no liability for use 
of this software module or modifications thereof.

Copyright is not released for products that do not conform to audiovisual 
and image-coding related ITU Recommendations and/or ISO/IEC International 
Standards.

Assurance that the originally developed software module can be used 
(1) in the ISO/IEC 23002-4 once the ISO/IEC 23002-4 has been adopted; and 
(2) to develop the ISO/IEC 23002-4: 

IETR/INSA of Rennes grants ISO/IEC all rights necessary to 
include the originally developed software module or modifications thereof 
in the ISO/IEC 23002-4 and to permit ISO/IEC to offer You a royalty-free, 
worldwide, non-exclusive, copyright license to copy, distribute, and make 
derivative works for use in implementations of the ISO/IEC 23002-4 in 
products that satisfy conformance criteria (if any), and to the extent 
that such originally developed software module or portions of it are 
included in the ISO/IEC 23002-4.  To the extent that IETR/INSA of Rennes
owns patent rights that would be required to make, use, or 
sell the originally developed software module or portions thereof 
included in the ISO/IEC 23002-4 in a conforming product, IETR/INSA of
Rennes will assure the ISO/IEC that it is willing to 
negotiate licenses under reasonable and non-discriminatory terms and 
conditions with applicants throughout the world.

ISO/IEC gives You a free license to this software module or modifications 
thereof for the sole  purpose of developing theISO/IEC 23002-4

IETR/INSA of Rennes retains full right to modify and use the 
code for its own purpose, assign or donate the code to a third party and 
to inhibit third parties from using the code for products that do not 
conform to MPEG-related ITU Recommendations and/or ISO/IEC International 
Standards. 

This copyright notice must be included in all copies or derivative works. 
Copyright (c) ISO/IEC 2008.
*****************************************************************************/
package Proprietary.IETR.MPEG4.part10.Common;

unit Imp_CavlcLookUpTables :

	bool TotalCoeffValid[6][16][64] = 
		[
			[
				// 0 <= nC < 2 ; nbBitRead = 1
				[ false , true  , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false
				],
				// 0 <= nC < 2 ; nbBitRead = 2
				[ false , true  , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false
				],
				// 0 <= nC < 2 ; nbBitRead = 3
				[ false , true  , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false
				],
				// 0 <= nC < 2 ; nbBitRead = 4
				[ false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false
				],
				// 0 <= nC < 2 ; nbBitRead = 5
				[ false , false , false , true  , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false
				],
				// 0 <= nC < 2 ; nbBitRead = 6
				[ false , false , false , true  , true  , true  , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false
				],
				// 0 <= nC < 2 ; nbBitRead = 7
				[ false , false , false , false , true  , true  , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false
				],
				// 0 <= nC < 2 ; nbBitRead = 8
				[ false , false , false , false , true  , true  , true  , true  , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false
				],
				// 0 <= nC < 2 ; nbBitRead = 9
				[ false , false , false , false , true  , true  , true  , true  , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false
				],
				// 0 <= nC < 2 ; nbBitRead = 10
				[ false , false , false , false , true  , true  , true  , true  , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false
				],
				// 0 <= nC < 2 ; nbBitRead = 11
				[ false , false , false , false , true  , true  , true  , true  , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false
				],
				// 0 <= nC < 2 ; nbBitRead = 12
				[ false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false
				],
				// 0 <= nC < 2 ; nbBitRead = 13
				[ false , false , false , false , false , false , false , false , true  , true ,
				  true  , true  , true  , true  , true  , true  , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false
				],
				// 0 <= nC < 2 ; nbBitRead = 14
				[ false , false , false , false , false , false , false , false , true  , true ,
				  true  , true  , true  , true  , true  , true  , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false
				],
				// 0 <= nC < 2 ; nbBitRead = 15
				[ false , true  , false , false , false , false , false , false , true  , true ,
				  true  , true  , true  , true  , true  , true  , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false
				],
				// 0 <= nC < 2 ; nbBitRead = 16
				[ false , false , false , false , true  , true  , true  , true  , true  , true ,
				  true  , true  , true  , true  , true  , true  , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false
				]
			],
			[
				// 2 <= nC < 4 ; nbBitRead = 1
				[ false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false
				],
				// 2 <= nC < 4 ; nbBitRead = 2
				[ false , false , true  , true  , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false
				],
				// 2 <= nC < 4 ; nbBitRead = 3
				[ false , false , false , true  , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false
				],
				// 2 <= nC < 4 ; nbBitRead = 4
				[ false , false , false , false , true  , true  , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false
				],
				// 2 <= nC < 4 ; nbBitRead = 5
				[ false , false , false , false , false , false , true  , true  , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false
				],
				// 2 <= nC < 4 ; nbBitRead = 6
				[ false , false , false , false , true  , true  , true  , true  , true  , true ,
				  true  , true  , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false
				],
				// 2 <= nC < 4 ; nbBitRead = 7
				[ false , false , false , false , true  , true  , true  , true  , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false
				],
				// 2 <= nC < 4 ; nbBitRead = 8
				[ false , false , false , false , true  , true  , true  , true  , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false
				],
				// 2 <= nC < 4 ; nbBitRead = 9
				[ false , false , false , false , true  , true  , true  , true  , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false
				],
				// 2 <= nC < 4 ; nbBitRead = 10
				[ false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false
				],
				// 2 <= nC < 4 ; nbBitRead = 11
				[ false , false , false , false , false , false , false , false , true  , true ,
				  true  , true  , true  , true  , true  , true  , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false
				],
				// 2 <= nC < 4 ; nbBitRead = 12
				[ false , false , false , false , false , false , false , false , true  , true ,
				  true  , true  , true  , true  , true  , true  , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false
				],
				// 2 <= nC < 4 ; nbBitRead = 13
				[ false , true  , false , false , false , false , true  , true  , true  , true ,
				  true  , true  , true  , true  , true  , true  , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false
				],
				// 2 <= nC < 4 ; nbBitRead = 14
				[ false , false , false , false , true  , true  , true  , true  , true  , true ,
				  true  , true  , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false
				],
				// 2 <= nC < 4 ; nbBitRead = 15
				[ false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false
				],
				// 2 <= nC < 4 ; nbBitRead = 16
				[ false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false
				]
			],
			[
				// 4 <= nC < 8 ; nbBitRead = 1
				[ false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false
				],
				// 4 <= nC < 8 ; nbBitRead = 2
				[ false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false
				],
				// 4 <= nC < 8 ; nbBitRead = 3
				[ false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false
				],
				// 4 <= nC < 8 ; nbBitRead = 4
				[ false , false , false , false , false , false , false , false , true  , true ,
				  true  , true  , true  , true  , true  , true  , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false
				],
				// 4 <= nC < 8 ; nbBitRead = 5
				[ false , false , false , false , false , false , false , false , true  , true ,
				  true  , true  , true  , true  , true  , true  , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false
				],
				// 4 <= nC < 8 ; nbBitRead = 6
				[ false , false , false , false , false , false , false , false , true  , true ,
				  true  , true  , true  , true  , true  , true  , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false
				],
				// 4 <= nC < 8 ; nbBitRead = 7
				[ false , false , false , false , false , false , false , false , true  , true ,
				  true  , true  , true  , true  , true  , true  , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false
				],
				// 4 <= nC < 8 ; nbBitRead = 8
				[ false , false , false , false , false , false , false , false , true  , true ,
				  true  , true  , true  , true  , true  , true  , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false
				],
				// 4 <= nC < 8 ; nbBitRead = 9
				[ false , false , false , false , false , false , false , true  , true  , true ,
				  true  , true  , true  , true  , true  , true  , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false
				],
				// 4 <= nC < 8 ; nbBitRead = 10
				[ false , true  , true  , true  , true  , true  , true  , true  , true  , true ,
				  true  , true  , true  , true  , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false
				],
				// 4 <= nC < 8 ; nbBitRead = 11
				[ false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false
				],
				// 4 <= nC < 8 ; nbBitRead = 12
				[ false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false
				],
				// 4 <= nC < 8 ; nbBitRead = 13
				[ false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false
				],
				// 4 <= nC < 8 ; nbBitRead = 14
				[ false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false
				],
				// 4 <= nC < 8 ; nbBitRead = 15
				[ false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false
				],
				// 4 <= nC < 8 ; nbBitRead = 16
				[ false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false
				]
			],
			[
				// 8 <= nC ; nbBitRead = 1
				[ false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false
				],
				// 8 <= nC ; nbBitRead = 2
				[ false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false
				],
				// 8 <= nC ; nbBitRead = 3
				[ false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false
				],
				// 8 <= nC ; nbBitRead = 4
				[ false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false
				],
				// 8 <= nC ; nbBitRead = 5
				[ false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false
				],
				// 8 <= nC ; nbBitRead = 6
				[ true  , true  , false , true  , true  , true  , true  , false , true  , true ,
				  true  , true  , true  , true  , true  , true  , true  , true  , true  , true ,
				  true  , true  , true  , true  , true  , true  , true  , true  , true  , true ,
				  true  , true  , true  , true  , true  , true  , true  , true  , true  , true ,
				  true  , true  , true  , true  , true  , true  , true  , true  , true  , true ,
				  true  , true  , true  , true  , true  , true  , true  , true  , true  , true ,
				  true  , true  , true  , true
				],
				// 8 <= nC ; nbBitRead = 7
				[ false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false
				],
				// 8 <= nC ; nbBitRead = 8
				[ false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false
				],
				// 8 <= nC ; nbBitRead = 9
				[ false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false
				],
				// 8 <= nC ; nbBitRead = 10
				[ false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false
				],
				// 8 <= nC ; nbBitRead = 11
				[ false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false
				],
				// 8 <= nC ; nbBitRead = 12
				[ false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false
				],
				// 8 <= nC ; nbBitRead = 13
				[ false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false
				],
				// 8 <= nC ; nbBitRead = 14
				[ false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false
				],
				// 8 <= nC ; nbBitRead = 15
				[ false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false
				],
				// 8 <= nC ; nbBitRead = 16
				[ false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false
				]
			],
			[
				// nC == -1 ; nbBitRead = 1
				[ false , true  , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false
				],
				// nC == -1 ; nbBitRead = 2
				[ false , true  , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false
				],
				// nC == -1 ; nbBitRead = 3
				[ false , true  , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false
				],
				// nC == -1 ; nbBitRead = 4
				[ false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false
				],
				// nC == -1 ; nbBitRead = 5
				[ false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false
				],
				// nC == -1 ; nbBitRead = 6
				[ false , false , true  , true  , true  , true  , true  , true  , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false
				],
				// nC == -1 ; nbBitRead = 7
				[ true  , false , true  , true  , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false
				],
				// nC == -1 ; nbBitRead = 8
				[ false , false , true  , true  , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false
				],
				// nC == -1 ; nbBitRead = 9
				[ false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false
				],
				// nC == -1 ; nbBitRead = 10
				[ false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false
				],
				// nC == -1 ; nbBitRead = 11
				[ false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false
				],
				// nC == -1 ; nbBitRead = 12
				[ false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false
				],
				// nC == -1 ; nbBitRead = 13
				[ false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false
				],
				// nC == -1 ; nbBitRead = 14
				[ false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false
				],
				// nC == -1 ; nbBitRead = 15
				[ false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false
				],
				// nC == -1 ; nbBitRead = 16
				[ false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false
				]
			],
			[
				// nC == -2 ; nbBitRead = 1
				[ false , true  , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false
				],
				// nC == -2 ; nbBitRead = 2
				[ false , true  , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false
				],
				// nC == -2 ; nbBitRead = 3
				[ false , true  , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false
				],
				// nC == -2 ; nbBitRead = 4
				[ false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false
				],
				// nC == -2 ; nbBitRead = 5
				[ false , true  , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false
				],
				// nC == -2 ; nbBitRead = 6
				[ false , true  , false , false , false , true  , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false
				],
				// nC == -2 ; nbBitRead = 7
				[ false , false , false , false , false , false , false , false , true  , true ,
				  true  , true  , true  , true  , true  , true  , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false
				],
				// nC == -2 ; nbBitRead = 8
				[ false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false
				],
				// nC == -2 ; nbBitRead = 9
				[ false , false , false , false , true  , true  , true  , true  , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false
				],
				// nC == -2 ; nbBitRead = 10
				[ false , false , false , false , true  , false , true  , true  , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false
				],
				// nC == -2 ; nbBitRead = 11
				[ false , false , false , false , true  , true  , true  , true  , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false
				],
				// nC == -2 ; nbBitRead = 12
				[ false , false , false , false , true  , true  , true  , true  , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false
				],
				// nC == -2 ; nbBitRead = 13
				[ false , false , false , false , false , false , false , true  , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false
				],
				// nC == -2 ; nbBitRead = 14
				[ false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false
				],
				// nC == -2 ; nbBitRead = 15
				[ false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false
				],
				// nC == -2 ; nbBitRead = 16
				[ false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false , false , false , false , false , false , false,
				  false , false , false , false
				]
			]
		];


	//The first byte is TrailingOnes(coeff_token), the second byte isTotalCoeff(coeff_token)
	uint(size=16) TotalCoeffValue[6][16][64] =
		[
			[
				// 0 <= nC < 2 ; nbBitRead = 1
				[ 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000
				],
				// 0 <= nC < 2 ; nbBitRead = 2
				[ 0x0000 , 0x0101 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000
				],
				// 0 <= nC < 2 ; nbBitRead = 3
				[ 0x0000 , 0x0202 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000
				],
				// 0 <= nC < 2 ; nbBitRead = 4
				[ 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000
				],
				// 0 <= nC < 2 ; nbBitRead = 5
				[ 0x0000 , 0x0000 , 0x0000 , 0x0303 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000
				],
				// 0 <= nC < 2 ; nbBitRead = 6
				[ 0x0000 , 0x0000 , 0x0000 , 0x0304 , 0x0102 , 0x0001 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000
				],
				// 0 <= nC < 2 ; nbBitRead = 7
				[ 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0305 , 0x0203 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000
				],
				// 0 <= nC < 2 ; nbBitRead = 8
				[ 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0306 , 0x0204 , 0x0103 , 0x0002 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000
				],
				// 0 <= nC < 2 ; nbBitRead = 9
				[ 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0307 , 0x0205 , 0x0104 , 0x0003 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000
				],
				// 0 <= nC < 2 ; nbBitRead = 10
				[ 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0308 , 0x0206 , 0x0105 , 0x0004 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000
				],
				// 0 <= nC < 2 ; nbBitRead = 11
				[ 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0309 , 0x0207 , 0x0106 , 0x0005 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000
				],
				// 0 <= nC < 2 ; nbBitRead = 12
				[ 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000
				],
				// 0 <= nC < 2 ; nbBitRead = 13
				[ 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0008 , 0x0209 ,
				  0x0108 ,  0x007 , 0x030A , 0x0208 , 0x0107 , 0x0006 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000
				],
				// 0 <= nC < 2 ; nbBitRead = 14
				[ 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x030C , 0x020B ,
				  0x010A , 0x000A , 0x030B , 0x020A , 0x0109 , 0x0009 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000
				],
				// 0 <= nC < 2 ; nbBitRead = 15
				[ 0x0000 , 0x010D , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x030E , 0x020D ,
				  0x010C , 0x000C , 0x030D , 0x020C , 0x010B , 0x000B , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000
				],
				// 0 <= nC < 2 ; nbBitRead = 16
				[ 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0010 , 0x0210 , 0x0110 , 0x000F , 0x0310 , 0x020F ,
				  0x010F , 0x000E , 0x030F , 0x020E , 0x010E , 0x000D , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000
				]
			],
			[
				// 2 <= nC < 4 ; nbBitRead = 1
				[ 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000
				],
				// 2 <= nC < 4 ; nbBitRead = 2
				[ 0x0000 , 0x0000 , 0x0101 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000
				],
				// 2 <= nC < 4 ; nbBitRead = 3
				[ 0x0000 , 0x0000 , 0x0000 , 0x0202 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000
				],
				// 2 <= nC < 4 ; nbBitRead = 4
				[ 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0304 , 0x0303 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000
				],
				// 2 <= nC < 4 ; nbBitRead = 5
				[ 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0305 , 0x0102 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000
				],
				// 2 <= nC < 4 ; nbBitRead = 6
				[ 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0307 , 0x0204 , 0x0104 , 0x0002 , 0x0306 , 0x0203 ,
				  0x0103 , 0x0001 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000
				],
				// 2 <= nC < 4 ; nbBitRead = 7
				[ 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0308 , 0x0205 , 0x0105 , 0x0003 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000
				],
				// 2 <= nC < 4 ; nbBitRead = 8
				[ 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0005 , 0x0206 , 0x0106 , 0x0004 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000
				],
				// 2 <= nC < 4 ; nbBitRead = 9
				[ 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0309 , 0x0207 , 0x0107 , 0x0006 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000
				],
				// 2 <= nC < 4 ; nbBitRead = 10
				[ 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000
				],
				// 2 <= nC < 4 ; nbBitRead = 11
				[ 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x030B , 0x0209 ,
				  0x0109 , 0x0008 , 0x030A , 0x0208 , 0x0108 ,  0x007 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000
				],
				// 2 <= nC < 4 ; nbBitRead = 12
				[ 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x000B , 0x020B ,
				  0x010B , 0x000A , 0x030C , 0x020A , 0x010A , 0x0009 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000
				],
				// 2 <= nC < 4 ; nbBitRead = 13
				[ 0x0000 , 0x030F , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x020E , 0x000E , 0x030E , 0x020D ,
				  0x010D , 0x000D , 0x030D , 0x020C , 0x010C , 0x000C , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000
				],
				// 2 <= nC < 4 ; nbBitRead = 14
				[ 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0310 , 0x0210 , 0x0110 , 0x0010 , 0x010F , 0x000F ,
				  0x020F , 0x010E , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000
				],
				// 2 <= nC < 4 ; nbBitRead = 15
				[ 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000
				],
				// 2 <= nC < 4 ; nbBitRead = 16
				[ 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000
				]
			],
			[
				// 4 <= nC < 8 ; nbBitRead = 1
				[ 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000
				],
				// 4 <= nC < 8 ; nbBitRead = 2
				[ 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000
				],
				// 4 <= nC < 8 ; nbBitRead = 3
				[ 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000
				],
				// 4 <= nC < 8 ; nbBitRead = 4
				[ 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0307 , 0x0306 ,
				  0x0305 , 0x0304 , 0x0303 , 0x0202 , 0x0101 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000
				],
				// 4 <= nC < 8 ; nbBitRead = 5
				[ 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0105 , 0x0205 ,
				  0x0104 , 0x0204 , 0x0103 , 0x0308 , 0x0203 , 0x0102 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000
				],
				// 4 <= nC < 8 ; nbBitRead = 6
				[ 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0003 , 0x0207 ,
				  0x0107 , 0x0002 , 0x0309 , 0x0206 , 0x0106 , 0x0001 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000
				],
				// 4 <= nC < 8 ; nbBitRead = 7
				[ 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,  0x007 , 0x0006 ,
				  0x0209 , 0x0005 , 0x030A , 0x0208 , 0x0108 , 0x0004 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000
				],
				// 4 <= nC < 8 ; nbBitRead = 8
				[ 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x030C , 0x030C , 0x020B ,
				  0x010A , 0x0009 , 0x030B , 0x020A , 0x0109 , 0x0008 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000
				],
				// 4 <= nC < 8 ; nbBitRead = 9
				[ 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x010D , 0x000C , 0x020D ,
				  0x010C , 0x000B , 0x030D , 0x020C , 0x010B , 0x000A , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000
				],
				// 4 <= nC < 8 ; nbBitRead = 10
				[ 0x0000 , 0x0010 , 0x0310 , 0x0210 , 0x0110 , 0x000F , 0x030F , 0x020F , 0x010F , 0x000E ,
				  0x030E , 0x020E , 0x010E , 0x000D , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000
				],
				// 4 <= nC < 8 ; nbBitRead = 11
				[ 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000
				],
				// 4 <= nC < 8 ; nbBitRead = 12
				[ 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000
				],
				// 4 <= nC < 8 ; nbBitRead = 13
				[ 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000
				],
				// 4 <= nC < 8 ; nbBitRead = 14
				[ 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000
				],
				// 4 <= nC < 8 ; nbBitRead = 15
				[ 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000
				],
				// 4 <= nC < 8 ; nbBitRead = 16
				[ 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000
				]
			],
			[
				// 8 <= nC ; nbBitRead = 1
				[ 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000
				],
				// 8 <= nC ; nbBitRead = 2
				[ 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000
				],
				// 8 <= nC ; nbBitRead = 3
				[ 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000
				],
				// 8 <= nC ; nbBitRead = 4
				[ 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000
				],
				// 8 <= nC ; nbBitRead = 5
				[ 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000
				],
				// 8 <= nC ; nbBitRead = 6
				[ 0x0001 , 0x0101 , 0x0000 , 0x0000 , 0x0002 , 0x0102 , 0x0202 , 0x0000 , 0x0003 , 0x0103 ,
				  0x0203 , 0x0303 , 0x0004 , 0x0104 , 0x0204 , 0x0304 , 0x0005 , 0x0105 , 0x0205 , 0x0305 ,
				  0x0006 , 0x0106 , 0x0206 , 0x0306 ,  0x007 , 0x0107 , 0x0207 , 0x0307 , 0x0008 , 0x0108 ,
				  0x0208 , 0x0308 , 0x0009 , 0x0109 , 0x0209 , 0x0309 , 0x000A , 0x010A , 0x020A , 0x030A ,
				  0x000B , 0x010B , 0x020B , 0x030B , 0x000C , 0x010C , 0x020C , 0x030C , 0x000D , 0x010D ,
				  0x020D , 0x030D , 0x000E , 0x010E , 0x020E , 0x030E , 0x000F , 0x010F , 0x020F , 0x030F ,
				  0x0010 , 0x0110 , 0x0210 , 0x0310
				],
				// 8 <= nC ; nbBitRead = 7
				[ 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000
				],
				// 8 <= nC ; nbBitRead = 8
				[ 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000
				],
				// 8 <= nC ; nbBitRead = 9
				[ 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000
				],
				// 8 <= nC ; nbBitRead = 10
				[ 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000
				],
				// 8 <= nC ; nbBitRead = 11
				[ 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000
				],
				// 8 <= nC ; nbBitRead = 12
				[ 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000
				],
				// 8 <= nC ; nbBitRead = 13
				[ 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000
				],
				// 8 <= nC ; nbBitRead = 14
				[ 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000
				],
				// 8 <= nC ; nbBitRead = 15
				[ 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000
				],
				// 8 <= nC ; nbBitRead = 16
				[ 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000
				]
			],
			[
				// nC == -1 ; nbBitRead = 1
				[ 0x0000 , 0x0101 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000
				],
				// nC == -1 ; nbBitRead = 2
				[ 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000
				],
				// nC == -1 ; nbBitRead = 3
				[ 0x0000 , 0x0202 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000
				],
				// nC == -1 ; nbBitRead = 4
				[ 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000
				],
				// nC == -1 ; nbBitRead = 5
				[ 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000
				],
				// nC == -1 ; nbBitRead = 6
				[ 0x0000 , 0x0000 , 0x0004 , 0x0003 , 0x0002 , 0x0303 , 0x0102 , 0x0001 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000
				],
				// nC == -1 ; nbBitRead = 7
				[ 0x0304 , 0x0000 , 0x0203 , 0x0103 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000
				],
				// nC == -1 ; nbBitRead = 8
				[ 0x0000 , 0x0000 , 0x0204 , 0x0104 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000
				],
				// nC == -1 ; nbBitRead = 9
				[ 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000
				],
				// nC == -1 ; nbBitRead = 10
				[ 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000
				],
				// nC == -1 ; nbBitRead = 11
				[ 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000
				],
				// nC == -1 ; nbBitRead = 12
				[ 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000
				],
				// nC == -1 ; nbBitRead = 13
				[ 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000
				],
				// nC == -1 ; nbBitRead = 14
				[ 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000
				],
				// nC == -1 ; nbBitRead = 15
				[ 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000
				],
				// nC == -1 ; nbBitRead = 16
				[ 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000
				]
			],
			[
				// nC == -2 ; nbBitRead = 1
				[ 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000
				],
				// nC == -2 ; nbBitRead = 2
				[ 0x0000 , 0x0101 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000
				],
				// nC == -2 ; nbBitRead = 3
				[ 0x0000 , 0x0202 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000
				],
				// nC == -2 ; nbBitRead = 4
				[ 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000
				],
				// nC == -2 ; nbBitRead = 5
				[ 0x0000 , 0x0303 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000
				],
				// nC == -2 ; nbBitRead = 6
				[ 0x0000 , 0x0304 , 0x0000 , 0x0000 , 0x0000 , 0x0206 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000
				],
				// nC == -2 ; nbBitRead = 7
				[ 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0306 , 0x0305 ,
				  0x0204 , 0x0203 , 0x0103 , 0x0102 , 0x0002 , 0x0001 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000
				],
				// nC == -2 ; nbBitRead = 8
				[ 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000
				],
				// nC == -2 ; nbBitRead = 9
				[ 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0205 , 0x0104 , 0x0004 , 0x0003 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000
				],
				// nC == -2 ; nbBitRead = 10
				[ 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0307 , 0x0000 , 0x0105 , 0x0005 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000
				],
				// nC == -2 ; nbBitRead = 11
				[ 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0308 , 0x0207 , 0x0106 , 0x0006 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000
				],
				// nC == -2 ; nbBitRead = 12
				[ 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0208 , 0x0108 , 0x0107 ,  0x007 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000
				],
				// nC == -2 ; nbBitRead = 13
				[ 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0008 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000
				],
				// nC == -2 ; nbBitRead = 14
				[ 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000
				],
				// nC == -2 ; nbBitRead = 15
				[ 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000
				],
				// nC == -2 ; nbBitRead = 16
				[ 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 , 0x0000 ,
				  0x0000 , 0x0000 , 0x0000 , 0x0000
				]
			]
		];

	bool TotalZerosValid[3][16][16][8] =
		[
			[
				[
					// MaxNumCoeff = 4 ; TotalCoeff = 0 ; nbBitRead = 0
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 0 ; nbBitRead = 1
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 0 ; nbBitRead = 2
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 0 ; nbBitRead = 3
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 0 ; nbBitRead = 4
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 0 ; nbBitRead = 5
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 0 ; nbBitRead = 6
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 0 ; nbBitRead = 7
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 0 ; nbBitRead = 8
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 0 ; nbBitRead = 9
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 0 ; nbBitRead = 10
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 0 ; nbBitRead = 11
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 0 ; nbBitRead = 12
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 0 ; nbBitRead = 13
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 0 ; nbBitRead = 14
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 0 ; nbBitRead = 15
					[ false, false , false , false , false , false , false , false ]
				],
				[
					// MaxNumCoeff = 4 ; TotalCoeff = 1 ; nbBitRead = 0
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 1 ; nbBitRead = 1
					[ false, true  , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 1 ; nbBitRead = 2
					[ false, true  , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 1 ; nbBitRead = 3
					[ true , true  , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 1 ; nbBitRead = 4
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 1 ; nbBitRead = 5
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 1 ; nbBitRead = 6
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 1 ; nbBitRead = 7
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 1 ; nbBitRead = 8
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 1 ; nbBitRead = 9
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 1 ; nbBitRead = 10
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 1 ; nbBitRead = 11
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 1 ; nbBitRead = 12
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 1 ; nbBitRead = 13
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 1 ; nbBitRead = 14
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 1 ; nbBitRead = 15
					[ false, false , false , false , false , false , false , false ]
				],
				[
					// MaxNumCoeff = 4 ; TotalCoeff = 2 ; nbBitRead = 0
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 2 ; nbBitRead = 1
					[ false, true  , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 2 ; nbBitRead = 2
					[ true , true  , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 2 ; nbBitRead = 3
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 2 ; nbBitRead = 4
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 2 ; nbBitRead = 5
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 2 ; nbBitRead = 6
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 2 ; nbBitRead = 7
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 2 ; nbBitRead = 8
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 2 ; nbBitRead = 9
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 2 ; nbBitRead = 10
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 2 ; nbBitRead = 11
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 2 ; nbBitRead = 12
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 2 ; nbBitRead = 13
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 2 ; nbBitRead = 14
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 2 ; nbBitRead = 15
					[ false, false , false , false , false , false , false , false ]
				],
				[
					// MaxNumCoeff = 4 ; TotalCoeff = 3 ; nbBitRead = 0
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 3 ; nbBitRead = 1
					[ true , true  , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 3 ; nbBitRead = 2
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 3 ; nbBitRead = 3
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 3 ; nbBitRead = 4
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 3 ; nbBitRead = 5
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 3 ; nbBitRead = 6
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 3 ; nbBitRead = 7
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 3 ; nbBitRead = 8
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 3 ; nbBitRead = 9
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 3 ; nbBitRead = 10
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 3 ; nbBitRead = 11
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 3 ; nbBitRead = 12
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 3 ; nbBitRead = 13
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 3 ; nbBitRead = 14
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 3 ; nbBitRead = 15
					[ false, false , false , false , false , false , false , false ]
				],
				[
					// MaxNumCoeff = 4 ; TotalCoeff = 4 ; nbBitRead = 0
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 4 ; nbBitRead = 1
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 4 ; nbBitRead = 2
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 4 ; nbBitRead = 3
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 4 ; nbBitRead = 4
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 4 ; nbBitRead = 5
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 4 ; nbBitRead = 6
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 4 ; nbBitRead = 7
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 4 ; nbBitRead = 8
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 4 ; nbBitRead = 9
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 4 ; nbBitRead = 10
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 4 ; nbBitRead = 11
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 4 ; nbBitRead = 12
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 4 ; nbBitRead = 13
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 4 ; nbBitRead = 14
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 4 ; nbBitRead = 15
					[ false, false , false , false , false , false , false , false ]
				],
				[
					// MaxNumCoeff = 4 ; TotalCoeff = 5 ; nbBitRead = 0
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 5 ; nbBitRead = 1
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 5 ; nbBitRead = 2
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 5 ; nbBitRead = 3
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 5 ; nbBitRead = 4
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 5 ; nbBitRead = 5
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 5 ; nbBitRead = 6
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 5 ; nbBitRead = 7
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 5 ; nbBitRead = 8
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 5 ; nbBitRead = 9
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 5 ; nbBitRead = 10
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 5 ; nbBitRead = 11
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 5 ; nbBitRead = 12
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 5 ; nbBitRead = 13
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 5 ; nbBitRead = 14
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 5 ; nbBitRead = 15
					[ false, false , false , false , false , false , false , false ]
				],
				[
					// MaxNumCoeff = 4 ; TotalCoeff = 6 ; nbBitRead = 0
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 6 ; nbBitRead = 1
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 6 ; nbBitRead = 2
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 6 ; nbBitRead = 3
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 6 ; nbBitRead = 4
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 6 ; nbBitRead = 5
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 6 ; nbBitRead = 6
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 6 ; nbBitRead = 7
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 6 ; nbBitRead = 8
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 6 ; nbBitRead = 9
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 6 ; nbBitRead = 10
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 6 ; nbBitRead = 11
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 6 ; nbBitRead = 12
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 6 ; nbBitRead = 13
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 6 ; nbBitRead = 14
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 6 ; nbBitRead = 15
					[ false, false , false , false , false , false , false , false ]
				],
				[
					// MaxNumCoeff = 4 ; TotalCoeff = 7 ; nbBitRead = 0
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 7 ; nbBitRead = 1
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 7 ; nbBitRead = 2
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 7 ; nbBitRead = 3
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 7 ; nbBitRead = 4
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 7 ; nbBitRead = 5
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 7 ; nbBitRead = 6
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 7 ; nbBitRead = 7
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 7 ; nbBitRead = 8
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 7 ; nbBitRead = 9
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 7 ; nbBitRead = 10
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 7 ; nbBitRead = 11
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 7 ; nbBitRead = 12
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 7 ; nbBitRead = 13
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 7 ; nbBitRead = 14
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 7 ; nbBitRead = 15
					[ false, false , false , false , false , false , false , false ]
				],
				[
					// MaxNumCoeff = 4 ; TotalCoeff = 8 ; nbBitRead = 0
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 8 ; nbBitRead = 1
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 8 ; nbBitRead = 2
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 8 ; nbBitRead = 3
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 8 ; nbBitRead = 4
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 8 ; nbBitRead = 5
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 8 ; nbBitRead = 6
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 8 ; nbBitRead = 7
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 8 ; nbBitRead = 8
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 8 ; nbBitRead = 9
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 8 ; nbBitRead = 10
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 8 ; nbBitRead = 11
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 8 ; nbBitRead = 12
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 8 ; nbBitRead = 13
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 8 ; nbBitRead = 14
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 8 ; nbBitRead = 15
					[ false, false , false , false , false , false , false , false ]
				],
				[
					// MaxNumCoeff = 4 ; TotalCoeff = 9 ; nbBitRead = 0
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 9 ; nbBitRead = 1
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 9 ; nbBitRead = 2
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 9 ; nbBitRead = 3
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 9 ; nbBitRead = 4
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 9 ; nbBitRead = 5
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 9 ; nbBitRead = 6
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 9 ; nbBitRead = 7
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 9 ; nbBitRead = 8
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 9 ; nbBitRead = 9
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 9 ; nbBitRead = 10
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 9 ; nbBitRead = 11
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 9 ; nbBitRead = 12
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 9 ; nbBitRead = 13
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 9 ; nbBitRead = 14
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 9 ; nbBitRead = 15
					[ false, false , false , false , false , false , false , false ]
				],
				[
					// MaxNumCoeff = 4 ; TotalCoeff = 10 ; nbBitRead = 0
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 10 ; nbBitRead = 1
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 10 ; nbBitRead = 2
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 10 ; nbBitRead = 3
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 10 ; nbBitRead = 4
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 10 ; nbBitRead = 5
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 10 ; nbBitRead = 6
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 10 ; nbBitRead = 7
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 10 ; nbBitRead = 8
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 10 ; nbBitRead = 9
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 10 ; nbBitRead = 10
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 10 ; nbBitRead = 11
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 10 ; nbBitRead = 12
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 10 ; nbBitRead = 13
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 10 ; nbBitRead = 14
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 10 ; nbBitRead = 15
					[ false, false , false , false , false , false , false , false ]
				],
				[
					// MaxNumCoeff = 4 ; TotalCoeff = 11 ; nbBitRead = 0
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 11 ; nbBitRead = 1
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 11 ; nbBitRead = 2
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 11 ; nbBitRead = 3
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 11 ; nbBitRead = 4
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 11 ; nbBitRead = 5
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 11 ; nbBitRead = 6
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 11 ; nbBitRead = 7
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 11 ; nbBitRead = 8
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 11 ; nbBitRead = 9
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 11 ; nbBitRead = 10
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 11 ; nbBitRead = 11
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 11 ; nbBitRead = 12
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 11 ; nbBitRead = 13
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 11 ; nbBitRead = 14
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 11 ; nbBitRead = 15
					[ false, false , false , false , false , false , false , false ]
				],
				[
					// MaxNumCoeff = 4 ; TotalCoeff = 12 ; nbBitRead = 0
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 12 ; nbBitRead = 1
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 12 ; nbBitRead = 2
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 12 ; nbBitRead = 3
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 12 ; nbBitRead = 4
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 12 ; nbBitRead = 5
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 12 ; nbBitRead = 6
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 12 ; nbBitRead = 7
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 12 ; nbBitRead = 8
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 12 ; nbBitRead = 9
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 12 ; nbBitRead = 10
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 12 ; nbBitRead = 11
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 12 ; nbBitRead = 12
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 12 ; nbBitRead = 13
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 12 ; nbBitRead = 14
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 12 ; nbBitRead = 15
					[ false, false , false , false , false , false , false , false ]
				],
				[
					// MaxNumCoeff = 4 ; TotalCoeff = 13 ; nbBitRead = 0
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 13 ; nbBitRead = 1
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 13 ; nbBitRead = 2
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 13 ; nbBitRead = 3
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 13 ; nbBitRead = 4
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 13 ; nbBitRead = 5
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 13 ; nbBitRead = 6
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 13 ; nbBitRead = 7
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 13 ; nbBitRead = 8
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 13 ; nbBitRead = 9
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 13 ; nbBitRead = 10
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 13 ; nbBitRead = 11
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 13 ; nbBitRead = 12
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 13 ; nbBitRead = 13
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 13 ; nbBitRead = 14
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 13 ; nbBitRead = 15
					[ false, false , false , false , false , false , false , false ]
				],
				[
					// MaxNumCoeff = 4 ; TotalCoeff = 14 ; nbBitRead = 0
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 14 ; nbBitRead = 1
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 14 ; nbBitRead = 2
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 14 ; nbBitRead = 3
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 14 ; nbBitRead = 4
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 14 ; nbBitRead = 5
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 14 ; nbBitRead = 6
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 14 ; nbBitRead = 7
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 14 ; nbBitRead = 8
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 14 ; nbBitRead = 9
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 14 ; nbBitRead = 10
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 14 ; nbBitRead = 11
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 14 ; nbBitRead = 12
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 14 ; nbBitRead = 13
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 14 ; nbBitRead = 14
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 14 ; nbBitRead = 15
					[ false, false , false , false , false , false , false , false ]
				],
				[
					// MaxNumCoeff = 4 ; TotalCoeff = 15 ; nbBitRead = 0
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 15 ; nbBitRead = 1
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 15 ; nbBitRead = 2
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 15 ; nbBitRead = 3
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 15 ; nbBitRead = 4
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 15 ; nbBitRead = 5
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 15 ; nbBitRead = 6
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 15 ; nbBitRead = 7
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 15 ; nbBitRead = 8
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 15 ; nbBitRead = 9
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 15 ; nbBitRead = 10
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 15 ; nbBitRead = 11
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 15 ; nbBitRead = 12
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 15 ; nbBitRead = 13
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 15 ; nbBitRead = 14
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 4 ; TotalCoeff = 15 ; nbBitRead = 15
					[ false, false , false , false , false , false , false , false ]
				]
			],
			[
				[
					// MaxNumCoeff = 8 ; TotalCoeff = 0 ; nbBitRead = 0
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 0 ; nbBitRead = 1
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 0 ; nbBitRead = 2
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 0 ; nbBitRead = 3
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 0 ; nbBitRead = 4
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 0 ; nbBitRead = 5
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 0 ; nbBitRead = 6
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 0 ; nbBitRead = 7
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 0 ; nbBitRead = 8
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 0 ; nbBitRead = 9
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 0 ; nbBitRead = 10
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 0 ; nbBitRead = 11
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 0 ; nbBitRead = 12
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 0 ; nbBitRead = 13
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 0 ; nbBitRead = 14
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 0 ; nbBitRead = 15
					[ false, false , false , false , false , false , false , false ]
				],
				[
					// MaxNumCoeff = 8 ; TotalCoeff = 1 ; nbBitRead = 0
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 1 ; nbBitRead = 1
					[ false, true  , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 1 ; nbBitRead = 2
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 1 ; nbBitRead = 3
					[ false, false , true  , true  , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 1 ; nbBitRead = 4
					[ false, true  , true  , true  , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 1 ; nbBitRead = 5
					[ true , true  , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 1 ; nbBitRead = 6
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 1 ; nbBitRead = 7
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 1 ; nbBitRead = 8
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 1 ; nbBitRead = 9
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 1 ; nbBitRead = 10
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 1 ; nbBitRead = 11
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 1 ; nbBitRead = 12
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 1 ; nbBitRead = 13
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 1 ; nbBitRead = 14
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 1 ; nbBitRead = 15
					[ false, false , false , false , false , false , false , false ]
				],
				[
					// MaxNumCoeff = 8 ; TotalCoeff = 2 ; nbBitRead = 0
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 2 ; nbBitRead = 1
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 2 ; nbBitRead = 2
					[ false, true  , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 2 ; nbBitRead = 3
					[ true , true  , false , false , true  , true  , true  , true  ],
					// MaxNumCoeff = 8 ; TotalCoeff = 2 ; nbBitRead = 4
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 2 ; nbBitRead = 5
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 2 ; nbBitRead = 6
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 2 ; nbBitRead = 7
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 2 ; nbBitRead = 8
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 2 ; nbBitRead = 9
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 2 ; nbBitRead = 10
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 2 ; nbBitRead = 11
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 2 ; nbBitRead = 12
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 2 ; nbBitRead = 13
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 2 ; nbBitRead = 14
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 2 ; nbBitRead = 15
					[ false, false , false , false , false , false , false , false ]
				],
				[
					// MaxNumCoeff = 8 ; TotalCoeff = 3 ; nbBitRead = 0
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 3 ; nbBitRead = 1
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 3 ; nbBitRead = 2
					[ false, true  , true  , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 3 ; nbBitRead = 3
					[ true , true  , false , false , false , false , true  , true  ],
					// MaxNumCoeff = 8 ; TotalCoeff = 3 ; nbBitRead = 4
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 3 ; nbBitRead = 5
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 3 ; nbBitRead = 6
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 3 ; nbBitRead = 7
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 3 ; nbBitRead = 8
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 3 ; nbBitRead = 9
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 3 ; nbBitRead = 10
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 3 ; nbBitRead = 11
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 3 ; nbBitRead = 12
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 3 ; nbBitRead = 13
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 3 ; nbBitRead = 14
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 3 ; nbBitRead = 15
					[ false, false , false , false , false , false , false , false ]
				],
				[
					// MaxNumCoeff = 8 ; TotalCoeff = 4 ; nbBitRead = 0
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 4 ; nbBitRead = 1
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 4 ; nbBitRead = 2
					[ true , true  , true  , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 4 ; nbBitRead = 3
					[ false, false , false , false , false , false , true  , true  ],
					// MaxNumCoeff = 8 ; TotalCoeff = 4 ; nbBitRead = 4
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 4 ; nbBitRead = 5
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 4 ; nbBitRead = 6
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 4 ; nbBitRead = 7
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 4 ; nbBitRead = 8
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 4 ; nbBitRead = 9
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 4 ; nbBitRead = 10
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 4 ; nbBitRead = 11
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 4 ; nbBitRead = 12
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 4 ; nbBitRead = 13
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 4 ; nbBitRead = 14
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 4 ; nbBitRead = 15
					[ false, false , false , false , false , false , false , false ]
				],
				[
					// MaxNumCoeff = 8 ; TotalCoeff = 5 ; nbBitRead = 0
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 5 ; nbBitRead = 1
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 5 ; nbBitRead = 2
					[ true , true  , true  , true  , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 5 ; nbBitRead = 3
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 5 ; nbBitRead = 4
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 5 ; nbBitRead = 5
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 5 ; nbBitRead = 6
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 5 ; nbBitRead = 7
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 5 ; nbBitRead = 8
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 5 ; nbBitRead = 9
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 5 ; nbBitRead = 10
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 5 ; nbBitRead = 11
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 5 ; nbBitRead = 12
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 5 ; nbBitRead = 13
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 5 ; nbBitRead = 14
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 5 ; nbBitRead = 15
					[ false, false , false , false , false , false , false , false ]
				],
				[
					// MaxNumCoeff = 8 ; TotalCoeff = 6 ; nbBitRead = 0
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 6 ; nbBitRead = 1
					[ false, true  , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 6 ; nbBitRead = 2
					[ true , true  , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 6 ; nbBitRead = 3
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 6 ; nbBitRead = 4
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 6 ; nbBitRead = 5
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 6 ; nbBitRead = 6
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 6 ; nbBitRead = 7
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 6 ; nbBitRead = 8
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 6 ; nbBitRead = 9
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 6 ; nbBitRead = 10
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 6 ; nbBitRead = 11
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 6 ; nbBitRead = 12
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 6 ; nbBitRead = 13
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 6 ; nbBitRead = 14
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 6 ; nbBitRead = 15
					[ false, false , false , false , false , false , false , false ]
				],
				[
					// MaxNumCoeff = 8 ; TotalCoeff = 7 ; nbBitRead = 0
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 7 ; nbBitRead = 1
					[ true , true  , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 7 ; nbBitRead = 2
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 7 ; nbBitRead = 3
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 7 ; nbBitRead = 4
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 7 ; nbBitRead = 5
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 7 ; nbBitRead = 6
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 7 ; nbBitRead = 7
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 7 ; nbBitRead = 8
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 7 ; nbBitRead = 9
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 7 ; nbBitRead = 10
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 7 ; nbBitRead = 11
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 7 ; nbBitRead = 12
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 7 ; nbBitRead = 13
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 7 ; nbBitRead = 14
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 7 ; nbBitRead = 15
					[ false, false , false , false , false , false , false , false ]
				],
				[
					// MaxNumCoeff = 8 ; TotalCoeff = 8 ; nbBitRead = 0
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 8 ; nbBitRead = 1
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 8 ; nbBitRead = 2
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 8 ; nbBitRead = 3
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 8 ; nbBitRead = 4
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 8 ; nbBitRead = 5
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 8 ; nbBitRead = 6
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 8 ; nbBitRead = 7
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 8 ; nbBitRead = 8
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 8 ; nbBitRead = 9
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 8 ; nbBitRead = 10
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 8 ; nbBitRead = 11
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 8 ; nbBitRead = 12
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 8 ; nbBitRead = 13
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 8 ; nbBitRead = 14
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 8 ; nbBitRead = 15
					[ false, false , false , false , false , false , false , false ]
				],
				[
					// MaxNumCoeff = 8 ; TotalCoeff = 9 ; nbBitRead = 0
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 9 ; nbBitRead = 1
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 9 ; nbBitRead = 2
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 9 ; nbBitRead = 3
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 9 ; nbBitRead = 4
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 9 ; nbBitRead = 5
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 9 ; nbBitRead = 6
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 9 ; nbBitRead = 7
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 9 ; nbBitRead = 8
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 9 ; nbBitRead = 9
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 9 ; nbBitRead = 10
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 9 ; nbBitRead = 11
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 9 ; nbBitRead = 12
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 9 ; nbBitRead = 13
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 9 ; nbBitRead = 14
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 9 ; nbBitRead = 15
					[ false, false , false , false , false , false , false , false ]
				],
				[
					// MaxNumCoeff = 8 ; TotalCoeff = 10 ; nbBitRead = 0
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 10 ; nbBitRead = 1
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 10 ; nbBitRead = 2
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 10 ; nbBitRead = 3
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 10 ; nbBitRead = 4
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 10 ; nbBitRead = 5
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 10 ; nbBitRead = 6
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 10 ; nbBitRead = 7
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 10 ; nbBitRead = 8
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 10 ; nbBitRead = 9
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 10 ; nbBitRead = 10
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 10 ; nbBitRead = 11
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 10 ; nbBitRead = 12
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 10 ; nbBitRead = 13
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 10 ; nbBitRead = 14
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 10 ; nbBitRead = 15
					[ false, false , false , false , false , false , false , false ]
				],
				[
					// MaxNumCoeff = 8 ; TotalCoeff = 11 ; nbBitRead = 0
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 11 ; nbBitRead = 1
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 11 ; nbBitRead = 2
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 11 ; nbBitRead = 3
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 11 ; nbBitRead = 4
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 11 ; nbBitRead = 5
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 11 ; nbBitRead = 6
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 11 ; nbBitRead = 7
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 11 ; nbBitRead = 8
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 11 ; nbBitRead = 9
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 11 ; nbBitRead = 10
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 11 ; nbBitRead = 11
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 11 ; nbBitRead = 12
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 11 ; nbBitRead = 13
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 11 ; nbBitRead = 14
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 11 ; nbBitRead = 15
					[ false, false , false , false , false , false , false , false ]
				],
				[
					// MaxNumCoeff = 8 ; TotalCoeff = 12 ; nbBitRead = 0
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 12 ; nbBitRead = 1
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 12 ; nbBitRead = 2
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 12 ; nbBitRead = 3
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 12 ; nbBitRead = 4
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 12 ; nbBitRead = 5
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 12 ; nbBitRead = 6
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 12 ; nbBitRead = 7
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 12 ; nbBitRead = 8
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 12 ; nbBitRead = 9
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 12 ; nbBitRead = 10
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 12 ; nbBitRead = 11
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 12 ; nbBitRead = 12
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 12 ; nbBitRead = 13
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 12 ; nbBitRead = 14
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 12 ; nbBitRead = 15
					[ false, false , false , false , false , false , false , false ]
				],
				[
					// MaxNumCoeff = 8 ; TotalCoeff = 13 ; nbBitRead = 0
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 13 ; nbBitRead = 1
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 13 ; nbBitRead = 2
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 13 ; nbBitRead = 3
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 13 ; nbBitRead = 4
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 13 ; nbBitRead = 5
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 13 ; nbBitRead = 6
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 13 ; nbBitRead = 7
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 13 ; nbBitRead = 8
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 13 ; nbBitRead = 9
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 13 ; nbBitRead = 10
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 13 ; nbBitRead = 11
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 13 ; nbBitRead = 12
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 13 ; nbBitRead = 13
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 13 ; nbBitRead = 14
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 13 ; nbBitRead = 15
					[ false, false , false , false , false , false , false , false ]
				],
				[
					// MaxNumCoeff = 8 ; TotalCoeff = 14 ; nbBitRead = 0
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 14 ; nbBitRead = 1
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 14 ; nbBitRead = 2
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 14 ; nbBitRead = 3
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 14 ; nbBitRead = 4
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 14 ; nbBitRead = 5
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 14 ; nbBitRead = 6
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 14 ; nbBitRead = 7
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 14 ; nbBitRead = 8
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 14 ; nbBitRead = 9
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 14 ; nbBitRead = 10
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 14 ; nbBitRead = 11
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 14 ; nbBitRead = 12
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 14 ; nbBitRead = 13
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 14 ; nbBitRead = 14
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 14 ; nbBitRead = 15
					[ false, false , false , false , false , false , false , false ]
				],
				[
					// MaxNumCoeff = 8 ; TotalCoeff = 15 ; nbBitRead = 0
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 15 ; nbBitRead = 1
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 15 ; nbBitRead = 2
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 15 ; nbBitRead = 3
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 15 ; nbBitRead = 4
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 15 ; nbBitRead = 5
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 15 ; nbBitRead = 6
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 15 ; nbBitRead = 7
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 15 ; nbBitRead = 8
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 15 ; nbBitRead = 9
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 15 ; nbBitRead = 10
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 15 ; nbBitRead = 11
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 15 ; nbBitRead = 12
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 15 ; nbBitRead = 13
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 15 ; nbBitRead = 14
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff = 8 ; TotalCoeff = 15 ; nbBitRead = 15
					[ false, false , false , false , false , false , false , false ]
				]
			],
			[
				[
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 0 ; nbBitRead = 0
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 0 ; nbBitRead = 1
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 0 ; nbBitRead = 2
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 0 ; nbBitRead = 3
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 0 ; nbBitRead = 4
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 0 ; nbBitRead = 5
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 0 ; nbBitRead = 6
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 0 ; nbBitRead = 7
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 0 ; nbBitRead = 8
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 0 ; nbBitRead = 9
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 0 ; nbBitRead = 10
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 0 ; nbBitRead = 11
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 0 ; nbBitRead = 12
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 0 ; nbBitRead = 13
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 0 ; nbBitRead = 14
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 0 ; nbBitRead = 15
					[ false, false , false , false , false , false , false , false ]
				],
				[
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 1 ; nbBitRead = 0
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 1 ; nbBitRead = 1
					[ false , true  , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 1 ; nbBitRead = 2
					[ false, false , false , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 1 ; nbBitRead = 3
					[ false , false , true   , true  , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 1 ; nbBitRead = 4
					[ false , false , true   , true  , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 1 ; nbBitRead = 5
					[ false , false , true   , true  , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 1 ; nbBitRead = 6
					[ false , false , true   , true  , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 1 ; nbBitRead = 7
					[ false , false , true   , true  , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 1 ; nbBitRead = 8
					[ false , false , true   , true  , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 1 ; nbBitRead = 9
					[ false , true  , true   , true  , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 1 ; nbBitRead = 10
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 1 ; nbBitRead = 11
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 1 ; nbBitRead = 12
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 1 ; nbBitRead = 13
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 1 ; nbBitRead = 14
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 1 ; nbBitRead = 15
					[ false , false , false  , false , false , false , false , false ]
				],
				[
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 2 ; nbBitRead = 0
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 2 ; nbBitRead = 1
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 2 ; nbBitRead = 2
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 2 ; nbBitRead = 3
					[ false , false , false  , true  , true  , true  , true  , true  ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 2 ; nbBitRead = 4
					[ false , false , true   , true  , true  , true  , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 2 ; nbBitRead = 5
					[ false , false , true   , true  , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 2 ; nbBitRead = 6
					[ true  , true  , true   , true  , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 2 ; nbBitRead = 7
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 2 ; nbBitRead = 8
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 2 ; nbBitRead = 9
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 2 ; nbBitRead = 10
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 2 ; nbBitRead = 11
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 2 ; nbBitRead = 12
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 2 ; nbBitRead = 13
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 2 ; nbBitRead = 14
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 2 ; nbBitRead = 15
					[ false , false , false  , false , false , false , false , false ]
				],
				[
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 3 ; nbBitRead = 0
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 3 ; nbBitRead = 1
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 3 ; nbBitRead = 2
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 3 ; nbBitRead = 3
					[ false , false , false  , true  , true  , true  , true  , true  ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 3 ; nbBitRead = 4
					[ false , false , true   , true  , true  , true  , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 3 ; nbBitRead = 5
					[ false , true  , true   , true  , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 3 ; nbBitRead = 6
					[ true  , true  , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 3 ; nbBitRead = 7
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 3 ; nbBitRead = 8
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 3 ; nbBitRead = 9
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 3 ; nbBitRead = 10
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 3 ; nbBitRead = 11
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 3 ; nbBitRead = 12
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 3 ; nbBitRead = 13
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 3 ; nbBitRead = 14
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 3 ; nbBitRead = 15
					[ false , false , false  , false , false , false , false , false ]
				],
				[
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 4 ; nbBitRead = 0
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 4 ; nbBitRead = 1
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 4 ; nbBitRead = 2
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 4 ; nbBitRead = 3
					[ false , false , false  , true  , true  , true  , true  , true  ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 4 ; nbBitRead = 4
					[ false , false , true   , true  , true  , true  , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 4 ; nbBitRead = 5
					[ true  , true  , true   , true  , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 4 ; nbBitRead = 6
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 4 ; nbBitRead = 7
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 4 ; nbBitRead = 8
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 4 ; nbBitRead = 9
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 4 ; nbBitRead = 10
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 4 ; nbBitRead = 11
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 4 ; nbBitRead = 12
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 4 ; nbBitRead = 13
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 4 ; nbBitRead = 14
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 4 ; nbBitRead = 15
					[ false , false , false  , false , false , false , false , false ]
				],
				[
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 5 ; nbBitRead = 0
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 5 ; nbBitRead = 1
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 5 ; nbBitRead = 2
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 5 ; nbBitRead = 3
					[ false , false , false  , true  , true  , true  , true  , true  ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 5 ; nbBitRead = 4
					[ false , true  , true   , true  , true  , true  , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 5 ; nbBitRead = 5
					[ true  , true  , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 5 ; nbBitRead = 6
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 5 ; nbBitRead = 7
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 5 ; nbBitRead = 8
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 5 ; nbBitRead = 9
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 5 ; nbBitRead = 10
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 5 ; nbBitRead = 11
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 5 ; nbBitRead = 12
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 5 ; nbBitRead = 13
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 5 ; nbBitRead = 14
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 5 ; nbBitRead = 15
					[ false , false , false  , false , false , false , false , false ]
				],
				[
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 6 ; nbBitRead = 0
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 6 ; nbBitRead = 1
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 6 ; nbBitRead = 2
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 6 ; nbBitRead = 3
					[ false , true  , true   , true  , true  , true  , true  , true  ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 6 ; nbBitRead = 4
					[ false , true  , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 6 ; nbBitRead = 5
					[ false , true  , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 6 ; nbBitRead = 6
					[ true  , true  , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 6 ; nbBitRead = 7
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 6 ; nbBitRead = 8
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 6 ; nbBitRead = 9
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 6 ; nbBitRead = 10
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 6 ; nbBitRead = 11
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 6 ; nbBitRead = 12
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 6 ; nbBitRead = 13
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 6 ; nbBitRead = 14
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 6 ; nbBitRead = 15
					[ false , false , false  , false , false , false , false , false ]
				],
				[
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 7 ; nbBitRead = 0
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 7 ; nbBitRead = 1
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 7 ; nbBitRead = 2
					[ false , false , false  , true  , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 7 ; nbBitRead = 3
					[ false , true  , true   , true  , true  , true  , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 7 ; nbBitRead = 4
					[ false , true  , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 7 ; nbBitRead = 5
					[ false , true  , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 7 ; nbBitRead = 6
					[ true  , true  , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 7 ; nbBitRead = 7
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 7 ; nbBitRead = 8
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 7 ; nbBitRead = 9
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 7 ; nbBitRead = 10
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 7 ; nbBitRead = 11
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 7 ; nbBitRead = 12
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 7 ; nbBitRead = 13
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 7 ; nbBitRead = 14
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 7 ; nbBitRead = 15
					[ false , false , false  , false , false , false , false , false ]
				],
				[
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 8 ; nbBitRead = 0
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 8 ; nbBitRead = 1
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 8 ; nbBitRead = 2
					[ false , false , true   , true  , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 8 ; nbBitRead = 3
					[ false , true  , true   , true  , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 8 ; nbBitRead = 4
					[ false , true  , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 8 ; nbBitRead = 5
					[ false , true  , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 8 ; nbBitRead = 6
					[ true  , true  , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 8 ; nbBitRead = 7
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 8 ; nbBitRead = 8
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 8 ; nbBitRead = 9
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 8 ; nbBitRead = 10
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 8 ; nbBitRead = 11
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 8 ; nbBitRead = 12
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 8 ; nbBitRead = 13
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 8 ; nbBitRead = 14
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 8 ; nbBitRead = 15
					[ false , false , false  , false , false , false , false , false ]
				],
				[
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 9 ; nbBitRead = 0
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 9 ; nbBitRead = 1
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 9 ; nbBitRead = 2
					[ false , true  , true   , true  , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 9 ; nbBitRead = 3
					[ false , true  , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 9 ; nbBitRead = 4
					[ false , true  , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 9 ; nbBitRead = 5
					[ false , true  , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 9 ; nbBitRead = 6
					[ true  , true  , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 9 ; nbBitRead = 7
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 9 ; nbBitRead = 8
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 9 ; nbBitRead = 9
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 9 ; nbBitRead = 10
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 9 ; nbBitRead = 11
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 9 ; nbBitRead = 12
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 9 ; nbBitRead = 13
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 9 ; nbBitRead = 14
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 9 ; nbBitRead = 15
					[ false , false , false  , false , false , false , false , false ]
				],
				[
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 10 ; nbBitRead = 0
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 10 ; nbBitRead = 1
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 10 ; nbBitRead = 2
					[ false , true  , true   , true  , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 10 ; nbBitRead = 3
					[ false , true  , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 10 ; nbBitRead = 4
					[ false , true  , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 10 ; nbBitRead = 5
					[ true  , true  , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 10 ; nbBitRead = 6
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 10 ; nbBitRead = 7
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 10 ; nbBitRead = 8
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 10 ; nbBitRead = 9
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 10 ; nbBitRead = 10
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 10 ; nbBitRead = 11
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 10 ; nbBitRead = 12
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 10 ; nbBitRead = 13
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 10 ; nbBitRead = 14
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 10 ; nbBitRead = 15
					[ false , false , false  , false , false , false , false , false ]
				],
				[
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 11 ; nbBitRead = 0
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 11 ; nbBitRead = 1
					[ false , true  , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 11 ; nbBitRead = 2
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 11 ; nbBitRead = 3
					[ false , true  , true   , true  , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 11 ; nbBitRead = 4
					[ true  , true  , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 11 ; nbBitRead = 5
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 11 ; nbBitRead = 6
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 11 ; nbBitRead = 7
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 11 ; nbBitRead = 8
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 11 ; nbBitRead = 9
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 11 ; nbBitRead = 10
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 11 ; nbBitRead = 11
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 11 ; nbBitRead = 12
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 11 ; nbBitRead = 13
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 11 ; nbBitRead = 14
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 11 ; nbBitRead = 15
					[ false , false , false  , false , false , false , false , false ]
				],
				[
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 12 ; nbBitRead = 0
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 12 ; nbBitRead = 1
					[ false , true  , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 12 ; nbBitRead = 2
					[ false , true  , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 12 ; nbBitRead = 3
					[ false , true  , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 12 ; nbBitRead = 4
					[ true  , true  , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 12 ; nbBitRead = 5
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 12 ; nbBitRead = 6
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 12 ; nbBitRead = 7
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 12 ; nbBitRead = 8
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 12 ; nbBitRead = 9
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 12 ; nbBitRead = 10
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 12 ; nbBitRead = 11
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 12 ; nbBitRead = 12
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 12 ; nbBitRead = 13
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 12 ; nbBitRead = 14
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 12 ; nbBitRead = 15
					[ false , false , false  , false , false , false , false , false ]
				],
				[
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 13 ; nbBitRead = 0
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 13 ; nbBitRead = 1
					[ false , true  , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 13 ; nbBitRead = 2
					[ false , true  , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 13 ; nbBitRead = 3
					[ true  , true  , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 13 ; nbBitRead = 4
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 13 ; nbBitRead = 5
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 13 ; nbBitRead = 6
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 13 ; nbBitRead = 7
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 13 ; nbBitRead = 8
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 13 ; nbBitRead = 9
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 13 ; nbBitRead = 10
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 13 ; nbBitRead = 11
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 13 ; nbBitRead = 12
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 13 ; nbBitRead = 13
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 13 ; nbBitRead = 14
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 13 ; nbBitRead = 15
					[ false , false , false  , false , false , false , false , false ]
				],
				[
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 14 ; nbBitRead = 0
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 14 ; nbBitRead = 1
					[ false , true  , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 14 ; nbBitRead = 2
					[ true  , true  , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 14 ; nbBitRead = 3
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 14 ; nbBitRead = 4
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 14 ; nbBitRead = 5
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 14 ; nbBitRead = 6
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 14 ; nbBitRead = 7
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 14 ; nbBitRead = 8
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 14 ; nbBitRead = 9
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 14 ; nbBitRead = 10
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 14 ; nbBitRead = 11
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 14 ; nbBitRead = 12
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 14 ; nbBitRead = 13
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 14 ; nbBitRead = 14
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 14 ; nbBitRead = 15
					[ false , false , false  , false , false , false , false , false ]
				],
				[
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 15 ; nbBitRead = 0
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 15 ; nbBitRead = 1
					[ true  , true  , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 15 ; nbBitRead = 2
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 15 ; nbBitRead = 3
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 15 ; nbBitRead = 4
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 15 ; nbBitRead = 5
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 15 ; nbBitRead = 6
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 15 ; nbBitRead = 7
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 15 ; nbBitRead = 8
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 15 ; nbBitRead = 9
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 15 ; nbBitRead = 10
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 15 ; nbBitRead = 11
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 15 ; nbBitRead = 12
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 15 ; nbBitRead = 13
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 15 ; nbBitRead = 14
					[ false , false , false  , false , false , false , false , false ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 15 ; nbBitRead = 15
					[ false , false , false  , false , false , false , false , false ]
				]
			]
		];

	uint(size=4) TotalZerosValue[3][16][16][8] =
		[
			[
				[
					// MaxNumCoeff = 4 ; TotalCoeff = 0 ; nbBitRead = 0
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 0 ; nbBitRead = 1
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 0 ; nbBitRead = 2
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 0 ; nbBitRead = 3
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 0 ; nbBitRead = 4
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 0 ; nbBitRead = 5
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 0 ; nbBitRead = 6
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 0 ; nbBitRead = 7
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 0 ; nbBitRead = 8
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 0 ; nbBitRead = 9
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 0 ; nbBitRead = 10
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 0 ; nbBitRead = 11
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 0 ; nbBitRead = 12
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 0 ; nbBitRead = 13
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 0 ; nbBitRead = 14
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 0 ; nbBitRead = 15
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ]
				],
				[
					// MaxNumCoeff = 4 ; TotalCoeff = 1 ; nbBitRead = 0
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 1 ; nbBitRead = 1
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 1 ; nbBitRead = 2
					[  0,  1 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 1 ; nbBitRead = 3
					[  3,  2 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 1 ; nbBitRead = 4
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 1 ; nbBitRead = 5
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 1 ; nbBitRead = 6
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 1 ; nbBitRead = 7
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 1 ; nbBitRead = 8
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 1 ; nbBitRead = 9
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 1 ; nbBitRead = 10
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 1 ; nbBitRead = 11
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 1 ; nbBitRead = 12
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 1 ; nbBitRead = 13
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 1 ; nbBitRead = 14
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 1 ; nbBitRead = 15
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ]
				],
				[
					// MaxNumCoeff = 4 ; TotalCoeff = 2 ; nbBitRead = 0
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 2 ; nbBitRead = 1
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 2 ; nbBitRead = 2
					[  2,  1 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 2 ; nbBitRead = 3
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 2 ; nbBitRead = 4
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 2 ; nbBitRead = 5
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 2 ; nbBitRead = 6
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 2 ; nbBitRead = 7
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 2 ; nbBitRead = 8
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 2 ; nbBitRead = 9
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 2 ; nbBitRead = 10
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 2 ; nbBitRead = 11
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 2 ; nbBitRead = 12
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 2 ; nbBitRead = 13
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 2 ; nbBitRead = 14
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 2 ; nbBitRead = 15
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ]
				],
				[
					// MaxNumCoeff = 4 ; TotalCoeff = 3 ; nbBitRead = 0
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 3 ; nbBitRead = 1
					[  1,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 3 ; nbBitRead = 2
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 3 ; nbBitRead = 3
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 3 ; nbBitRead = 4
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 3 ; nbBitRead = 5
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 3 ; nbBitRead = 6
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 3 ; nbBitRead = 7
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 3 ; nbBitRead = 8
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 3 ; nbBitRead = 9
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 3 ; nbBitRead = 10
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 3 ; nbBitRead = 11
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 3 ; nbBitRead = 12
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 3 ; nbBitRead = 13
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 3 ; nbBitRead = 14
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 3 ; nbBitRead = 15
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ]
				],
				[
					// MaxNumCoeff = 4 ; TotalCoeff = 4 ; nbBitRead = 0
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 4 ; nbBitRead = 1
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 4 ; nbBitRead = 2
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 4 ; nbBitRead = 3
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 4 ; nbBitRead = 4
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 4 ; nbBitRead = 5
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 4 ; nbBitRead = 6
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 4 ; nbBitRead = 7
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 4 ; nbBitRead = 8
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 4 ; nbBitRead = 9
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 4 ; nbBitRead = 10
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 4 ; nbBitRead = 11
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 4 ; nbBitRead = 12
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 4 ; nbBitRead = 13
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 4 ; nbBitRead = 14
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 4 ; nbBitRead = 15
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ]
				],
				[
					// MaxNumCoeff = 4 ; TotalCoeff = 5 ; nbBitRead = 0
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 5 ; nbBitRead = 1
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 5 ; nbBitRead = 2
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 5 ; nbBitRead = 3
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 5 ; nbBitRead = 4
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 5 ; nbBitRead = 5
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 5 ; nbBitRead = 6
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 5 ; nbBitRead = 7
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 5 ; nbBitRead = 8
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 5 ; nbBitRead = 9
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 5 ; nbBitRead = 10
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 5 ; nbBitRead = 11
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 5 ; nbBitRead = 12
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 5 ; nbBitRead = 13
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 5 ; nbBitRead = 14
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 5 ; nbBitRead = 15
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ]
				],
				[
					// MaxNumCoeff = 4 ; TotalCoeff = 6 ; nbBitRead = 0
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 6 ; nbBitRead = 1
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 6 ; nbBitRead = 2
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 6 ; nbBitRead = 3
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 6 ; nbBitRead = 4
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 6 ; nbBitRead = 5
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 6 ; nbBitRead = 6
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 6 ; nbBitRead = 7
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 6 ; nbBitRead = 8
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 6 ; nbBitRead = 9
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 6 ; nbBitRead = 10
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 6 ; nbBitRead = 11
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 6 ; nbBitRead = 12
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 6 ; nbBitRead = 13
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 6 ; nbBitRead = 14
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 6 ; nbBitRead = 15
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ]
				],
				[
					// MaxNumCoeff = 4 ; TotalCoeff = 7 ; nbBitRead = 0
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 7 ; nbBitRead = 1
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 7 ; nbBitRead = 2
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 7 ; nbBitRead = 3
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 7 ; nbBitRead = 4
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 7 ; nbBitRead = 5
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 7 ; nbBitRead = 6
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 7 ; nbBitRead = 7
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 7 ; nbBitRead = 8
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 7 ; nbBitRead = 9
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 7 ; nbBitRead = 10
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 7 ; nbBitRead = 11
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 7 ; nbBitRead = 12
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 7 ; nbBitRead = 13
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 7 ; nbBitRead = 14
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 7 ; nbBitRead = 15
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ]
				],
				[
					// MaxNumCoeff = 4 ; TotalCoeff = 8 ; nbBitRead = 0
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 8 ; nbBitRead = 1
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 8 ; nbBitRead = 2
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 8 ; nbBitRead = 3
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 8 ; nbBitRead = 4
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 8 ; nbBitRead = 5
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 8 ; nbBitRead = 6
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 8 ; nbBitRead = 7
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 8 ; nbBitRead = 8
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 8 ; nbBitRead = 9
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 8 ; nbBitRead = 10
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 8 ; nbBitRead = 11
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 8 ; nbBitRead = 12
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 8 ; nbBitRead = 13
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 8 ; nbBitRead = 14
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 8 ; nbBitRead = 15
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ]
				],
				[
					// MaxNumCoeff = 4 ; TotalCoeff = 9 ; nbBitRead = 0
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 9 ; nbBitRead = 1
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 9 ; nbBitRead = 2
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 9 ; nbBitRead = 3
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 9 ; nbBitRead = 4
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 9 ; nbBitRead = 5
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 9 ; nbBitRead = 6
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 9 ; nbBitRead = 7
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 9 ; nbBitRead = 8
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 9 ; nbBitRead = 9
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 9 ; nbBitRead = 10
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 9 ; nbBitRead = 11
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 9 ; nbBitRead = 12
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 9 ; nbBitRead = 13
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 9 ; nbBitRead = 14
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 9 ; nbBitRead = 15
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ]
				],
				[
					// MaxNumCoeff = 4 ; TotalCoeff = 10 ; nbBitRead = 0
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 10 ; nbBitRead = 1
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 10 ; nbBitRead = 2
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 10 ; nbBitRead = 3
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 10 ; nbBitRead = 4
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 10 ; nbBitRead = 5
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 10 ; nbBitRead = 6
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 10 ; nbBitRead = 7
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 10 ; nbBitRead = 8
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 10 ; nbBitRead = 9
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 10 ; nbBitRead = 10
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 10 ; nbBitRead = 11
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 10 ; nbBitRead = 12
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 10 ; nbBitRead = 13
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 10 ; nbBitRead = 14
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 10 ; nbBitRead = 15
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ]
				],
				[
					// MaxNumCoeff = 4 ; TotalCoeff = 11 ; nbBitRead = 0
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 11 ; nbBitRead = 1
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 11 ; nbBitRead = 2
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 11 ; nbBitRead = 3
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 11 ; nbBitRead = 4
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 11 ; nbBitRead = 5
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 11 ; nbBitRead = 6
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 11 ; nbBitRead = 7
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 11 ; nbBitRead = 8
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 11 ; nbBitRead = 9
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 11 ; nbBitRead = 10
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 11 ; nbBitRead = 11
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 11 ; nbBitRead = 12
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 11 ; nbBitRead = 13
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 11 ; nbBitRead = 14
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 11 ; nbBitRead = 15
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ]
				],
				[
					// MaxNumCoeff = 4 ; TotalCoeff = 12 ; nbBitRead = 0
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 12 ; nbBitRead = 1
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 12 ; nbBitRead = 2
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 12 ; nbBitRead = 3
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 12 ; nbBitRead = 4
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 12 ; nbBitRead = 5
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 12 ; nbBitRead = 6
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 12 ; nbBitRead = 7
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 12 ; nbBitRead = 8
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 12 ; nbBitRead = 9
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 12 ; nbBitRead = 10
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 12 ; nbBitRead = 11
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 12 ; nbBitRead = 12
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 12 ; nbBitRead = 13
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 12 ; nbBitRead = 14
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 12 ; nbBitRead = 15
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ]
				],
				[
					// MaxNumCoeff = 4 ; TotalCoeff = 13 ; nbBitRead = 0
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 13 ; nbBitRead = 1
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 13 ; nbBitRead = 2
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 13 ; nbBitRead = 3
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 13 ; nbBitRead = 4
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 13 ; nbBitRead = 5
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 13 ; nbBitRead = 6
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 13 ; nbBitRead = 7
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 13 ; nbBitRead = 8
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 13 ; nbBitRead = 9
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 13 ; nbBitRead = 10
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 13 ; nbBitRead = 11
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 13 ; nbBitRead = 12
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 13 ; nbBitRead = 13
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 13 ; nbBitRead = 14
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 13 ; nbBitRead = 15
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ]
				],
				[
					// MaxNumCoeff = 4 ; TotalCoeff = 14 ; nbBitRead = 0
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 14 ; nbBitRead = 1
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 14 ; nbBitRead = 2
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 14 ; nbBitRead = 3
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 14 ; nbBitRead = 4
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 14 ; nbBitRead = 5
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 14 ; nbBitRead = 6
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 14 ; nbBitRead = 7
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 14 ; nbBitRead = 8
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 14 ; nbBitRead = 9
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 14 ; nbBitRead = 10
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 14 ; nbBitRead = 11
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 14 ; nbBitRead = 12
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 14 ; nbBitRead = 13
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 14 ; nbBitRead = 14
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 14 ; nbBitRead = 15
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ]
				],
				[
					// MaxNumCoeff = 4 ; TotalCoeff = 15 ; nbBitRead = 0
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 15 ; nbBitRead = 1
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 15 ; nbBitRead = 2
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 15 ; nbBitRead = 3
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 15 ; nbBitRead = 4
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 15 ; nbBitRead = 5
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 15 ; nbBitRead = 6
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 15 ; nbBitRead = 7
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 15 ; nbBitRead = 8
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 15 ; nbBitRead = 9
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 15 ; nbBitRead = 10
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 15 ; nbBitRead = 11
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 15 ; nbBitRead = 12
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 15 ; nbBitRead = 13
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 15 ; nbBitRead = 14
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 4 ; TotalCoeff = 15 ; nbBitRead = 15
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ]
				]
			],
			[
				[
					// MaxNumCoeff = 8 ; TotalCoeff = 0 ; nbBitRead = 0
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 0 ; nbBitRead = 1
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 0 ; nbBitRead = 2
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 0 ; nbBitRead = 3
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 0 ; nbBitRead = 4
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 0 ; nbBitRead = 5
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 0 ; nbBitRead = 6
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 0 ; nbBitRead = 7
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 0 ; nbBitRead = 8
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 0 ; nbBitRead = 9
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 0 ; nbBitRead = 10
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 0 ; nbBitRead = 11
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 0 ; nbBitRead = 12
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 0 ; nbBitRead = 13
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 0 ; nbBitRead = 14
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 0 ; nbBitRead = 15
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ]
				],
				[
					// MaxNumCoeff = 8 ; TotalCoeff = 1 ; nbBitRead = 0
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 1 ; nbBitRead = 1
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 1 ; nbBitRead = 2
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 1 ; nbBitRead = 3
					[  0,  0 ,  1 ,  2 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 1 ; nbBitRead = 4
					[  0,  5 ,  3 ,  4 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 1 ; nbBitRead = 5
					[  7,  6 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 1 ; nbBitRead = 6
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 1 ; nbBitRead = 7
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 1 ; nbBitRead = 8
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 1 ; nbBitRead = 9
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 1 ; nbBitRead = 10
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 1 ; nbBitRead = 11
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 1 ; nbBitRead = 12
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 1 ; nbBitRead = 13
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 1 ; nbBitRead = 14
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 1 ; nbBitRead = 15
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ]
				],
				[
					// MaxNumCoeff = 8 ; TotalCoeff = 2 ; nbBitRead = 0
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 2 ; nbBitRead = 1
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 2 ; nbBitRead = 2
					[  0,  1 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 2 ; nbBitRead = 3
					[  0,  2 ,  0 ,  0 ,  3 ,  4 ,  5 ,  6 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 2 ; nbBitRead = 4
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 2 ; nbBitRead = 5
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 2 ; nbBitRead = 6
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 2 ; nbBitRead = 7
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 2 ; nbBitRead = 8
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 2 ; nbBitRead = 9
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 2 ; nbBitRead = 10
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 2 ; nbBitRead = 11
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 2 ; nbBitRead = 12
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 2 ; nbBitRead = 13
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 2 ; nbBitRead = 14
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 2 ; nbBitRead = 15
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ]
				],
				[
					// MaxNumCoeff = 8 ; TotalCoeff = 3 ; nbBitRead = 0
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 3 ; nbBitRead = 1
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 3 ; nbBitRead = 2
					[  0,  2 ,  3 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 3 ; nbBitRead = 3
					[  0,  1 ,  0 ,  0 ,  0 ,  0 ,  4 ,  5 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 3 ; nbBitRead = 4
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 3 ; nbBitRead = 5
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 3 ; nbBitRead = 6
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 3 ; nbBitRead = 7
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 3 ; nbBitRead = 8
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 3 ; nbBitRead = 9
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 3 ; nbBitRead = 10
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 3 ; nbBitRead = 11
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 3 ; nbBitRead = 12
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 3 ; nbBitRead = 13
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 3 ; nbBitRead = 14
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 3 ; nbBitRead = 15
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ]
				],
				[
					// MaxNumCoeff = 8 ; TotalCoeff = 4 ; nbBitRead = 0
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 4 ; nbBitRead = 1
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 4 ; nbBitRead = 2
					[  1,  2 ,  3 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 4 ; nbBitRead = 3
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  4 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 4 ; nbBitRead = 4
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 4 ; nbBitRead = 5
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 4 ; nbBitRead = 6
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 4 ; nbBitRead = 7
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 4 ; nbBitRead = 8
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 4 ; nbBitRead = 9
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 4 ; nbBitRead = 10
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 4 ; nbBitRead = 11
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 4 ; nbBitRead = 12
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 4 ; nbBitRead = 13
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 4 ; nbBitRead = 14
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 4 ; nbBitRead = 15
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ]
				],
				[
					// MaxNumCoeff = 8 ; TotalCoeff = 5 ; nbBitRead = 0
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 5 ; nbBitRead = 1
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 5 ; nbBitRead = 2
					[  0,  1 ,  2 ,  3 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 5 ; nbBitRead = 3
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 5 ; nbBitRead = 4
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 5 ; nbBitRead = 5
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 5 ; nbBitRead = 6
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 5 ; nbBitRead = 7
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 5 ; nbBitRead = 8
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 5 ; nbBitRead = 9
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 5 ; nbBitRead = 10
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 5 ; nbBitRead = 11
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 5 ; nbBitRead = 12
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 5 ; nbBitRead = 13
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 5 ; nbBitRead = 14
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 5 ; nbBitRead = 15
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ]
				],
				[
					// MaxNumCoeff = 8 ; TotalCoeff = 6 ; nbBitRead = 0
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 6 ; nbBitRead = 1
					[  0,  2 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 6 ; nbBitRead = 2
					[  0,  1 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 6 ; nbBitRead = 3
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 6 ; nbBitRead = 4
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 6 ; nbBitRead = 5
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 6 ; nbBitRead = 6
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 6 ; nbBitRead = 7
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 6 ; nbBitRead = 8
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 6 ; nbBitRead = 9
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 6 ; nbBitRead = 10
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 6 ; nbBitRead = 11
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 6 ; nbBitRead = 12
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 6 ; nbBitRead = 13
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 6 ; nbBitRead = 14
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 6 ; nbBitRead = 15
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ]
				],
				[
					// MaxNumCoeff = 8 ; TotalCoeff = 7 ; nbBitRead = 0
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 7 ; nbBitRead = 1
					[  0,  1 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 7 ; nbBitRead = 2
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 7 ; nbBitRead = 3
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 7 ; nbBitRead = 4
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 7 ; nbBitRead = 5
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 7 ; nbBitRead = 6
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 7 ; nbBitRead = 7
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 7 ; nbBitRead = 8
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 7 ; nbBitRead = 9
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 7 ; nbBitRead = 10
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 7 ; nbBitRead = 11
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 7 ; nbBitRead = 12
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 7 ; nbBitRead = 13
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 7 ; nbBitRead = 14
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 7 ; nbBitRead = 15
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ]
				],
				[
					// MaxNumCoeff = 8 ; TotalCoeff = 8 ; nbBitRead = 0
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 8 ; nbBitRead = 1
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 8 ; nbBitRead = 2
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 8 ; nbBitRead = 3
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 8 ; nbBitRead = 4
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 8 ; nbBitRead = 5
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 8 ; nbBitRead = 6
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 8 ; nbBitRead = 7
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 8 ; nbBitRead = 8
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 8 ; nbBitRead = 9
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 8 ; nbBitRead = 10
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 8 ; nbBitRead = 11
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 8 ; nbBitRead = 12
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 8 ; nbBitRead = 13
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 8 ; nbBitRead = 14
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 8 ; nbBitRead = 15
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ]
				],
				[
					// MaxNumCoeff = 8 ; TotalCoeff = 9 ; nbBitRead = 0
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 9 ; nbBitRead = 1
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 9 ; nbBitRead = 2
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 9 ; nbBitRead = 3
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 9 ; nbBitRead = 4
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 9 ; nbBitRead = 5
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 9 ; nbBitRead = 6
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 9 ; nbBitRead = 7
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 9 ; nbBitRead = 8
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 9 ; nbBitRead = 9
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 9 ; nbBitRead = 10
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 9 ; nbBitRead = 11
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 9 ; nbBitRead = 12
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 9 ; nbBitRead = 13
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 9 ; nbBitRead = 14
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 9 ; nbBitRead = 15
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ]
				],
				[
					// MaxNumCoeff = 8 ; TotalCoeff = 10 ; nbBitRead = 0
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 10 ; nbBitRead = 1
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 10 ; nbBitRead = 2
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 10 ; nbBitRead = 3
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 10 ; nbBitRead = 4
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 10 ; nbBitRead = 5
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 10 ; nbBitRead = 6
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 10 ; nbBitRead = 7
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 10 ; nbBitRead = 8
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 10 ; nbBitRead = 9
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 10 ; nbBitRead = 10
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 10 ; nbBitRead = 11
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 10 ; nbBitRead = 12
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 10 ; nbBitRead = 13
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 10 ; nbBitRead = 14
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 10 ; nbBitRead = 15
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ]
				],
				[
					// MaxNumCoeff = 8 ; TotalCoeff = 11 ; nbBitRead = 0
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 11 ; nbBitRead = 1
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 11 ; nbBitRead = 2
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 11 ; nbBitRead = 3
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 11 ; nbBitRead = 4
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 11 ; nbBitRead = 5
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 11 ; nbBitRead = 6
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 11 ; nbBitRead = 7
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 11 ; nbBitRead = 8
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 11 ; nbBitRead = 9
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 11 ; nbBitRead = 10
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 11 ; nbBitRead = 11
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 11 ; nbBitRead = 12
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 11 ; nbBitRead = 13
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 11 ; nbBitRead = 14
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 11 ; nbBitRead = 15
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ]
				],
				[
					// MaxNumCoeff = 8 ; TotalCoeff = 12 ; nbBitRead = 0
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 12 ; nbBitRead = 1
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 12 ; nbBitRead = 2
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 12 ; nbBitRead = 3
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 12 ; nbBitRead = 4
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 12 ; nbBitRead = 5
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 12 ; nbBitRead = 6
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 12 ; nbBitRead = 7
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 12 ; nbBitRead = 8
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 12 ; nbBitRead = 9
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 12 ; nbBitRead = 10
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 12 ; nbBitRead = 11
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 12 ; nbBitRead = 12
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 12 ; nbBitRead = 13
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 12 ; nbBitRead = 14
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 12 ; nbBitRead = 15
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ]
				],
				[
					// MaxNumCoeff = 8 ; TotalCoeff = 13 ; nbBitRead = 0
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 13 ; nbBitRead = 1
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 13 ; nbBitRead = 2
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 13 ; nbBitRead = 3
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 13 ; nbBitRead = 4
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 13 ; nbBitRead = 5
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 13 ; nbBitRead = 6
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 13 ; nbBitRead = 7
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 13 ; nbBitRead = 8
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 13 ; nbBitRead = 9
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 13 ; nbBitRead = 10
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 13 ; nbBitRead = 11
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 13 ; nbBitRead = 12
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 13 ; nbBitRead = 13
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 13 ; nbBitRead = 14
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 13 ; nbBitRead = 15
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ]
				],
				[
					// MaxNumCoeff = 8 ; TotalCoeff = 14 ; nbBitRead = 0
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 14 ; nbBitRead = 1
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 14 ; nbBitRead = 2
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 14 ; nbBitRead = 3
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 14 ; nbBitRead = 4
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 14 ; nbBitRead = 5
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 14 ; nbBitRead = 6
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 14 ; nbBitRead = 7
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 14 ; nbBitRead = 8
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 14 ; nbBitRead = 9
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 14 ; nbBitRead = 10
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 14 ; nbBitRead = 11
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 14 ; nbBitRead = 12
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 14 ; nbBitRead = 13
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 14 ; nbBitRead = 14
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 14 ; nbBitRead = 15
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ]
				],
				[
					// MaxNumCoeff = 8 ; TotalCoeff = 15 ; nbBitRead = 0
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 15 ; nbBitRead = 1
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 15 ; nbBitRead = 2
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 15 ; nbBitRead = 3
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 15 ; nbBitRead = 4
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 15 ; nbBitRead = 5
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 15 ; nbBitRead = 6
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 15 ; nbBitRead = 7
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 15 ; nbBitRead = 8
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 15 ; nbBitRead = 9
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 15 ; nbBitRead = 10
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 15 ; nbBitRead = 11
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 15 ; nbBitRead = 12
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 15 ; nbBitRead = 13
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 15 ; nbBitRead = 14
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff = 8 ; TotalCoeff = 15 ; nbBitRead = 15
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ]
				]
			],
			[
				[
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 0 ; nbBitRead = 0
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 0 ; nbBitRead = 1
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 0 ; nbBitRead = 2
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 0 ; nbBitRead = 3
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 0 ; nbBitRead = 4
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 0 ; nbBitRead = 5
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 0 ; nbBitRead = 6
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 0 ; nbBitRead = 7
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 0 ; nbBitRead = 8
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 0 ; nbBitRead = 9
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 0 ; nbBitRead = 10
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 0 ; nbBitRead = 11
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 0 ; nbBitRead = 12
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 0 ; nbBitRead = 13
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 0 ; nbBitRead = 14
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 0 ; nbBitRead = 15
					[  0,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ]
				],
				[
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 1 ; nbBitRead = 0
					[  0, 0, 0, 0, 0, 0, 0, 0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 1 ; nbBitRead = 1
					[  0 ,  0 ,  0  ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 1 ; nbBitRead = 2
					[  0, 0, 0, 0, 0, 0, 0, 0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 1 ; nbBitRead = 3
					[  0 ,  0 ,  2  ,  1 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 1 ; nbBitRead = 4
					[  0 ,  0 ,  4  ,  3 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 1 ; nbBitRead = 5
					[  0 ,  0 ,  6  ,  5 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 1 ; nbBitRead = 6
					[  0 ,  0 ,  8  ,  7 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 1 ; nbBitRead = 7
					[  0 ,  0 , 10  ,  9 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 1 ; nbBitRead = 8
					[  0 ,  0 , 12  , 11 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 1 ; nbBitRead = 9
					[  0 , 15 , 14  , 13 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 1 ; nbBitRead = 10
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 1 ; nbBitRead = 11
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 1 ; nbBitRead = 12
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 1 ; nbBitRead = 13
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 1 ; nbBitRead = 14
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 1 ; nbBitRead = 15
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ]
				],
				[
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 2 ; nbBitRead = 0
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 2 ; nbBitRead = 1
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 2 ; nbBitRead = 2
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 2 ; nbBitRead = 3
					[  0 ,  0 ,  0  ,  4 ,  3 ,  2 ,  1 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 2 ; nbBitRead = 4
					[  0 ,  0 ,  8  ,  7 ,  6 ,  5 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 2 ; nbBitRead = 5
					[  0 ,  0 , 10  ,  9 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 2 ; nbBitRead = 6
					[ 14 , 13 , 12  , 11 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 2 ; nbBitRead = 7
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 2 ; nbBitRead = 8
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 2 ; nbBitRead = 9
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 2 ; nbBitRead = 10
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 2 ; nbBitRead = 11
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 2 ; nbBitRead = 12
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 2 ; nbBitRead = 13
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 2 ; nbBitRead = 14
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 2 ; nbBitRead = 15
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ]
				],
				[
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 3 ; nbBitRead = 0
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 3 ; nbBitRead = 1
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 3 ; nbBitRead = 2
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 3 ; nbBitRead = 3
					[  0 ,  0 ,  0  ,  7 ,  6 ,  3 ,  2 ,  1 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 3 ; nbBitRead = 4
					[  0 ,  0 ,  8  ,  5 ,  4 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 3 ; nbBitRead = 5
					[  0 , 12 , 10  ,  9 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 3 ; nbBitRead = 6
					[ 13 , 11 ,  0  ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 3 ; nbBitRead = 7
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 3 ; nbBitRead = 8
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 3 ; nbBitRead = 9
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 3 ; nbBitRead = 10
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 3 ; nbBitRead = 11
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 3 ; nbBitRead = 12
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 3 ; nbBitRead = 13
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 3 ; nbBitRead = 14
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 3 ; nbBitRead = 15
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ]
				],
				[
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 4 ; nbBitRead = 0
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 4 ; nbBitRead = 1
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 4 ; nbBitRead = 2
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 4 ; nbBitRead = 3
					[  0 ,  0 ,  0  ,  8 ,  6 ,  5 ,  4 ,  1 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 4 ; nbBitRead = 4
					[  0 ,  0 ,  9  ,  7 ,  3 ,  2 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 4 ; nbBitRead = 5
					[ 12 , 11 , 10  ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 4 ; nbBitRead = 6
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 4 ; nbBitRead = 7
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 4 ; nbBitRead = 8
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 4 ; nbBitRead = 9
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 4 ; nbBitRead = 10
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 4 ; nbBitRead = 11
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 4 ; nbBitRead = 12
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 4 ; nbBitRead = 13
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 4 ; nbBitRead = 14
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 4 ; nbBitRead = 15
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ]
				],
				[
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 5 ; nbBitRead = 0
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 5 ; nbBitRead = 1
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 5 ; nbBitRead = 2
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 5 ; nbBitRead = 3
					[  0 ,  0 ,  0  ,  7 ,  6 ,  5 ,  4 ,  3 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 5 ; nbBitRead = 4
					[  0 , 10 ,  8  ,  2 ,  1 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 5 ; nbBitRead = 5
					[ 11 ,  9 ,  0  ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 5 ; nbBitRead = 6
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 5 ; nbBitRead = 7
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 5 ; nbBitRead = 8
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 5 ; nbBitRead = 9
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 5 ; nbBitRead = 10
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 5 ; nbBitRead = 11
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 5 ; nbBitRead = 12
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 5 ; nbBitRead = 13
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 5 ; nbBitRead = 14
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 5 ; nbBitRead = 15
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ]
				],
				[
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 6 ; nbBitRead = 0
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 6 ; nbBitRead = 1
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 6 ; nbBitRead = 2
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 6 ; nbBitRead = 3
					[  0 ,  9 ,  7  ,  6 ,  5 ,  4 ,  3 ,  2 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 6 ; nbBitRead = 4
					[  0 ,  8 ,  0  ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 6 ; nbBitRead = 5
					[  0 ,  1 ,  0  ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 6 ; nbBitRead = 6
					[ 10 ,  0 ,  0  ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 6 ; nbBitRead = 7
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 6 ; nbBitRead = 8
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 6 ; nbBitRead = 9
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 6 ; nbBitRead = 10
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 6 ; nbBitRead = 11
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 6 ; nbBitRead = 12
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 6 ; nbBitRead = 13
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 6 ; nbBitRead = 14
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 6 ; nbBitRead = 15
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ]
				],
				[
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 7 ; nbBitRead = 0
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 7 ; nbBitRead = 1
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 7 ; nbBitRead = 2
					[  0 ,  0 ,  0  ,  5 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 7 ; nbBitRead = 3
					[  0 ,  8 ,  6  ,  4 ,  3 ,  2 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 7 ; nbBitRead = 4
					[  0 ,  7 ,  0  ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 7 ; nbBitRead = 5
					[  0 ,  1 ,  0  ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 7 ; nbBitRead = 6
					[  9 ,  0 ,  0  ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 7 ; nbBitRead = 7
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 7 ; nbBitRead = 8
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 7 ; nbBitRead = 9
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 7 ; nbBitRead = 10
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 7 ; nbBitRead = 11
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 7 ; nbBitRead = 12
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 7 ; nbBitRead = 13
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 7 ; nbBitRead = 14
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 7 ; nbBitRead = 15
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ]
				],
				[
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 8 ; nbBitRead = 0
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 8 ; nbBitRead = 1
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 8 ; nbBitRead = 2
					[  0 ,  0 ,  5  ,  4 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 8 ; nbBitRead = 3
					[  0 ,  7 ,  6  ,  3 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 8 ; nbBitRead = 4
					[  0 ,  1 ,  0  ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 8 ; nbBitRead = 5
					[  0 ,  2 ,  0  ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 8 ; nbBitRead = 6
					[  8 ,  0 ,  0  ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 8 ; nbBitRead = 7
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 8 ; nbBitRead = 8
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 8 ; nbBitRead = 9
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 8 ; nbBitRead = 10
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 8 ; nbBitRead = 11
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 8 ; nbBitRead = 12
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 8 ; nbBitRead = 13
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 8 ; nbBitRead = 14
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 8 ; nbBitRead = 15
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ]
				],
				[
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 9 ; nbBitRead = 0
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 9 ; nbBitRead = 1
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 9 ; nbBitRead = 2
					[  0 ,  6 ,  4  ,  3 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 9 ; nbBitRead = 3
					[  0 ,  5 ,  0  ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 9 ; nbBitRead = 4
					[  0 ,  2 ,  0  ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 9 ; nbBitRead = 5
					[  0 ,  7 ,  0  ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 9 ; nbBitRead = 6
					[  1 ,  0 ,  0  ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 9 ; nbBitRead = 7
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 9 ; nbBitRead = 8
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 9 ; nbBitRead = 9
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 9 ; nbBitRead = 10
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 9 ; nbBitRead = 11
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 9 ; nbBitRead = 12
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 9 ; nbBitRead = 13
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 9 ; nbBitRead = 14
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 9 ; nbBitRead = 15
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ]
				],
				[
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 10 ; nbBitRead = 0
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 10 ; nbBitRead = 1
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 10 ; nbBitRead = 2
					[  0 ,  5 ,  4  ,  3 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 10 ; nbBitRead = 3
					[  0 ,  2 ,  0  ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 10 ; nbBitRead = 4
					[  0 ,  6 ,  0  ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 10 ; nbBitRead = 5
					[  1,  0,  0  ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 10 ; nbBitRead = 6
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 10 ; nbBitRead = 7
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 10 ; nbBitRead = 8
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 10 ; nbBitRead = 9
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 10 ; nbBitRead = 10
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 10 ; nbBitRead = 11
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 10 ; nbBitRead = 12
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 10 ; nbBitRead = 13
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 10 ; nbBitRead = 14
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 10 ; nbBitRead = 15
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ]
				],
				[
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 11 ; nbBitRead = 0
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 11 ; nbBitRead = 1
					[  0 ,  4 ,  0  ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 11 ; nbBitRead = 2
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 11 ; nbBitRead = 3
					[  0 ,  2 ,  3  ,  5 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 11 ; nbBitRead = 4
					[  0 ,  1 ,  0  ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 11 ; nbBitRead = 5 .. 15
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ]
				],
				[
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 12 ; nbBitRead = 0
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 12 ; nbBitRead = 1
					[  0 ,  3 ,  0  ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 12 ; nbBitRead = 2
					[  0 ,  2 ,  0  ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 12 ; nbBitRead = 3
					[  0 ,  4 ,  0  ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 12 ; nbBitRead = 4
					[  0 ,  1 ,  0  ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 12 ; nbBitRead = 5 .. 15
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ]
				],
				[
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 13 ; nbBitRead = 0
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 13 ; nbBitRead = 1
					[  0 ,  2 ,  0  ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 13 ; nbBitRead = 2
					[  0 ,  3 ,  0  ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 13 ; nbBitRead = 3
					[  0 ,  1 ,  0  ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 13 ; nbBitRead = 4 .. 15
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ]
				],
				[
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 14 ; nbBitRead = 0
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 14 ; nbBitRead = 1
					[  0 ,  2 ,  0  ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 14 ; nbBitRead = 2
					[  0 ,  1 ,  0  ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 14 ; nbBitRead = 3 .. 15
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ]
				],
				[
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 15 ; nbBitRead = 0
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 15 ; nbBitRead = 1
					[  0 ,  1 ,  0  ,  0 ,  0 ,  0 ,  0 ,  0 ],
					// MaxNumCoeff != 4 and MaxNumCoeff != 8 ; TotalCoeff = 15 ; nbBitRead = 2 .. 15
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ],
					[  0 ,  0 ,  0 ,  0 ,   0 ,  0 ,  0 ,  0 ]
				]
			]
		];


	bool RunBeforeValid[7][16][8] =
		[
			[	//zerosLeft = 1 ; nbBitRead = 0 .. 15
				[ false , false , false , false , false , false , false , false ],
				[ true  , true  , false , false , false , false , false , false ],
				[ false , false , false , false , false , false , false , false ],
				[ false , false , false , false , false , false , false , false ],
				[ false , false , false , false , false , false , false , false ],
				[ false , false , false , false , false , false , false , false ],
				[ false , false , false , false , false , false , false , false ],
				[ false , false , false , false , false , false , false , false ],
				[ false , false , false , false , false , false , false , false ],
				[ false , false , false , false , false , false , false , false ],
				[ false , false , false , false , false , false , false , false ],
				[ false , false , false , false , false , false , false , false ],
				[ false , false , false , false , false , false , false , false ],
				[ false , false , false , false , false , false , false , false ],
				[ false , false , false , false , false , false , false , false ],
				[ false , false , false , false , false , false , false , false ]
			],
			[	//zerosLeft = 2 ; nbBitRead = 0 .. 15
				[ false , false , false , false , false , false , false , false ],
				[ false , true  , false , false , false , false , false , false ],
				[ true  , true  , false , false , false , false , false , false ],
				[ false , false , false , false , false , false , false , false ],
				[ false , false , false , false , false , false , false , false ],
				[ false , false , false , false , false , false , false , false ],
				[ false , false , false , false , false , false , false , false ],
				[ false , false , false , false , false , false , false , false ],
				[ false , false , false , false , false , false , false , false ],
				[ false , false , false , false , false , false , false , false ],
				[ false , false , false , false , false , false , false , false ],
				[ false , false , false , false , false , false , false , false ],
				[ false , false , false , false , false , false , false , false ],
				[ false , false , false , false , false , false , false , false ],
				[ false , false , false , false , false , false , false , false ],
				[ false , false , false , false , false , false , false , false ]
			],
			[	//zerosLeft = 3 ; nbBitRead = 0 .. 15
				[ false , false , false , false , false , false , false , false ],
				[ false , false , false , false , false , false , false , false ],
				[ true  , true  , true  , true  , false , false , false , false ],
				[ false , false , false , false , false , false , false , false ],
				[ false , false , false , false , false , false , false , false ],
				[ false , false , false , false , false , false , false , false ],
				[ false , false , false , false , false , false , false , false ],
				[ false , false , false , false , false , false , false , false ],
				[ false , false , false , false , false , false , false , false ],
				[ false , false , false , false , false , false , false , false ],
				[ false , false , false , false , false , false , false , false ],
				[ false , false , false , false , false , false , false , false ],
				[ false , false , false , false , false , false , false , false ],
				[ false , false , false , false , false , false , false , false ],
				[ false , false , false , false , false , false , false , false ],
				[ false , false , false , false , false , false , false , false ]
			],
			[	//zerosLeft = 4 ; nbBitRead = 0 .. 15
				[ false , false , false , false , false , false , false , false ],
				[ false , false , false , false , false , false , false , false ],
				[ false , true  , true  , true  , false , false , false , false ],
				[ true  , true  , false , false , false , false , false , false ],
				[ false , false , false , false , false , false , false , false ],
				[ false , false , false , false , false , false , false , false ],
				[ false , false , false , false , false , false , false , false ],
				[ false , false , false , false , false , false , false , false ],
				[ false , false , false , false , false , false , false , false ],
				[ false , false , false , false , false , false , false , false ],
				[ false , false , false , false , false , false , false , false ],
				[ false , false , false , false , false , false , false , false ],
				[ false , false , false , false , false , false , false , false ],
				[ false , false , false , false , false , false , false , false ],
				[ false , false , false , false , false , false , false , false ],
				[ false , false , false , false , false , false , false , false ]
			],
			[	//zerosLeft = 5 ; nbBitRead = 0 .. 15
				[ false , false , false , false , false , false , false , false ],
				[ false , false , false , false , false , false , false , false ],
				[ false , false , true  , true  , false , false , false , false ],
				[ true  , true  , true  , true  , false , false , false , false ],
				[ false , false , false , false , false , false , false , false ],
				[ false , false , false , false , false , false , false , false ],
				[ false , false , false , false , false , false , false , false ],
				[ false , false , false , false , false , false , false , false ],
				[ false , false , false , false , false , false , false , false ],
				[ false , false , false , false , false , false , false , false ],
				[ false , false , false , false , false , false , false , false ],
				[ false , false , false , false , false , false , false , false ],
				[ false , false , false , false , false , false , false , false ],
				[ false , false , false , false , false , false , false , false ],
				[ false , false , false , false , false , false , false , false ],
				[ false , false , false , false , false , false , false , false ]
			],
			[	//zerosLeft = 6 ; nbBitRead = 0 .. 15
				[ false , false , false , false , false , false , false , false ],
				[ false , false , false , false , false , false , false , false ],
				[ false , false , false , true  , false , false , false , false ],
				[ true  , true  , true  , true  , true  , true  , false , false ],
				[ false , false , false , false , false , false , false , false ],
				[ false , false , false , false , false , false , false , false ],
				[ false , false , false , false , false , false , false , false ],
				[ false , false , false , false , false , false , false , false ],
				[ false , false , false , false , false , false , false , false ],
				[ false , false , false , false , false , false , false , false ],
				[ false , false , false , false , false , false , false , false ],
				[ false , false , false , false , false , false , false , false ],
				[ false , false , false , false , false , false , false , false ],
				[ false , false , false , false , false , false , false , false ],
				[ false , false , false , false , false , false , false , false ],
				[ false , false , false , false , false , false , false , false ]
			],
			[	//zerosLeft > 6 ; nbBitRead = 0 .. 15
				[ false , false , false , false , false , false , false , false ],
				[ false , false , false , false , false , false , false , false ],
				[ false , false , false , false , false , false , false , false ],
				[ false , true  , true  , true  , true  , true  , true  , true  ],
				[ false , true  , false , false , false , false , false , false ],
				[ false , true  , false , false , false , false , false , false ],
				[ false , true  , false , false , false , false , false , false ],
				[ false , true  , false , false , false , false , false , false ],
				[ false , true  , false , false , false , false , false , false ],
				[ false , true  , false , false , false , false , false , false ],
				[ false , true  , false , false , false , false , false , false ],
				[ false , true  , false , false , false , false , false , false ],
				[ false , false , false , false , false , false , false , false ],
				[ false , false , false , false , false , false , false , false ],
				[ false , false , false , false , false , false , false , false ],
				[ false , false , false , false , false , false , false , false ]
			]
		];

	uint(size=4) RunBeforeValue[7][16][8] =
		[
			[	//zerosLeft = 1 ; nbBitRead = 0 .. 15
				[  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
				[  1 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
				[  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
				[  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
				[  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
				[  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
				[  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
				[  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
				[  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
				[  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
				[  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
				[  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
				[  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
				[  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
				[  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
				[  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ]
			],
			[	//zerosLeft = 2 ; nbBitRead = 0 .. 15
				[  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
				[  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
				[  2 ,  1 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
				[  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
				[  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
				[  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
				[  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
				[  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
				[  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
				[  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
				[  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
				[  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
				[  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
				[  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
				[  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
				[  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ]
			],
			[	//zerosLeft = 3 ; nbBitRead = 0 .. 15
				[  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
				[  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
				[  3 ,  2 ,  1 ,  0 ,  0 ,  0 ,  0 ,  0 ],
				[  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
				[  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
				[  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
				[  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
				[  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
				[  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
				[  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
				[  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
				[  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
				[  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
				[  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
				[  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
				[  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ]
			],
			[	//zerosLeft = 4 ; nbBitRead = 0 .. 15
				[  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
				[  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
				[  0 ,  2 ,  1 ,  0 ,  0 ,  0 ,  0 ,  0 ],
				[  4 ,  3 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
				[  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
				[  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
				[  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
				[  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
				[  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
				[  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
				[  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
				[  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
				[  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
				[  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
				[  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
				[  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ]
			],
			[	//zerosLeft = 5 ; nbBitRead = 0 .. 15
				[  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
				[  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
				[  0 ,  0 ,  1 ,  0 ,  0 ,  0 ,  0 ,  0 ],
				[  5 ,  4 ,  3 ,  2 ,  0 ,  0 ,  0 ,  0 ],
				[  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
				[  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
				[  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
				[  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
				[  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
				[  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
				[  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
				[  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
				[  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
				[  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
				[  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
				[  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ]
			],
			[	//zerosLeft = 6 ; nbBitRead = 0 .. 15
				[  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
				[  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
				[  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
				[  1 ,  2 ,  4 ,  3 ,  6 ,  5 ,  0 ,  0 ],
				[  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
				[  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
				[  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
				[  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
				[  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
				[  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
				[  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
				[  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
				[  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
				[  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
				[  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
				[  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ]
			],
			[	//zerosLeft > 6 ; nbBitRead = 0 .. 15
				[  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
				[  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
				[  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
				[  0 ,  6 ,  5 ,  4 ,  3 ,  2 ,  1 ,  0 ],
				[  0 ,  7 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
				[  0 ,  8 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
				[  0 ,  9 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
				[  0 , 10 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
				[  0 , 11 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
				[  0 , 12 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
				[  0 , 13 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
				[  0 , 14 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
				[  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
				[  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
				[  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ],
				[  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ]
			]
		];

end