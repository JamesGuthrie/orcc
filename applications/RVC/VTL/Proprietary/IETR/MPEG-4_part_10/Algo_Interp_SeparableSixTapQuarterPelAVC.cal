// Algo_Interp_SeparableSixTapQuarterPeAVC.cal
//
// Author: He-Yuan Lin
//
// Fractional luma sample interpolation for motion compensation of AVC

//Modified by Damien de Saint Jorre ; IETR/INSA of Rennes (France)

actor Algo_Interp_SeparableSixTapQuarterPelAVC ()
	int (size=16) Mv,
	int (size=16) RD,
	uint(size=6)  PartSZ
		==>
	int(size=16) INTERP
		:

  int(size=32) x ;
  int(size=32) y ;
  int(size=32) o_x ;
  int(size=32) o_y ;
  int(size=32) xFrac;
  int(size=32) yFrac;
  int width;
  int height;
  int temp;
  int temp2;
  List(type: List(type:int(size=16), size=21 ), size=21) TabPix;
  List( type:int(size=32), size=6 ) half_pel := [ 0 : for int i in 0 .. 5 ];

	function Clip1(int x)
				-->
			int
		:
			if(x > 255)then
				255
			else
				if(x < 0)then
					0
				else
					x
				end
			end
		end

	function SixTapFilter(int a1, int b1, int c1, int c2, int b2, int a2)
				-->
			int
		:
			a1 - (5 * b1) + (20 * c1) + (20 * c2) - (5 * b2) + a2
		end


	procedure compensate( )
		var
			int(size=32) n
		begin
			if xFrac = 0 and yFrac = 0 then 
				temp := TabPix [2 + o_x][2 + o_y];
			end    
 			if xFrac = 0  and yFrac = 2 then 
 				temp := SixTapFilter(TabPix[2 + o_x][o_y]     , TabPix[2 + o_x][1 + o_y] , TabPix[2 + o_x][2 + o_y] ,
				                     TabPix[2 + o_x][3 + o_y] , TabPix[2 + o_x][4 + o_y] , TabPix[2 + o_x][5 + o_y]);
				temp := rshift (temp + 16 ,5);
				temp := Clip1(temp);
			end
			if xFrac = 0  and yFrac = 1 then
				temp := SixTapFilter( TabPix[2 + o_x][o_y]     , TabPix[2 + o_x][1 + o_y] , TabPix[2 + o_x][2 + o_y] ,
				                      TabPix[2 + o_x][3 + o_y] , TabPix[2 + o_x][4 + o_y] , TabPix[2 + o_x][5 + o_y]);
				temp := rshift ( temp + 16, 5);
				temp := Clip1(temp);
				temp := temp + TabPix[2 + o_x][2 + o_y]+1;
				temp := rshift ( temp, 1);
				temp := Clip1(temp);
			end
			if xFrac = 0  and yFrac = 3 then
				temp := SixTapFilter( TabPix[2 + o_x][o_y]     , TabPix[2 + o_x][1 + o_y] , TabPix[2 + o_x][2 + o_y],
				                      TabPix[2 + o_x][3 + o_y] , TabPix[2 + o_x][4 + o_y] , TabPix[2 + o_x][5 + o_y] );
				temp := rshift ( temp + 16, 5);
				temp := Clip1(temp);
				temp := temp + TabPix[2 + o_x][3 + o_y]+1;
				temp := rshift ( temp, 1);
				temp := Clip1(temp);
			end  

			if xFrac = 2  and yFrac = 0 then
				temp := SixTapFilter( TabPix[o_x][2 + o_y]     , TabPix[1 + o_x][2 + o_y] , TabPix[2 + o_x][2 + o_y],
				                      TabPix[3 + o_x][2 + o_y] , TabPix[4 + o_x][2 + o_y] , TabPix[5 + o_x][2 + o_y]);
				temp := rshift ( temp + 16, 5);
				temp := Clip1(temp);
			end
			if xFrac = 2  and yFrac = 2 then 
				foreach int n in 0 .. 5
				do
					half_pel[n] := SixTapFilter( TabPix[o_x][n + o_y]     , TabPix[1 + o_x][n + o_y] , TabPix[2 + o_x][n + o_y],
					                             TabPix[3 + o_x][n + o_y] , TabPix[4 + o_x][n + o_y] , TabPix[5 + o_x][n + o_y]);
				end
				temp := SixTapFilter(half_pel[0] , half_pel[1] , half_pel[2] , half_pel[3] , half_pel[4] , half_pel[5]);
				temp := rshift ( temp + 512, 10);
				temp := Clip1(temp);
			end
			if xFrac = 2  and yFrac = 1 then 
				foreach int n in 0 .. 5
				do
					half_pel[n] := SixTapFilter( TabPix[o_x][n + o_y]     , TabPix[1 + o_x][n + o_y] , TabPix[2 + o_x][n + o_y] ,
					                             TabPix[3 + o_x][n + o_y] , TabPix[4 + o_x][n + o_y] , TabPix[5 + o_x][n + o_y]);
				end
				temp  := SixTapFilter( half_pel[0] , half_pel[1] , half_pel[2] , half_pel[3] , half_pel[4] , half_pel[5]);
				temp  := rshift ( temp + 512 , 10);
				temp  := Clip1(temp);
				temp2 := SixTapFilter( TabPix[o_x][2 + o_y]     , TabPix[1 + o_x][2 + o_y] , TabPix[2 + o_x][2 + o_y],
				                       TabPix[3 + o_x][2 + o_y] , TabPix[4 + o_x][2 + o_y] , TabPix[5 + o_x][2 + o_y]);
				temp2 := rshift ( temp2 + 16, 5);        
				temp2 := Clip1(temp2);
				temp  := temp+temp2+1;
				temp  := rshift ( temp, 1);
				temp  := Clip1(temp);   
			end
			if xFrac = 2  and yFrac = 3 then 
				foreach int n in 0 .. 5
				do
					half_pel[n] := SixTapFilter( TabPix[o_x][n + o_y]     , TabPix[1 + o_x][n + o_y] , TabPix[2 + o_x][n + o_y],
					                             TabPix[3 + o_x][n + o_y] , TabPix[4 + o_x][n + o_y] , TabPix[5 + o_x][n + o_y]);
				end
				temp  := SixTapFilter( half_pel[0] , half_pel[1] , half_pel[2] , half_pel[3] , half_pel[4] , half_pel[5]);
				temp  := rshift ( temp + 512, 10);
				temp  := Clip1(temp);
				temp2 := SixTapFilter( TabPix[o_x][3 + o_y]     , TabPix[1 + o_x][3 + o_y] , TabPix[2 + o_x][3 + o_y] ,
				                       TabPix[3 + o_x][3 + o_y] , TabPix[4 + o_x][3 + o_y] , TabPix[5 + o_x][3 + o_y]);
				temp2 := rshift ( temp2 + 16, 5);        
				temp2 := Clip1(temp2);
				temp  := temp+temp2+1;
				temp  := rshift ( temp, 1);
				temp  := Clip1(temp);
			end
			if xFrac = 1  and yFrac = 0 then
				temp := SixTapFilter( TabPix[o_x][2 + o_y]     , TabPix[1 + o_x][2 + o_y] , TabPix[2 + o_x][2 + o_y],
				                      TabPix[3 + o_x][2 + o_y] , TabPix[4 + o_x][2 + o_y] , TabPix[5 + o_x][2 + o_y]);
				temp := rshift ( temp + 16, 5);
				temp := Clip1(temp);
				temp := temp + TabPix[2 + o_x][2 + o_y] +1;
				temp := rshift ( temp, 1);
				temp := Clip1(temp);
			end  
			if xFrac = 1  and yFrac = 2 then
				foreach int n in 0 .. 5
				do
					half_pel[n] := SixTapFilter( TabPix[o_x][n + o_y]     , TabPix[1 + o_x][n + o_y] , TabPix[2 + o_x][n + o_y],
					                             TabPix[3 + o_x][n + o_y] , TabPix[4 + o_x][n + o_y] , TabPix[5 + o_x][n + o_y]);
				end
				temp  := SixTapFilter( half_pel[0] , half_pel[1] , half_pel[2] , half_pel[3] , half_pel[4] , half_pel[5]);
				temp  := rshift (temp + 512, 10);
				temp  := Clip1(temp);
				temp2 := SixTapFilter( TabPix[2 + o_x][o_y]     , TabPix[2 + o_x][1 + o_y] , TabPix[2 + o_x][2 + o_y],
				                       TabPix[2 + o_x][3 + o_y] , TabPix[2 + o_x][4 + o_y] , TabPix[2 + o_x][5 + o_y]);
				temp2 := rshift (temp2 + 16, 5);
				temp2 := Clip1(temp2);
				temp  := temp+temp2+1;
				temp  := rshift ( temp, 1);
				temp  := Clip1(temp);
			end
			if xFrac = 1  and yFrac = 1 then
				temp  := SixTapFilter( TabPix[o_x][2 + o_y]     , TabPix[1 + o_x][2 + o_y] , TabPix[2 + o_x][2 + o_y],
				                      TabPix[3 + o_x][2 + o_y] , TabPix[4 + o_x][2 + o_y] , TabPix[5 + o_x][2 + o_y]);
				temp  := rshift ( temp + 16, 5);
				temp  := Clip1(temp);
				temp2 := SixTapFilter( TabPix[2 + o_x][o_y]     , TabPix[2 + o_x][1 + o_y] , TabPix[2 + o_x][2 + o_y],
				                       TabPix[2 + o_x][3 + o_y] , TabPix[2 + o_x][4 + o_y] , TabPix[2 + o_x][5 + o_y]);
				temp2 := rshift (temp2 + 16, 5);        
				temp2 := Clip1(temp2);
				temp  := temp+temp2+1;
				temp  := rshift ( temp, 1);
				temp  := Clip1(temp);    
			end
			if xFrac = 1  and yFrac = 3 then
				temp := SixTapFilter( TabPix[o_x][3 + o_y]     , TabPix[1 + o_x][3 + o_y] , TabPix[2 + o_x][3 + o_y],
				                      TabPix[3 + o_x][3 + o_y] , TabPix[4 + o_x][3 + o_y] , TabPix[5 + o_x][3 + o_y]);
				temp  := rshift ( temp + 16, 5);
				temp  := Clip1(temp);
				temp2 := SixTapFilter( TabPix[2 + o_x][o_y]     , TabPix[2 + o_x][1 + o_y] , TabPix[2 + o_x][2 + o_y],
				                       TabPix[2 + o_x][3 + o_y] , TabPix[2 + o_x][4 + o_y] , TabPix[2 + o_x][5 + o_y]);
				temp2 := rshift (temp2 + 16, 5);        
				temp2 := Clip1(temp2);
				temp  := temp+temp2+1;
				temp  := rshift ( temp, 1);  
				temp  := Clip1(temp);
			end
			if xFrac = 3  and yFrac = 0 then
				temp := SixTapFilter( TabPix[o_x][2 + o_y]     , TabPix[1 + o_x][2 + o_y] , TabPix[2 + o_x][2 + o_y] ,
				                      TabPix[3 + o_x][2 + o_y] , TabPix[4 + o_x][2 + o_y] , TabPix[5 + o_x][2 + o_y]);
				temp := rshift ( temp + 16, 5);
				temp := Clip1(temp);
				temp := temp + TabPix[3 + o_x][2 + o_y] + 1;
				temp := rshift ( temp, 1);
				temp := Clip1(temp);
			end  
			if xFrac = 3  and yFrac = 2 then
				foreach int n in 0 .. 5
				do
					half_pel[n] := SixTapFilter( TabPix[o_x][n + o_y]     , TabPix[1 + o_x][n + o_y] , TabPix[2 + o_x][n + o_y],
					                             TabPix[3 + o_x][n + o_y] , TabPix[4 + o_x][n + o_y] , TabPix[5 + o_x][n + o_y]);
				end
				temp  := SixTapFilter( half_pel[0] , half_pel[1] , half_pel[2] , half_pel[3] , half_pel[4] , half_pel[5]);
				temp  := rshift (temp+512, 10);
				temp  := Clip1(temp);
				temp2 := SixTapFilter( TabPix[3 + o_x][o_y]     , TabPix[3 + o_x][1 + o_y] , TabPix[3 + o_x][2 + o_y] ,
				                       TabPix[3 + o_x][3 + o_y] , TabPix[3 + o_x][4 + o_y] , TabPix[3 + o_x][5 + o_y]);
				temp2 := rshift (temp2 + 16, 5);
				temp2 := Clip1(temp2);
				temp  := temp+temp2+1;
				temp  := rshift ( temp, 1);
				temp  := Clip1(temp);
			end
			if xFrac = 3  and yFrac = 1 then
				temp := SixTapFilter( TabPix[o_x][2 + o_y]     , TabPix[1 + o_x][2 + o_y] , TabPix[2 + o_x][2 + o_y],
				                      TabPix[3 + o_x][2 + o_y] , TabPix[4 + o_x][2 + o_y] , TabPix[5 + o_x][2 + o_y]);
				temp  := rshift ( temp+16, 5);
				temp  := Clip1(temp);
				temp2 := SixTapFilter( TabPix[3 + o_x][o_y]     , TabPix[3 + o_x][1 + o_y] , TabPix[3 + o_x][2 + o_y],
				                       TabPix[3 + o_x][3 + o_y] , TabPix[3 + o_x][4 + o_y] , TabPix[3 + o_x][5 + o_y]);
				temp2 := rshift (temp2 + 16, 5);        
				temp2 := Clip1(temp2);
				temp  := temp+temp2+1;
				temp  := rshift ( temp, 1);      
				temp  := Clip1(temp);
			end
			if xFrac = 3  and yFrac = 3 then
				temp  := SixTapFilter( TabPix[o_x][3 + o_y]     , TabPix[1 + o_x][3 + o_y] , TabPix[2 + o_x][3 + o_y],
				                      TabPix[3 + o_x][3 + o_y] , TabPix[4 + o_x][3 + o_y] , TabPix[5 + o_x][3 + o_y]);
				temp  := rshift ( temp + 16, 5);
				temp  := Clip1(temp);
				temp2 := SixTapFilter( TabPix[3 + o_x][o_y]     , TabPix[3 + o_x][1 + o_y] , TabPix[3 + o_x][2 + o_y] ,
				                       TabPix[3 + o_x][3 + o_y] , TabPix[3 + o_x][4 + o_y] , TabPix[3 + o_x][5 + o_y]);
				temp2 := rshift (temp2+16, 5);
				temp2 := Clip1(temp2);
				temp  := temp+temp2+1;
				temp  := rshift ( temp, 1);
				temp  := Clip1(temp);
			end
		end

	GetMv: action Mv:[ Mv_x , Mv_y ] ==>
	do
		x := 0;
		y := 0;
		o_x := 0;
		o_y := 0;
		xFrac := Mv_x & 3;
		yFrac := Mv_y & 3;
	end

	GetSize: action PartSZ:[ PartWidth, PartHeight ] ==>
	do
		width  := PartWidth;
		height := PartHeight;
	end

  // fetch (width+5)x(height+5) pixels

	GetPixVal.Launch: action
			RD:[d]
				==>
		guard
			y < (height+5)
		do
			TabPix[x][y] := d;
			x := x + 1;
			if x >= (width+5) then
				x := 0;
				y := y + 1;
			end
		end

	GetPixVal.Done: action ==>
		guard
			y >= height +5
		end

	Interpolate.Launch: action ==> INTERP:[ p ]
		guard
			o_y < height
		var 
			int p
		do
			compensate();
			p := temp;
			o_x := o_x + 1;
			if o_x >= width then
				o_x := 0;
				o_y := o_y + 1;
			end
		end

	Interpolate.Done: action ==>
		guard
			o_y = height
		end

  schedule fsm GetMv:
    GetMv       (GetMv              )--> GetSize;

    GetSize     (GetSize            )--> GetValue;

	GetValue    (GetPixVal.Launch   )--> GetValue;
	GetValue    (GetPixVal.Done     )--> Interpolate;

    Interpolate (Interpolate.Launch )--> Interpolate;
    Interpolate (Interpolate.Done   )--> GetMv;
  end
end
