/********************************************************************************

This software module was originally developed by Florian Decologne IETR/INSA of Rennes (France), in the course of development of the <standard> for reference purposes and its performance may not have been optimized. This software module is an implementation of one or more tools as specified by the MPEG-C part 4.
ISO/IEC gives You a royalty-free, worldwide, non-exclusive, copyright license to copy, distribute, and make derivative works of this software module or modifications thereof for use in implementations of the <standard>  in products that satisfy conformance criteria (if any).
Those intending to use this software module in products are advised that its use may infringe existing patents. ISO/IEC have no liability for use of this software module or modifications thereof.
Copyright is not released for products that do not conform to audiovisual and image-coding related ITU Recommendations and/or ISO/IEC International Standards.
Assurance that the originally developed software module can be used (1) in the <standard> once the <standard> has been adopted; and (2) to develop the MPEG-C part 4:

IETR/INSA of Rennes (France) grants ISO/IEC all rights necessary to include the originally developed software module or modifications thereof in the <standard> and to permit ISO/IEC to offer You a royalty-free, worldwide, non-exclusive, copyright license to copy, distribute, and make derivative works for use in implementations of the MPEG-C part 4 in products that satisfy conformance criteria (if any), and to the extent that such originally developed software module or portions of it are included in the MPEG-C part 4.  To the extent that IETR/INSA of Rennes (France) owns patent rights that would be required to make, use, or sell the originally developed software module or portions thereof included in the MPEG-C part 4 in a conforming product,  IETR/INSA of Rennes (France) will assure the ISO/IEC that it is willing to negotiate licenses under reasonable and non-discriminatory terms and conditions with applicants throughout the world.

ISO/IEC gives You a free license to this software module or modifications thereof for the sole  purpose of developing the MPEG-C part 4

IETR/INSA of Rennes (France) retains full right to modify and use the code for its own purpose, assign or donate the code to a third party and to inhibit third parties from using the code for products that do not conform to MPEG-related ITU Recommendations and/or ISO/IEC International Standards.
This copyright notice must be included in all copies or derivative works. Copyright (c) ISO/IEC 2008.

*****************************************************************************/
//Modified by Damien de Saint Jorre IETR/INSA of Rennes (France)
import VTL.Proprietary.IETR.MPEG_4_part_10.Common.Imp_MacroBlockInfo.*;

actor Select () 
	int (size=16) X0,
	int (size=9)  X1,
	int (size=9)  X2,
	int (size=9)  X3,
	uint(size=6)  Mb_Type
		==>
	int (size=9)  X
		:


  
  	bool DEBUG_INPUT = false;
  
  
	GetIntra4x4:action
		Mb_Type :[MbType],
		X0      :[x] repeat 16*16
			==>
		X          :[x] repeat 256
	guard
    	MbType = BLOCK_TYPE_I_NxN
    do
		if(DEBUG_INPUT)then
			foreach int i in 0 .. 16*16 - 1
			do
				println("Input Select X0:"+x[i]);
			end
		end
	end
  
	GetIntra16x16:action 
		Mb_Type :[MbType],
		X1      :[x] repeat 16*16
			==>
		X :[x] repeat 16*16 
	guard
    	MbType >= BLOCK_TYPE_INTRA_16x16_MIN,
    	MbType <= BLOCK_TYPE_INTRA_16x16_MAX
    do
		if(DEBUG_INPUT)then
			foreach int i in 0 .. 16*16 - 1
			do
				println("Input Select X1:"+x[i]);
			end
		end
	end
  
	GetInter:action
		Mb_Type :[MbType],
		X2      :[x] repeat 16*16
			==>
		X :[x] repeat 16*16
	guard
    	MbType > BLOCK_TYPE_INTRA_MAX
    do
		if(DEBUG_INPUT)then
			foreach int i in 0 .. 16*16 - 1
			do
				println("Input Select X2:"+x[i]);
			end
		end
	end
	
	GetPCM: action
		Mb_Type :[MbType],
		X3      :[x] repeat 16*16
			==>
		X:[x] repeat 16*16
	guard
    	MbType = BLOCK_TYPE_I_PCM
    do
		if(DEBUG_INPUT)then
			foreach int i in 0 .. 16*16 - 1
			do
				println("Input Select X3:"+x[i]);
			end
		end
	end
	
end
