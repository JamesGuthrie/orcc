/**
 * Copyright (c) 2009, IETR/INSA of Rennes
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 * 
 *   * Redistributions of source code must retain the above copyright notice,
 *     this list of conditions and the following disclaimer.
 *   * Redistributions in binary form must reproduce the above copyright notice,
 *     this list of conditions and the following disclaimer in the documentation
 *     and/or other materials provided with the distribution.
 *   * Neither the name of the IETR/INSA of Rennes nor the names of its
 *     contributors may be used to endorse or promote products derived from this
 *     software without specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
 * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
 * WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */
 
// Author: Pierre-Laurent Lagalaye

/******************************************************************************
 * HeadersParser_UT : Unitary test of sequence and picture headers parser     *
 ******************************************************************************/
actor HeadersParser_UT() uint(size=12) Width, uint(size=12) Height, 
uint(size=1) HasIntraQuant, uint(size=1) HasNonIntraQuant, uint(size=8) NonIntraQuantCoeff ==> 
String Check :
	
	// Check the main information from smiley.m2v is OK
	List(type:String, size=4) check;
	test_result: action Width:[width], Height:[height], HasIntraQuant:[has_intra_quant],
	HasNonIntraQuant:[has_non_intra_quant],	NonIntraQuantCoeff:[non_intra_quant_matrix] repeat 64 ==>
	Check:[check] repeat 4
	do
		if width = 80 then
			check[0]:="Test OK";
		else
			check[0]:="Test ERROR";
		end
		
		if height = 64 then
			check[1]:="Test OK";
		else
			check[1]:="Test ERROR";
		end
		
		if has_intra_quant = 0 then
			check[2]:="Test OK";
		else
			check[2]:="Test ERROR";
		end
		
		if has_non_intra_quant = 1 then
			check[3]:="Test OK";
		else
			check[3]:="Test ERROR";
		end
	end
end

//actor HeadersParser_UT() uint(size=32) Symbol ==> String Check :
//	
//	// Expected output results from bitstream reader :
//	List(type:uint(size=32), size=34) expected := 
//		[0x000001B3, 	// sequence header SC
//		80, 			// horizontal_size_value 
//		64,				// vertical_size_value
//		1,              // aspect_ratio_information (1.000000)
//		4,				// frame_rate_code (29.970000)
//		2750,			// bit_rate_value (1100000)
//		1,				// marker_bit
//		24,				// vbv_buffer_size
//		0,				// constrained_parameters_flag
//		0,				// load_intra_quantiser_matrix
//		1,				// load_non_intra_quantiser_matrix
//		0x000001B5, 	// Extension Start Code
//		1, 				// Sequence Extension ID
//		72,				// profile_and_level_indication (Main@Main)
//		1,				// progressive_sequence
//		1,				// chroma_format (4:2:0)
//		0,				// horizontal_size_extension
//		0,				// vertical_size_extension
//		0,				// bit_rate_extension
//		1,				// marker_bit
//		0,				// vbv_buffer_size_extension
//		0,				// low_delay
//		0,				// frame_rate_extension_n
//		0,				// frame_rate_extension_d
//		0x000001B5, 	// Extension Start Code
//		2,				// Sequence Display Extention ID
//		2,				// video_format
//		1,				// colour_description
//		5,				// colour_primaries
//		5,				// transfer_characteristics
//		5,				// matrix_coefficients
//		80,				// display_horizontal_size
//		1,				// marker_bit
//		64				// display_vertical_size		
//		];

//		0x00000062 User Data {}
//		0x00000087 Group of Picture Header #0
//		time = 0:0:0:0 
//closed_gop = 1
//broken_link = 0
//
//0x0000008F Picture Header - I Frame #0
//temporal_reference = 0
//picture_coding_type = 1
//vbv_delay = 65535
//
//0x00000097 Picture Coding Extention
//f_code[0][0] = 15
//f_code[0][1] = 15
//f_code[1][0] = 15
//f_code[1][1] = 15
//intra_dc_precision = 0
//picture_structure = 3 (Frame picture)
//top_field_first = 1
//frame_pred_frame_dct = 1
//concealment_motion_vectors = 0
//q_scale_type = 1
//intra_vlc_format = 1
//alternate_scan = 0
//repeat_first_field = 0
//chroma_420_type = 1
//progressive_frame = 1
//composite_display_flag = 0
//
//0x00000403 Picture Header - P Frame #1
//temporal_reference = 3
//picture_coding_type = 2
//vbv_delay = 65535
//full_pel_forward_vector = 0
//forward_f_code = 7
//
//0x0000040C Picture Coding Extention
//f_code[0][0] = 1
//f_code[0][1] = 1
//f_code[1][0] = 1
//f_code[1][1] = 1
//intra_dc_precision = 0
//picture_structure = 3 (Frame picture)
//top_field_first = 1
//frame_pred_frame_dct = 1
//concealment_motion_vectors = 0
//q_scale_type = 1
//intra_vlc_format = 1
//alternate_scan = 0
//repeat_first_field = 0
//chroma_420_type = 1
//progressive_frame = 1
//composite_display_flag = 0
//
//0x000012D4 Picture Header - B Frame #2
//temporal_reference = 1
//picture_coding_type = 3
//vbv_delay = 65535
//full_pel_forward_vector = 0
//forward_f_code = 7
//full_pel_backward_vector = 0
//backward_f_code = 7
//
//0x000012DD Picture Coding Extention
//f_code[0][0] = 1
//f_code[0][1] = 1
//f_code[1][0] = 1
//f_code[1][1] = 1
//intra_dc_precision = 0
//picture_structure = 3 (Frame picture)
//top_field_first = 1
//frame_pred_frame_dct = 1
//concealment_motion_vectors = 0
//q_scale_type = 1
//intra_vlc_format = 1
//alternate_scan = 0
//repeat_first_field = 0
//chroma_420_type = 1
//progressive_frame = 1
//composite_display_flag = 0
//
//0x00001A8F Picture Header - B Frame #3
//temporal_reference = 2
//picture_coding_type = 3
//vbv_delay = 65535
//full_pel_forward_vector = 0
//forward_f_code = 7
//full_pel_backward_vector = 0
//backward_f_code = 7
//
//0x00001A98 Picture Coding Extention
//f_code[0][0] = 1
//f_code[0][1] = 1
//f_code[1][0] = 1
//f_code[1][1] = 1
//intra_dc_precision = 0
//picture_structure = 3 (Frame picture)
//top_field_first = 1
//frame_pred_frame_dct = 1
//concealment_motion_vectors = 0
//q_scale_type = 1
//intra_vlc_format = 1
//alternate_scan = 0
//repeat_first_field = 0
//chroma_420_type = 1
//progressive_frame = 1
//composite_display_flag = 0
//
//0x000023E5 Picture Header - P Frame #4
//temporal_reference = 6
//picture_coding_type = 2
//vbv_delay = 65535
//full_pel_forward_vector = 0
//forward_f_code = 7
//
//0x000023EE Picture Coding Extention
//f_code[0][0] = 1
//f_code[0][1] = 1
//f_code[1][0] = 1
//f_code[1][1] = 1
//intra_dc_precision = 0
//picture_structure = 3 (Frame picture)
//top_field_first = 1
//frame_pred_frame_dct = 1
//concealment_motion_vectors = 0
//q_scale_type = 1
//intra_vlc_format = 1
//alternate_scan = 0
//repeat_first_field = 0
//chroma_420_type = 1
//progressive_frame = 1
//composite_display_flag = 0
//
//0x000028CA Picture Header - B Frame #5
//temporal_reference = 4
//picture_coding_type = 3
//vbv_delay = 65535
//full_pel_forward_vector = 0
//forward_f_code = 7
//full_pel_backward_vector = 0
//backward_f_code = 7
//
//0x000028D3 Picture Coding Extention
//f_code[0][0] = 1
//f_code[0][1] = 1
//f_code[1][0] = 1
//f_code[1][1] = 1
//intra_dc_precision = 0
//picture_structure = 3 (Frame picture)
//top_field_first = 1
//frame_pred_frame_dct = 1
//concealment_motion_vectors = 0
//q_scale_type = 1
//intra_vlc_format = 1
//alternate_scan = 0
//repeat_first_field = 0
//chroma_420_type = 1
//progressive_frame = 1
//composite_display_flag = 0
//
//0x00002CB0 Picture Header - B Frame #6
//temporal_reference = 5
//picture_coding_type = 3
//vbv_delay = 65535
//full_pel_forward_vector = 0
//forward_f_code = 7
//full_pel_backward_vector = 0
//backward_f_code = 7
//
//0x00002CB9 Picture Coding Extention
//f_code[0][0] = 1
//f_code[0][1] = 1
//f_code[1][0] = 1
//f_code[1][1] = 1
//intra_dc_precision = 0
//picture_structure = 3 (Frame picture)
//top_field_first = 1
//frame_pred_frame_dct = 1
//concealment_motion_vectors = 0
//q_scale_type = 1
//intra_vlc_format = 1
//alternate_scan = 0
//repeat_first_field = 0
//chroma_420_type = 1
//progressive_frame = 1
//composite_display_flag = 0
//
//0x00003084 Picture Header - P Frame #7
//temporal_reference = 9
//picture_coding_type = 2
//vbv_delay = 65535
//full_pel_forward_vector = 0
//forward_f_code = 7
//
//0x0000308D Picture Coding Extention
//f_code[0][0] = 1
//f_code[0][1] = 1
//f_code[1][0] = 1
//f_code[1][1] = 1
//intra_dc_precision = 0
//picture_structure = 3 (Frame picture)
//top_field_first = 1
//frame_pred_frame_dct = 1
//concealment_motion_vectors = 0
//q_scale_type = 1
//intra_vlc_format = 1
//alternate_scan = 0
//repeat_first_field = 0
//chroma_420_type = 1
//progressive_frame = 1
//composite_display_flag = 0
//
//0x000034A2 Picture Header - B Frame #8
//temporal_reference = 7
//picture_coding_type = 3
//vbv_delay = 65535
//full_pel_forward_vector = 0
//forward_f_code = 7
//full_pel_backward_vector = 0
//backward_f_code = 7
//
//0x000034AB Picture Coding Extention
//f_code[0][0] = 1
//f_code[0][1] = 1
//f_code[1][0] = 1
//f_code[1][1] = 1
//intra_dc_precision = 0
//picture_structure = 3 (Frame picture)
//top_field_first = 1
//frame_pred_frame_dct = 1
//concealment_motion_vectors = 0
//q_scale_type = 1
//intra_vlc_format = 1
//alternate_scan = 0
//repeat_first_field = 0
//chroma_420_type = 1
//progressive_frame = 1
//composite_display_flag = 0
//
//0x00003861 Picture Header - B Frame #9
//temporal_reference = 8
//picture_coding_type = 3
//vbv_delay = 65535
//full_pel_forward_vector = 0
//forward_f_code = 7
//full_pel_backward_vector = 0
//backward_f_code = 7
//
//0x0000386A Picture Coding Extention
//f_code[0][0] = 1
//f_code[0][1] = 1
//f_code[1][0] = 1
//f_code[1][1] = 1
//intra_dc_precision = 0
//picture_structure = 3 (Frame picture)
//top_field_first = 1
//frame_pred_frame_dct = 1
//concealment_motion_vectors = 0
//q_scale_type = 1
//intra_vlc_format = 1
//alternate_scan = 0
//repeat_first_field = 0
//chroma_420_type = 1
//progressive_frame = 1
//composite_display_flag = 0
//
//0x00003A51 Picture Header - P Frame #10
//temporal_reference = 12
//picture_coding_type = 2
//vbv_delay = 65535
//full_pel_forward_vector = 0
//forward_f_code = 7
//
//0x00003A5A Picture Coding Extention
//f_code[0][0] = 1
//f_code[0][1] = 1
//f_code[1][0] = 1
//f_code[1][1] = 1
//intra_dc_precision = 0
//picture_structure = 3 (Frame picture)
//top_field_first = 1
//frame_pred_frame_dct = 1
//concealment_motion_vectors = 0
//q_scale_type = 1
//intra_vlc_format = 1
//alternate_scan = 0
//repeat_first_field = 0
//chroma_420_type = 1
//progressive_frame = 1
//composite_display_flag = 0
//
//0x00003E52 Picture Header - B Frame #11
//temporal_reference = 10
//picture_coding_type = 3
//vbv_delay = 65535
//full_pel_forward_vector = 0
//forward_f_code = 7
//full_pel_backward_vector = 0
//backward_f_code = 7
//
//0x00003E5B Picture Coding Extention
//f_code[0][0] = 1
//f_code[0][1] = 1
//f_code[1][0] = 1
//f_code[1][1] = 1
//intra_dc_precision = 0
//picture_structure = 3 (Frame picture)
//top_field_first = 1
//frame_pred_frame_dct = 1
//concealment_motion_vectors = 0
//q_scale_type = 1
//intra_vlc_format = 1
//alternate_scan = 0
//repeat_first_field = 0
//chroma_420_type = 1
//progressive_frame = 1
//composite_display_flag = 0
//
//0x00004139 Picture Header - B Frame #12
//temporal_reference = 11
//picture_coding_type = 3
//vbv_delay = 65535
//full_pel_forward_vector = 0
//forward_f_code = 7
//full_pel_backward_vector = 0
//backward_f_code = 7
//
//0x00004142 Picture Coding Extention
//f_code[0][0] = 1
//f_code[0][1] = 1
//f_code[1][0] = 1
//f_code[1][1] = 1
//intra_dc_precision = 0
//picture_structure = 3 (Frame picture)
//top_field_first = 1
//frame_pred_frame_dct = 1
//concealment_motion_vectors = 0
//q_scale_type = 1
//intra_vlc_format = 1
//alternate_scan = 0
//repeat_first_field = 0
//chroma_420_type = 1
//progressive_frame = 1
//composite_display_flag = 0
//
//0x000045CF Picture Header - P Frame #13
//temporal_reference = 15
//picture_coding_type = 2
//vbv_delay = 65535
//full_pel_forward_vector = 0
//forward_f_code = 7
//
//0x000045D8 Picture Coding Extention
//f_code[0][0] = 1
//f_code[0][1] = 1
//f_code[1][0] = 1
//f_code[1][1] = 1
//intra_dc_precision = 0
//picture_structure = 3 (Frame picture)
//top_field_first = 1
//frame_pred_frame_dct = 1
//concealment_motion_vectors = 0
//q_scale_type = 1
//intra_vlc_format = 1
//alternate_scan = 0
//repeat_first_field = 0
//chroma_420_type = 1
//progressive_frame = 1
//composite_display_flag = 0
//
//0x000049F9 Picture Header - B Frame #14
//temporal_reference = 13
//picture_coding_type = 3
//vbv_delay = 65535
//full_pel_forward_vector = 0
//forward_f_code = 7
//full_pel_backward_vector = 0
//backward_f_code = 7
//
//0x00004A02 Picture Coding Extention
//f_code[0][0] = 1
//f_code[0][1] = 1
//f_code[1][0] = 1
//f_code[1][1] = 1
//intra_dc_precision = 0
//picture_structure = 3 (Frame picture)
//top_field_first = 1
//frame_pred_frame_dct = 1
//concealment_motion_vectors = 0
//q_scale_type = 1
//intra_vlc_format = 1
//alternate_scan = 0
//repeat_first_field = 0
//chroma_420_type = 1
//progressive_frame = 1
//composite_display_flag = 0
//
//0x00004CB5 Picture Header - B Frame #15
//temporal_reference = 14
//picture_coding_type = 3
//vbv_delay = 65535
//full_pel_forward_vector = 0
//forward_f_code = 7
//full_pel_backward_vector = 0
//backward_f_code = 7
//
//0x00004CBE Picture Coding Extention
//f_code[0][0] = 1
//f_code[0][1] = 1
//f_code[1][0] = 1
//f_code[1][1] = 1
//intra_dc_precision = 0
//picture_structure = 3 (Frame picture)
//top_field_first = 1
//frame_pred_frame_dct = 1
//concealment_motion_vectors = 0
//q_scale_type = 1
//intra_vlc_format = 1
//alternate_scan = 0
//repeat_first_field = 0
//chroma_420_type = 1
//progressive_frame = 1
//composite_display_flag = 0
//
//0x00004F4E Picture Header - P Frame #16
//temporal_reference = 17
//picture_coding_type = 2
//vbv_delay = 65535
//full_pel_forward_vector = 0
//forward_f_code = 7
//
//0x00004F57 Picture Coding Extention
//f_code[0][0] = 1
//f_code[0][1] = 1
//f_code[1][0] = 1
//f_code[1][1] = 1
//intra_dc_precision = 0
//picture_structure = 3 (Frame picture)
//top_field_first = 1
//frame_pred_frame_dct = 1
//concealment_motion_vectors = 0
//q_scale_type = 1
//intra_vlc_format = 1
//alternate_scan = 0
//repeat_first_field = 0
//chroma_420_type = 1
//progressive_frame = 1
//composite_display_flag = 0
//
//0x00005374 Picture Header - B Frame #17
//temporal_reference = 16
//picture_coding_type = 3
//vbv_delay = 65535
//full_pel_forward_vector = 0
//forward_f_code = 7
//full_pel_backward_vector = 0
//backward_f_code = 7
//
//0x0000537D Picture Coding Extention
//f_code[0][0] = 1
//f_code[0][1] = 1
//f_code[1][0] = 1
//f_code[1][1] = 1
//intra_dc_precision = 0
//picture_structure = 3 (Frame picture)
//top_field_first = 1
//frame_pred_frame_dct = 1
//concealment_motion_vectors = 0
//q_scale_type = 1
//intra_vlc_format = 1
//alternate_scan = 0
//repeat_first_field = 0
//chroma_420_type = 1
//progressive_frame = 1
//composite_display_flag = 0
//
//	List(type:String, size=34) check;
//	test_result: action Symbol:[symbol] repeat (34+64) ==> Check:[check] repeat 34
//	do
//	 	foreach int i in 0 .. 10 do
//			if symbol[i] = expected[i] then
//				check[i]:="Test OK";
//			else
//				check[i]:="Test ERROR";
//			end
//		end
//		// Do not check non intra quant matrix
//		foreach int i in 75 .. 97 do
//			if symbol[i-64] = expected[i] then
//				check[i]:="Test OK";
//			else
//				check[i]:="Test ERROR";
//			end
//		end
//	end
//
//end
