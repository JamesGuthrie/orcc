This file describes how to build ORCC.

-------------------------------------------------------------------------------
Build ORCC plugin

Prerequisite: import the debugger plug-in of OpenDF
It is located on the SVN repository at:
  https://opendf.svn.sourceforge.net/svnroot/opendf/trunk/contrib/eclipse/OpendfDebuggerPlugin

1) build the frontend: see INSTALL in "frontend" folder.
2) import the plugin project in Eclipse (it will build automatically)
3) import the backends project in Eclipse (it will build automatically)

At this point you can already use ORCC with the command-line interface.
To use it as an Eclipse plugin, you will need to do the following step.

4) build the fragment that matches your platform: see INSTALL in
"fragments" folder.

Then launch an "Eclipse application" from Eclipse, you should
be able to compile applications with ORCC in the guest Eclipse.

-------------------------------------------------------------------------------
Build a release of ORCC

1) follow steps 1, 2, 3 above
2) follow step 4) above, for every platform
  (see the INSTALL file of the frontend to read about cross-compiling ORCC)
3) import the feature project (folder "feature")
4) import the site project (folder "site"), and build all.

-------------------------------------------------------------------------------
Upload javadoc to Orcc SF.net website

Windows-specific:
  download cwrsync from https://sourceforge.net/projects/sereds/
  set PATH=%PATH%;C:\Program Files\cwRsync\bin

in the trunk:
  cd plugin/javadoc
  rsync -avP --chmod=+rx -e ssh . mwipliez,orcc@web.sourceforge.net:htdocs/javadoc/plugin
  cd ../../backends/javadoc
  rsync -avP --chmod=+rx -e ssh . mwipliez,orcc@web.sourceforge.net:htdocs/javadoc/backends

Note: The --chmod is necessary on Windows to ensure the files will be readable
and executable (for directories) on the web site. Not sure if it is needed
on Linux.

-------------------------------------------------------------------------------
Troubleshooting

frontend: see INSTALL in "frontend" folder
fragments and plugin:
  if Eclipse complains about missing files, or corrupted files, or weird
  issues, try to launch Eclipse with -clean option, this will flush whatever
  is cached, and in general will solve this kind of problem.

